{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable, NgModule, NgZone, Inject, Input, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { BaseDirective2, StyleBuilder, StyleUtils, MediaMarshaller, CoreModule, LAYOUT_CONFIG, validateBasis } from '@angular/flex-layout/core';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst INLINE = 'inline';\n/** @type {?} */\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n  x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n * @param {?} value\n * @return {?}\n */\nfunction isFlowHorizontal(value) {\n  let [flow] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout/layout.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LayoutStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  buildStyles(input) {\n    return buildLayoutCSS(input);\n  }\n}\n/** @nocollapse */\nLayoutStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function LayoutStyleBuilder_Factory() {\n    return new LayoutStyleBuilder();\n  },\n  token: LayoutStyleBuilder,\n  providedIn: \"root\"\n});\nLayoutStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @type {?} */\nconst inputs = ['fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md', 'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md', 'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm', 'fxLayout.gt-md', 'fxLayout.gt-lg'];\n/** @type {?} */\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nclass LayoutDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'layout';\n    this.styleCache = layoutCache;\n    this.init();\n  }\n}\nLayoutDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nLayoutDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: LayoutStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\nclass DefaultLayoutDirective extends LayoutDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs;\n  }\n}\nDefaultLayoutDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector,\n    inputs\n  }]\n}];\n/** @type {?} */\nconst layoutCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-gap/layout-gap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\nclass LayoutGapStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} _styler\n   */\n  constructor(_styler) {\n    super();\n    this._styler = _styler;\n  }\n  /**\n   * @param {?} gapValue\n   * @param {?} parent\n   * @return {?}\n   */\n  buildStyles(gapValue, parent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n  /**\n   * @param {?} gapValue\n   * @param {?} _styles\n   * @param {?} parent\n   * @return {?}\n   */\n  sideEffect(gapValue, _styles, parent) {\n    /** @type {?} */\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      /** @type {?} */\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      /** @type {?} */\n      const lastItem = /** @type {?} */items.pop();\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      /** @type {?} */\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n/** @nocollapse */\nLayoutGapStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function LayoutGapStyleBuilder_Factory() {\n    return new LayoutGapStyleBuilder(ɵɵinject(StyleUtils));\n  },\n  token: LayoutGapStyleBuilder,\n  providedIn: \"root\"\n});\nLayoutGapStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @nocollapse */\nLayoutGapStyleBuilder.ctorParameters = () => [{\n  type: StyleUtils\n}];\n/** @type {?} */\nconst inputs$1 = ['fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md', 'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md', 'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm', 'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'];\n/** @type {?} */\nconst selector$1 = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nclass LayoutGapDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} zone\n   * @param {?} directionality\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.zone = zone;\n    this.directionality = directionality;\n    this.styleUtils = styleUtils;\n    this.layout = 'row'; // default flex-direction\n    // default flex-direction\n    this.DIRECTIVE_KEY = 'layout-gap';\n    this.observerSubject = new Subject();\n    /** @type {?} */\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal.trackValue(this.nativeElement, 'layout').pipe(takeUntil(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));\n  }\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc\n   * @protected\n   * @return {?}\n   */\n  get childrenNodes() {\n    /** @type {?} */\n    const obj = this.nativeElement.children;\n    /** @type {?} */\n    const buffer = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   * @protected\n   * @param {?} matcher\n   * @return {?}\n   */\n  onLayoutChange(matcher) {\n    /** @type {?} */\n    const layout = matcher.value;\n    // Make sure to filter out 'wrap' option\n    /** @type {?} */\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n  /**\n   *\n   * @protected\n   * @param {?} value\n   * @return {?}\n   */\n  updateWithValue(value) {\n    // Gather all non-hidden Element nodes\n    /** @type {?} */\n    const items = this.childrenNodes.filter(\n    /**\n    * @param {?} el\n    * @return {?}\n    */\n    el => el.nodeType === 1 && this.willDisplay(el)).sort(\n    /**\n    * @param {?} a\n    * @param {?} b\n    * @return {?}\n    */\n    (a, b) => {\n      /** @type {?} */\n      const orderA = +this.styler.lookupStyle(a, 'order');\n      /** @type {?} */\n      const orderB = +this.styler.lookupStyle(b, 'order');\n      if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n        return 0;\n      } else {\n        return orderA > orderB ? 1 : -1;\n      }\n    });\n    if (items.length > 0) {\n      /** @type {?} */\n      const directionality = this.directionality.value;\n      /** @type {?} */\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {\n        directionality,\n        items,\n        layout\n      });\n    }\n  }\n  /**\n   * We need to override clearStyles because in most cases mru isn't populated\n   * @protected\n   * @return {?}\n   */\n  clearStyles() {\n    /** @type {?} */\n    const gridMode = Object.keys(this.mru).length > 0;\n    /** @type {?} */\n    const childrenStyle = gridMode ? 'padding' : getMarginType(this.directionality.value, this.layout);\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({\n      [childrenStyle]: ''\n    }, this.childrenNodes);\n  }\n  /**\n   * Determine if an element will show or hide based on current activation\n   * @protected\n   * @param {?} source\n   * @return {?}\n   */\n  willDisplay(source) {\n    /** @type {?} */\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true || value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none';\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  buildChildObservable() {\n    this.zone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver(\n        /**\n        * @param {?} mutations\n        * @return {?}\n        */\n        mutations => {\n          /** @type {?} */\n          const validatedChanges =\n          /**\n          * @param {?} it\n          * @return {?}\n          */\n          it => {\n            return it.addedNodes && it.addedNodes.length > 0 || it.removedNodes && it.removedNodes.length > 0;\n          };\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {\n          childList: true\n        });\n      }\n    });\n  }\n}\nLayoutGapDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nLayoutGapDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Directionality\n}, {\n  type: StyleUtils\n}, {\n  type: LayoutGapStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\nclass DefaultLayoutGapDirective extends LayoutGapDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$1;\n  }\n}\nDefaultLayoutGapDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: selector$1,\n    inputs: inputs$1\n  }]\n}];\n/** @type {?} */\nconst layoutGapCacheRowRtl = new Map();\n/** @type {?} */\nconst layoutGapCacheColumnRtl = new Map();\n/** @type {?} */\nconst layoutGapCacheRowLtr = new Map();\n/** @type {?} */\nconst layoutGapCacheColumnLtr = new Map();\n/** @type {?} */\nconst GRID_SPECIFIER = ' grid';\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\nfunction buildGridPadding(value, directionality) {\n  const [between, below] = value.split(' ');\n  /** @type {?} */\n  const bottom = below || between;\n  /** @type {?} */\n  let paddingRight = '0px';\n  /** @type {?} */\n  let paddingBottom = bottom;\n  /** @type {?} */\n  let paddingLeft = '0px';\n  if (directionality === 'rtl') {\n    paddingLeft = between;\n  } else {\n    paddingRight = between;\n  }\n  return {\n    'padding': `0px ${paddingRight} ${paddingBottom} ${paddingLeft}`\n  };\n}\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\nfunction buildGridMargin(value, directionality) {\n  const [between, below] = value.split(' ');\n  /** @type {?} */\n  const bottom = below || between;\n  /** @type {?} */\n  const minus =\n  /**\n  * @param {?} str\n  * @return {?}\n  */\n  str => `-${str}`;\n  /** @type {?} */\n  let marginRight = '0px';\n  /** @type {?} */\n  let marginBottom = minus(bottom);\n  /** @type {?} */\n  let marginLeft = '0px';\n  if (directionality === 'rtl') {\n    marginLeft = minus(between);\n  } else {\n    marginRight = minus(between);\n  }\n  return {\n    'margin': `0px ${marginRight} ${marginBottom} ${marginLeft}`\n  };\n}\n/**\n * @param {?} directionality\n * @param {?} layout\n * @return {?}\n */\nfunction getMarginType(directionality, layout) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default:\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n/**\n * @param {?} gapValue\n * @param {?} parent\n * @return {?}\n */\nfunction buildGapCSS(gapValue, parent) {\n  /** @type {?} */\n  const key = getMarginType(parent.directionality, parent.layout);\n  /** @type {?} */\n  const margins = Object.assign({}, CLEAR_MARGIN_CSS);\n  margins[key] = gapValue;\n  return margins;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest, ...sources) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n  return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex/flex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} layoutConfig\n   */\n  constructor(layoutConfig) {\n    super();\n    this.layoutConfig = layoutConfig;\n  }\n  /**\n   * @param {?} input\n   * @param {?} parent\n   * @return {?}\n   */\n  buildStyles(input, parent) {\n    let [grow, shrink, ...basisParts] = input.split(' ');\n    /** @type {?} */\n    let basis = basisParts.join(' ');\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    /** @type {?} */\n    const direction = parent.direction.indexOf('column') > -1 ? 'column' : 'row';\n    /** @type {?} */\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    /** @type {?} */\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n    /** @type {?} */\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    /** @type {?} */\n    const usingCalc = hasCalc || basis === 'auto';\n    /** @type {?} */\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    /** @type {?} */\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 || String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n    /** @type {?} */\n    let isValue = hasCalc || hasUnits;\n    grow = grow == '0' ? 0 : grow;\n    shrink = shrink == '0' ? 0 : shrink;\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    /** @type {?} */\n    const isFixed = !grow && !shrink;\n    /** @type {?} */\n    let css = {};\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n    // Use `null` to clear existing styles.\n    /** @type {?} */\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        /** @type {?} */\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : useColumnBasisZero ? '0.000000001px' : 'auto';\n        break;\n      case 'initial': // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN( /** @type {?} */basis)) {\n          basis = basis + '%';\n        }\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n        if (basis === '0px') {\n          basis = '0%';\n        }\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n        break;\n    }\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || isValue && grow ? basis : null;\n      css[max] = isFixed || !usingCalc && shrink ? basis : null;\n    }\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ? hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}` : hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`;\n      }\n    }\n    return (/** @type {?} */extendObject(css, {\n        'box-sizing': 'border-box'\n      })\n    );\n  }\n}\n/** @nocollapse */\nFlexStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function FlexStyleBuilder_Factory() {\n    return new FlexStyleBuilder(ɵɵinject(LAYOUT_CONFIG));\n  },\n  token: FlexStyleBuilder,\n  providedIn: \"root\"\n});\nFlexStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @nocollapse */\nFlexStyleBuilder.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [LAYOUT_CONFIG]\n  }]\n}];\n/** @type {?} */\nconst inputs$2 = ['fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md', 'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md', 'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm', 'fxFlex.gt-md', 'fxFlex.gt-lg'];\n/** @type {?} */\nconst selector$2 = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nclass FlexDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} layoutConfig\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.layoutConfig = layoutConfig;\n    this.marshal = marshal;\n    this.DIRECTIVE_KEY = 'flex';\n    this.direction = undefined;\n    this.wrap = undefined;\n    this.flexGrow = '1';\n    this.flexShrink = '1';\n    this.init();\n  }\n  /**\n   * @return {?}\n   */\n  get shrink() {\n    return this.flexShrink;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set shrink(value) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n  /**\n   * @return {?}\n   */\n  get grow() {\n    return this.flexGrow;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set grow(value) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout').pipe(takeUntil(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align').pipe(takeUntil(this.destroySubject)).subscribe(this.triggerReflow.bind(this));\n    }\n  }\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   * @protected\n   * @param {?} matcher\n   * @return {?}\n   */\n  onLayoutChange(matcher) {\n    /** @type {?} */\n    const layout = matcher.value;\n    /** @type {?} */\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n  /**\n   * Input to this is exclusively the basis input value\n   * @protected\n   * @param {?} value\n   * @return {?}\n   */\n  updateWithValue(value) {\n    /** @type {?} */\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (this.direction === undefined) {\n      this.direction = this.getFlexFlowDirection( /** @type {?} */this.parentElement, addFlexToParent);\n    }\n    if (this.wrap === undefined) {\n      this.wrap = this.hasWrap( /** @type {?} */this.parentElement);\n    }\n    /** @type {?} */\n    const direction = this.direction;\n    /** @type {?} */\n    const isHorizontal = direction.startsWith('row');\n    /** @type {?} */\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    /** @type {?} */\n    const basis = String(value).replace(';', '');\n    /** @type {?} */\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {\n      direction,\n      hasWrap\n    });\n  }\n  /**\n   * Trigger a style reflow, usually based on a shrink/grow input event\n   * @protected\n   * @return {?}\n   */\n  triggerReflow() {\n    /** @type {?} */\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      /** @type {?} */\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\nFlexDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nFlexDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [LAYOUT_CONFIG]\n  }]\n}, {\n  type: FlexStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\nFlexDirective.propDecorators = {\n  shrink: [{\n    type: Input,\n    args: ['fxShrink']\n  }],\n  grow: [{\n    type: Input,\n    args: ['fxGrow']\n  }]\n};\nclass DefaultFlexDirective extends FlexDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$2;\n  }\n}\nDefaultFlexDirective.decorators = [{\n  type: Directive,\n  args: [{\n    inputs: inputs$2,\n    selector: selector$2\n  }]\n}];\n/** @type {?} */\nconst flexRowCache = new Map();\n/** @type {?} */\nconst flexColumnCache = new Map();\n/** @type {?} */\nconst flexRowWrapCache = new Map();\n/** @type {?} */\nconst flexColumnWrapCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-order/flex-order.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexOrderStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  buildStyles(value) {\n    return {\n      order: value && parseInt(value, 10) || ''\n    };\n  }\n}\n/** @nocollapse */\nFlexOrderStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function FlexOrderStyleBuilder_Factory() {\n    return new FlexOrderStyleBuilder();\n  },\n  token: FlexOrderStyleBuilder,\n  providedIn: \"root\"\n});\nFlexOrderStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @type {?} */\nconst inputs$3 = ['fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md', 'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md', 'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm', 'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'];\n/** @type {?} */\nconst selector$3 = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nclass FlexOrderDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'flex-order';\n    this.styleCache = flexOrderCache;\n    this.init();\n  }\n}\nFlexOrderDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nFlexOrderDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: FlexOrderStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\n/** @type {?} */\nconst flexOrderCache = new Map();\nclass DefaultFlexOrderDirective extends FlexOrderDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$3;\n  }\n}\nDefaultFlexOrderDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: selector$3,\n    inputs: inputs$3\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-offset/flex-offset.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexOffsetStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} offset\n   * @param {?} parent\n   * @return {?}\n   */\n  buildStyles(offset, parent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    /** @type {?} */\n    const isPercent = String(offset).indexOf('%') > -1;\n    /** @type {?} */\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    /** @type {?} */\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    /** @type {?} */\n    const styles = isFlowHorizontal(parent.layout) ? {\n      [horizontalLayoutKey]: `${offset}`\n    } : {\n      'margin-top': `${offset}`\n    };\n    return styles;\n  }\n}\n/** @nocollapse */\nFlexOffsetStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function FlexOffsetStyleBuilder_Factory() {\n    return new FlexOffsetStyleBuilder();\n  },\n  token: FlexOffsetStyleBuilder,\n  providedIn: \"root\"\n});\nFlexOffsetStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @type {?} */\nconst inputs$4 = ['fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md', 'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md', 'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm', 'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'];\n/** @type {?} */\nconst selector$4 = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nclass FlexOffsetDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} directionality\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   * @param {?} styler\n   */\n  constructor(elRef, directionality, styleBuilder, marshal, styler) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.directionality = directionality;\n    this.DIRECTIVE_KEY = 'flex-offset';\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout-gap').pipe(takeUntil(this.destroySubject)).subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   * @protected\n   * @param {?=} value\n   * @return {?}\n   */\n  updateWithValue(value = '') {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    /** @type {?} */\n    const layout = this.getFlexFlowDirection( /** @type {?} */this.parentElement, true);\n    /** @type {?} */\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {\n      layout,\n      isRtl\n    });\n  }\n}\nFlexOffsetDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nFlexOffsetDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality\n}, {\n  type: FlexOffsetStyleBuilder\n}, {\n  type: MediaMarshaller\n}, {\n  type: StyleUtils\n}];\nclass DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$4;\n  }\n}\nDefaultFlexOffsetDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: selector$4,\n    inputs: inputs$4\n  }]\n}];\n/** @type {?} */\nconst flexOffsetCacheRowRtl = new Map();\n/** @type {?} */\nconst flexOffsetCacheColumnRtl = new Map();\n/** @type {?} */\nconst flexOffsetCacheRowLtr = new Map();\n/** @type {?} */\nconst flexOffsetCacheColumnLtr = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-align/flex-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexAlignStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  buildStyles(input) {\n    input = input || 'stretch';\n    /** @type {?} */\n    const styles = {};\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n    return styles;\n  }\n}\n/** @nocollapse */\nFlexAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function FlexAlignStyleBuilder_Factory() {\n    return new FlexAlignStyleBuilder();\n  },\n  token: FlexAlignStyleBuilder,\n  providedIn: \"root\"\n});\nFlexAlignStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @type {?} */\nconst inputs$5 = ['fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md', 'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md', 'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm', 'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'];\n/** @type {?} */\nconst selector$5 = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nclass FlexAlignDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'flex-align';\n    this.styleCache = flexAlignCache;\n    this.init();\n  }\n}\nFlexAlignDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nFlexAlignDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: FlexAlignStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\n/** @type {?} */\nconst flexAlignCache = new Map();\nclass DefaultFlexAlignDirective extends FlexAlignDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$5;\n  }\n}\nDefaultFlexAlignDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: selector$5,\n    inputs: inputs$5\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-fill/flex-fill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\nclass FlexFillStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} _input\n   * @return {?}\n   */\n  buildStyles(_input) {\n    return FLEX_FILL_CSS;\n  }\n}\n/** @nocollapse */\nFlexFillStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function FlexFillStyleBuilder_Factory() {\n    return new FlexFillStyleBuilder();\n  },\n  token: FlexFillStyleBuilder,\n  providedIn: \"root\"\n});\nFlexFillStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\nclass FlexFillDirective extends BaseDirective2 {\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.styleCache = flexFillCache;\n    this.addStyles('');\n  }\n}\nFlexFillDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: `[fxFill], [fxFlexFill]`\n  }]\n}];\n/** @nocollapse */\nFlexFillDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: FlexFillStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\n/** @type {?} */\nconst flexFillCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-align/layout-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LayoutAlignStyleBuilder extends StyleBuilder {\n  /**\n   * @param {?} align\n   * @param {?} parent\n   * @return {?}\n   */\n  buildStyles(align, parent) {\n    /** @type {?} */\n    const css = {};\n    const [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default:\n        css['justify-content'] = 'flex-start'; // default main axis\n        break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default:\n        // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n        break;\n    }\n    return (/** @type {?} */extendObject(css, {\n        'display': parent.inline ? 'inline-flex' : 'flex',\n        'flex-direction': parent.layout,\n        'box-sizing': 'border-box',\n        'max-width': crossAxis === 'stretch' ? !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n        'max-height': crossAxis === 'stretch' ? isFlowHorizontal(parent.layout) ? '100%' : null : null\n      })\n    );\n  }\n}\n/** @nocollapse */\nLayoutAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function LayoutAlignStyleBuilder_Factory() {\n    return new LayoutAlignStyleBuilder();\n  },\n  token: LayoutAlignStyleBuilder,\n  providedIn: \"root\"\n});\nLayoutAlignStyleBuilder.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @type {?} */\nconst inputs$6 = ['fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md', 'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md', 'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm', 'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'];\n/** @type {?} */\nconst selector$6 = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n * @see https://css-tricks.com/almanac/properties/j/justify-content/\n * @see https://css-tricks.com/almanac/properties/a/align-items/\n * @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nclass LayoutAlignDirective extends BaseDirective2 {\n  // default inline value\n  /**\n   * @param {?} elRef\n   * @param {?} styleUtils\n   * @param {?} styleBuilder\n   * @param {?} marshal\n   */\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'layout-align';\n    this.layout = 'row'; // default flex-direction\n    // default flex-direction\n    this.inline = false; // default inline value\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout').pipe(takeUntil(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  /**\n   *\n   * @protected\n   * @param {?} value\n   * @return {?}\n   */\n  updateWithValue(value) {\n    /** @type {?} */\n    const layout = this.layout || 'row';\n    /** @type {?} */\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {\n      layout,\n      inline\n    });\n  }\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   * @protected\n   * @param {?} matcher\n   * @return {?}\n   */\n  onLayoutChange(matcher) {\n    /** @type {?} */\n    const layoutKeys = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\nLayoutAlignDirective.decorators = [{\n  type: Directive\n}];\n/** @nocollapse */\nLayoutAlignDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: StyleUtils\n}, {\n  type: LayoutAlignStyleBuilder\n}, {\n  type: MediaMarshaller\n}];\nclass DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$6;\n  }\n}\nDefaultLayoutAlignDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: selector$6,\n    inputs: inputs$6\n  }]\n}];\n/** @type {?} */\nconst layoutAlignHorizontalCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalRevCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalRevCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalRevInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalRevInlineCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ALL_DIRECTIVES = [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\nclass FlexModule {}\nFlexModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [CoreModule, BidiModule],\n    declarations: [...ALL_DIRECTIVES],\n    exports: [...ALL_DIRECTIVES]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective };","map":{"version":3,"names":["Directive","ElementRef","Injectable","NgModule","NgZone","Inject","Input","ɵɵdefineInjectable","ɵɵinject","BaseDirective2","StyleBuilder","StyleUtils","MediaMarshaller","CoreModule","LAYOUT_CONFIG","validateBasis","Directionality","BidiModule","Subject","takeUntil","INLINE","LAYOUT_VALUES","buildLayoutCSS","value","direction","wrap","isInline","validateValue","buildCSS","toLowerCase","inline","split","find","x","validateWrapValue","isFlowHorizontal","flow","indexOf","LayoutStyleBuilder","buildStyles","input","ɵprov","factory","LayoutStyleBuilder_Factory","token","providedIn","decorators","type","args","inputs","selector","LayoutDirective","constructor","elRef","styleUtils","styleBuilder","marshal","DIRECTIVE_KEY","styleCache","layoutCache","init","ctorParameters","DefaultLayoutDirective","arguments","Map","CLEAR_MARGIN_CSS","LayoutGapStyleBuilder","_styler","gapValue","parent","endsWith","GRID_SPECIFIER","slice","buildGridMargin","directionality","sideEffect","_styles","items","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapStyleBuilder_Factory","inputs$1","selector$1","LayoutGapDirective","zone","layout","observerSubject","extraTriggers","change","asObservable","trackValue","nativeElement","pipe","destroySubject","subscribe","onLayoutChange","bind","childrenNodes","obj","children","buffer","i","length","ngAfterContentInit","buildChildObservable","triggerUpdate","ngOnDestroy","observer","disconnect","matcher","updateWithValue","filter","el","nodeType","willDisplay","sort","a","b","orderA","styler","lookupStyle","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","addStyles","clearStyles","gridMode","Object","keys","mru","childrenStyle","getMarginType","source","getValue","undefined","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","next","observe","childList","DefaultLayoutGapDirective","between","below","bottom","paddingRight","paddingBottom","paddingLeft","minus","str","marginRight","marginBottom","marginLeft","key","margins","assign","extendObject","dest","sources","TypeError","hasOwnProperty","FlexStyleBuilder","layoutConfig","grow","shrink","basisParts","basis","join","max","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","css","useColumnBasisZero","hasWrap","FlexStyleBuilder_Factory","inputs$2","selector$2","FlexDirective","flexGrow","flexShrink","triggerReflow","ngOnInit","parentElement","layoutParts","addFlexToParent","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","replace","parts","activatedValue","updateElement","propDecorators","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderStyleBuilder_Factory","inputs$3","selector$3","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","isPx","horizontalLayoutKey","isRtl","styles","FlexOffsetStyleBuilder_Factory","inputs$4","selector$4","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheRowLtr","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignStyleBuilder_Factory","inputs$5","selector$5","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","FlexFillStyleBuilder","_input","FlexFillStyleBuilder_Factory","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","LayoutAlignStyleBuilder_Factory","inputs$6","selector$6","LayoutAlignDirective","layoutAlignHorizontalInlineCache","layoutAlignHorizontalCache","layoutAlignHorizontalRevInlineCache","layoutAlignHorizontalRevCache","layoutAlignVerticalInlineCache","layoutAlignVerticalCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutKeys","includes","DefaultLayoutAlignDirective","ALL_DIRECTIVES","FlexModule","imports","declarations","exports"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/flex-layout/esm2015/flex.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable, NgModule, NgZone, Inject, Input, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { BaseDirective2, StyleBuilder, StyleUtils, MediaMarshaller, CoreModule, LAYOUT_CONFIG, validateBasis } from '@angular/flex-layout/core';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst INLINE = 'inline';\n/** @type {?} */\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find((/**\n     * @param {?} x\n     * @return {?}\n     */\n    x => x === direction))) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n * @param {?} value\n * @return {?}\n */\nfunction isFlowHorizontal(value) {\n    let [flow,] = validateValue(value);\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout/layout.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LayoutStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    buildStyles(input) {\n        return buildLayoutCSS(input);\n    }\n}\n/** @nocollapse */ LayoutStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function LayoutStyleBuilder_Factory() { return new LayoutStyleBuilder(); }, token: LayoutStyleBuilder, providedIn: \"root\" });\nLayoutStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @type {?} */\nconst inputs = [\n    'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n    'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n    'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n    'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\n/** @type {?} */\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nclass LayoutDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'layout';\n        this.styleCache = layoutCache;\n        this.init();\n    }\n}\nLayoutDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nLayoutDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: LayoutStyleBuilder },\n    { type: MediaMarshaller }\n];\nclass DefaultLayoutDirective extends LayoutDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultLayoutDirective.decorators = [\n    { type: Directive, args: [{ selector, inputs },] }\n];\n/** @type {?} */\nconst layoutCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-gap/layout-gap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CLEAR_MARGIN_CSS = {\n    'margin-left': null,\n    'margin-right': null,\n    'margin-top': null,\n    'margin-bottom': null\n};\nclass LayoutGapStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} _styler\n     */\n    constructor(_styler) {\n        super();\n        this._styler = _styler;\n    }\n    /**\n     * @param {?} gapValue\n     * @param {?} parent\n     * @return {?}\n     */\n    buildStyles(gapValue, parent) {\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            // Add the margin to the host element\n            return buildGridMargin(gapValue, parent.directionality);\n        }\n        else {\n            return {};\n        }\n    }\n    /**\n     * @param {?} gapValue\n     * @param {?} _styles\n     * @param {?} parent\n     * @return {?}\n     */\n    sideEffect(gapValue, _styles, parent) {\n        /** @type {?} */\n        const items = parent.items;\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            // For each `element` children, set the padding\n            /** @type {?} */\n            const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n            this._styler.applyStyleToElements(paddingStyles, parent.items);\n        }\n        else {\n            /** @type {?} */\n            const lastItem = (/** @type {?} */ (items.pop()));\n            // For each `element` children EXCEPT the last,\n            // set the margin right/bottom styles...\n            /** @type {?} */\n            const gapCss = buildGapCSS(gapValue, parent);\n            this._styler.applyStyleToElements(gapCss, items);\n            // Clear all gaps for all visible elements\n            this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n        }\n    }\n}\n/** @nocollapse */ LayoutGapStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function LayoutGapStyleBuilder_Factory() { return new LayoutGapStyleBuilder(ɵɵinject(StyleUtils)); }, token: LayoutGapStyleBuilder, providedIn: \"root\" });\nLayoutGapStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nLayoutGapStyleBuilder.ctorParameters = () => [\n    { type: StyleUtils }\n];\n/** @type {?} */\nconst inputs$1 = [\n    'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n    'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n    'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n    'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\n/** @type {?} */\nconst selector$1 = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nclass LayoutGapDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} zone\n     * @param {?} directionality\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.zone = zone;\n        this.directionality = directionality;\n        this.styleUtils = styleUtils;\n        this.layout = 'row'; // default flex-direction\n        // default flex-direction\n        this.DIRECTIVE_KEY = 'layout-gap';\n        this.observerSubject = new Subject();\n        /** @type {?} */\n        const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n        this.init(extraTriggers);\n        this.marshal\n            .trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    /**\n     * Special accessor to query for all child 'element' nodes regardless of type, class, etc\n     * @protected\n     * @return {?}\n     */\n    get childrenNodes() {\n        /** @type {?} */\n        const obj = this.nativeElement.children;\n        /** @type {?} */\n        const buffer = [];\n        // iterate backwards ensuring that length is an UInt32\n        for (let i = obj.length; i--;) {\n            buffer[i] = obj[i];\n        }\n        return buffer;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.buildChildObservable();\n        this.triggerUpdate();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     * @protected\n     * @param {?} matcher\n     * @return {?}\n     */\n    onLayoutChange(matcher) {\n        /** @type {?} */\n        const layout = matcher.value;\n        // Make sure to filter out 'wrap' option\n        /** @type {?} */\n        const direction = layout.split(' ');\n        this.layout = direction[0];\n        if (!LAYOUT_VALUES.find((/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => x === this.layout))) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n    /**\n     *\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    updateWithValue(value) {\n        // Gather all non-hidden Element nodes\n        /** @type {?} */\n        const items = this.childrenNodes\n            .filter((/**\n         * @param {?} el\n         * @return {?}\n         */\n        el => el.nodeType === 1 && this.willDisplay(el)))\n            .sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const orderA = +this.styler.lookupStyle(a, 'order');\n            /** @type {?} */\n            const orderB = +this.styler.lookupStyle(b, 'order');\n            if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n                return 0;\n            }\n            else {\n                return orderA > orderB ? 1 : -1;\n            }\n        }));\n        if (items.length > 0) {\n            /** @type {?} */\n            const directionality = this.directionality.value;\n            /** @type {?} */\n            const layout = this.layout;\n            if (layout === 'row' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheRowRtl;\n            }\n            else if (layout === 'row' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheRowLtr;\n            }\n            else if (layout === 'column' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheColumnRtl;\n            }\n            else if (layout === 'column' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheColumnLtr;\n            }\n            this.addStyles(value, { directionality, items, layout });\n        }\n    }\n    /**\n     * We need to override clearStyles because in most cases mru isn't populated\n     * @protected\n     * @return {?}\n     */\n    clearStyles() {\n        /** @type {?} */\n        const gridMode = Object.keys(this.mru).length > 0;\n        /** @type {?} */\n        const childrenStyle = gridMode ? 'padding' :\n            getMarginType(this.directionality.value, this.layout);\n        // If there are styles on the parent remove them\n        if (gridMode) {\n            super.clearStyles();\n        }\n        // Then remove the children styles too\n        this.styleUtils.applyStyleToElements({ [childrenStyle]: '' }, this.childrenNodes);\n    }\n    /**\n     * Determine if an element will show or hide based on current activation\n     * @protected\n     * @param {?} source\n     * @return {?}\n     */\n    willDisplay(source) {\n        /** @type {?} */\n        const value = this.marshal.getValue(source, 'show-hide');\n        return value === true ||\n            (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    buildChildObservable() {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof MutationObserver !== 'undefined') {\n                this.observer = new MutationObserver((/**\n                 * @param {?} mutations\n                 * @return {?}\n                 */\n                (mutations) => {\n                    /** @type {?} */\n                    const validatedChanges = (/**\n                     * @param {?} it\n                     * @return {?}\n                     */\n                    (it) => {\n                        return (it.addedNodes && it.addedNodes.length > 0) ||\n                            (it.removedNodes && it.removedNodes.length > 0);\n                    });\n                    // update gap styles only for child 'added' or 'removed' events\n                    if (mutations.some(validatedChanges)) {\n                        this.observerSubject.next();\n                    }\n                }));\n                this.observer.observe(this.nativeElement, { childList: true });\n            }\n        }));\n    }\n}\nLayoutGapDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nLayoutGapDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Directionality },\n    { type: StyleUtils },\n    { type: LayoutGapStyleBuilder },\n    { type: MediaMarshaller }\n];\nclass DefaultLayoutGapDirective extends LayoutGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultLayoutGapDirective.decorators = [\n    { type: Directive, args: [{ selector: selector$1, inputs: inputs$1 },] }\n];\n/** @type {?} */\nconst layoutGapCacheRowRtl = new Map();\n/** @type {?} */\nconst layoutGapCacheColumnRtl = new Map();\n/** @type {?} */\nconst layoutGapCacheRowLtr = new Map();\n/** @type {?} */\nconst layoutGapCacheColumnLtr = new Map();\n/** @type {?} */\nconst GRID_SPECIFIER = ' grid';\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\nfunction buildGridPadding(value, directionality) {\n    const [between, below] = value.split(' ');\n    /** @type {?} */\n    const bottom = below || between;\n    /** @type {?} */\n    let paddingRight = '0px';\n    /** @type {?} */\n    let paddingBottom = bottom;\n    /** @type {?} */\n    let paddingLeft = '0px';\n    if (directionality === 'rtl') {\n        paddingLeft = between;\n    }\n    else {\n        paddingRight = between;\n    }\n    return { 'padding': `0px ${paddingRight} ${paddingBottom} ${paddingLeft}` };\n}\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\nfunction buildGridMargin(value, directionality) {\n    const [between, below] = value.split(' ');\n    /** @type {?} */\n    const bottom = below || between;\n    /** @type {?} */\n    const minus = (/**\n     * @param {?} str\n     * @return {?}\n     */\n    (str) => `-${str}`);\n    /** @type {?} */\n    let marginRight = '0px';\n    /** @type {?} */\n    let marginBottom = minus(bottom);\n    /** @type {?} */\n    let marginLeft = '0px';\n    if (directionality === 'rtl') {\n        marginLeft = minus(between);\n    }\n    else {\n        marginRight = minus(between);\n    }\n    return { 'margin': `0px ${marginRight} ${marginBottom} ${marginLeft}` };\n}\n/**\n * @param {?} directionality\n * @param {?} layout\n * @return {?}\n */\nfunction getMarginType(directionality, layout) {\n    switch (layout) {\n        case 'column':\n            return 'margin-bottom';\n        case 'column-reverse':\n            return 'margin-top';\n        case 'row':\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n        case 'row-reverse':\n            return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n        default:\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    }\n}\n/**\n * @param {?} gapValue\n * @param {?} parent\n * @return {?}\n */\nfunction buildGapCSS(gapValue, parent) {\n    /** @type {?} */\n    const key = getMarginType(parent.directionality, parent.layout);\n    /** @type {?} */\n    const margins = Object.assign({}, CLEAR_MARGIN_CSS);\n    margins[key] = gapValue;\n    return margins;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex/flex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} layoutConfig\n     */\n    constructor(layoutConfig) {\n        super();\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * @param {?} input\n     * @param {?} parent\n     * @return {?}\n     */\n    buildStyles(input, parent) {\n        let [grow, shrink, ...basisParts] = input.split(' ');\n        /** @type {?} */\n        let basis = basisParts.join(' ');\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        /** @type {?} */\n        const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n        /** @type {?} */\n        const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        /** @type {?} */\n        const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        /** @type {?} */\n        const hasCalc = String(basis).indexOf('calc') > -1;\n        /** @type {?} */\n        const usingCalc = hasCalc || (basis === 'auto');\n        /** @type {?} */\n        const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        /** @type {?} */\n        const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n            String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n        /** @type {?} */\n        let isValue = (hasCalc || hasUnits);\n        grow = (grow == '0') ? 0 : grow;\n        shrink = (shrink == '0') ? 0 : shrink;\n        // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n        /** @type {?} */\n        const isFixed = !grow && !shrink;\n        /** @type {?} */\n        let css = {};\n        // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n        /** @type {?} */\n        const clearStyles = {\n            'max-width': null,\n            'max-height': null,\n            'min-width': null,\n            'min-height': null\n        };\n        switch (basis || '') {\n            case '':\n                /** @type {?} */\n                const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n                basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n                break;\n            case 'initial': // default\n            case 'nogrow':\n                grow = 0;\n                basis = 'auto';\n                break;\n            case 'grow':\n                basis = '100%';\n                break;\n            case 'noshrink':\n                shrink = 0;\n                basis = 'auto';\n                break;\n            case 'auto':\n                break;\n            case 'none':\n                grow = 0;\n                shrink = 0;\n                basis = 'auto';\n                break;\n            default:\n                // Defaults to percentage sizing unless `px` is explicitly set\n                if (!isValue && !isPercent && !isNaN((/** @type {?} */ (basis)))) {\n                    basis = basis + '%';\n                }\n                // Fix for issue 280\n                if (basis === '0%') {\n                    isValue = true;\n                }\n                if (basis === '0px') {\n                    basis = '0%';\n                }\n                // fix issue #5345\n                if (hasCalc) {\n                    css = extendObject(clearStyles, {\n                        'flex-grow': grow,\n                        'flex-shrink': shrink,\n                        'flex-basis': isValue ? basis : '100%'\n                    });\n                }\n                else {\n                    css = extendObject(clearStyles, {\n                        'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n                    });\n                }\n                break;\n        }\n        if (!(css['flex'] || css['flex-grow'])) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        // Fix for issues 277, 534, and 728\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n            css[min] = isFixed || (isValue && grow) ? basis : null;\n            css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n        }\n        // Fix for issue 528\n        if (!css[min] && !css[max]) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        else {\n            // Fix for issue 660\n            if (parent.hasWrap) {\n                css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n                    (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n                    (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n            }\n        }\n        return (/** @type {?} */ (extendObject(css, { 'box-sizing': 'border-box' })));\n    }\n}\n/** @nocollapse */ FlexStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function FlexStyleBuilder_Factory() { return new FlexStyleBuilder(ɵɵinject(LAYOUT_CONFIG)); }, token: FlexStyleBuilder, providedIn: \"root\" });\nFlexStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nFlexStyleBuilder.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] }\n];\n/** @type {?} */\nconst inputs$2 = [\n    'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n    'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n    'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n    'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\n/** @type {?} */\nconst selector$2 = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nclass FlexDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} layoutConfig\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.layoutConfig = layoutConfig;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = 'flex';\n        this.direction = undefined;\n        this.wrap = undefined;\n        this.flexGrow = '1';\n        this.flexShrink = '1';\n        this.init();\n    }\n    /**\n     * @return {?}\n     */\n    get shrink() { return this.flexShrink; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set shrink(value) {\n        this.flexShrink = value || '1';\n        this.triggerReflow();\n    }\n    /**\n     * @return {?}\n     */\n    get grow() { return this.flexGrow; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set grow(value) {\n        this.flexGrow = value || '1';\n        this.triggerReflow();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.parentElement) {\n            this.marshal.trackValue(this.parentElement, 'layout')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.onLayoutChange.bind(this));\n            this.marshal.trackValue(this.nativeElement, 'layout-align')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerReflow.bind(this));\n        }\n    }\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     * @protected\n     * @param {?} matcher\n     * @return {?}\n     */\n    onLayoutChange(matcher) {\n        /** @type {?} */\n        const layout = matcher.value;\n        /** @type {?} */\n        const layoutParts = layout.split(' ');\n        this.direction = layoutParts[0];\n        this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n        this.triggerUpdate();\n    }\n    /**\n     * Input to this is exclusively the basis input value\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    updateWithValue(value) {\n        /** @type {?} */\n        const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n        if (this.direction === undefined) {\n            this.direction = this.getFlexFlowDirection((/** @type {?} */ (this.parentElement)), addFlexToParent);\n        }\n        if (this.wrap === undefined) {\n            this.wrap = this.hasWrap((/** @type {?} */ (this.parentElement)));\n        }\n        /** @type {?} */\n        const direction = this.direction;\n        /** @type {?} */\n        const isHorizontal = direction.startsWith('row');\n        /** @type {?} */\n        const hasWrap = this.wrap;\n        if (isHorizontal && hasWrap) {\n            this.styleCache = flexRowWrapCache;\n        }\n        else if (isHorizontal && !hasWrap) {\n            this.styleCache = flexRowCache;\n        }\n        else if (!isHorizontal && hasWrap) {\n            this.styleCache = flexColumnWrapCache;\n        }\n        else if (!isHorizontal && !hasWrap) {\n            this.styleCache = flexColumnCache;\n        }\n        /** @type {?} */\n        const basis = String(value).replace(';', '');\n        /** @type {?} */\n        const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n        this.addStyles(parts.join(' '), { direction, hasWrap });\n    }\n    /**\n     * Trigger a style reflow, usually based on a shrink/grow input event\n     * @protected\n     * @return {?}\n     */\n    triggerReflow() {\n        /** @type {?} */\n        const activatedValue = this.activatedValue;\n        if (activatedValue !== undefined) {\n            /** @type {?} */\n            const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n            this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n        }\n    }\n}\nFlexDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nFlexDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] },\n    { type: FlexStyleBuilder },\n    { type: MediaMarshaller }\n];\nFlexDirective.propDecorators = {\n    shrink: [{ type: Input, args: ['fxShrink',] }],\n    grow: [{ type: Input, args: ['fxGrow',] }]\n};\nclass DefaultFlexDirective extends FlexDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultFlexDirective.decorators = [\n    { type: Directive, args: [{ inputs: inputs$2, selector: selector$2 },] }\n];\n/** @type {?} */\nconst flexRowCache = new Map();\n/** @type {?} */\nconst flexColumnCache = new Map();\n/** @type {?} */\nconst flexRowWrapCache = new Map();\n/** @type {?} */\nconst flexColumnWrapCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-order/flex-order.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexOrderStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    buildStyles(value) {\n        return { order: (value && parseInt(value, 10)) || '' };\n    }\n}\n/** @nocollapse */ FlexOrderStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function FlexOrderStyleBuilder_Factory() { return new FlexOrderStyleBuilder(); }, token: FlexOrderStyleBuilder, providedIn: \"root\" });\nFlexOrderStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @type {?} */\nconst inputs$3 = [\n    'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n    'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n    'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n    'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\n/** @type {?} */\nconst selector$3 = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nclass FlexOrderDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-order';\n        this.styleCache = flexOrderCache;\n        this.init();\n    }\n}\nFlexOrderDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nFlexOrderDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: FlexOrderStyleBuilder },\n    { type: MediaMarshaller }\n];\n/** @type {?} */\nconst flexOrderCache = new Map();\nclass DefaultFlexOrderDirective extends FlexOrderDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultFlexOrderDirective.decorators = [\n    { type: Directive, args: [{ selector: selector$3, inputs: inputs$3 },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-offset/flex-offset.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexOffsetStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} offset\n     * @param {?} parent\n     * @return {?}\n     */\n    buildStyles(offset, parent) {\n        if (offset === '') {\n            offset = '0';\n        }\n        /** @type {?} */\n        const isPercent = String(offset).indexOf('%') > -1;\n        /** @type {?} */\n        const isPx = String(offset).indexOf('px') > -1;\n        if (!isPx && !isPercent && !isNaN(+offset)) {\n            offset = offset + '%';\n        }\n        /** @type {?} */\n        const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n        /** @type {?} */\n        const styles = isFlowHorizontal(parent.layout) ?\n            { [horizontalLayoutKey]: `${offset}` } : { 'margin-top': `${offset}` };\n        return styles;\n    }\n}\n/** @nocollapse */ FlexOffsetStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function FlexOffsetStyleBuilder_Factory() { return new FlexOffsetStyleBuilder(); }, token: FlexOffsetStyleBuilder, providedIn: \"root\" });\nFlexOffsetStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @type {?} */\nconst inputs$4 = [\n    'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n    'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n    'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n    'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\n/** @type {?} */\nconst selector$4 = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nclass FlexOffsetDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} directionality\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     * @param {?} styler\n     */\n    constructor(elRef, directionality, styleBuilder, marshal, styler) {\n        super(elRef, styleBuilder, styler, marshal);\n        this.directionality = directionality;\n        this.DIRECTIVE_KEY = 'flex-offset';\n        this.init([this.directionality.change]);\n        // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n        if (this.parentElement) {\n            this.marshal\n                .trackValue(this.parentElement, 'layout-gap')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    updateWithValue(value = '') {\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        /** @type {?} */\n        const layout = this.getFlexFlowDirection((/** @type {?} */ (this.parentElement)), true);\n        /** @type {?} */\n        const isRtl = this.directionality.value === 'rtl';\n        if (layout === 'row' && isRtl) {\n            this.styleCache = flexOffsetCacheRowRtl;\n        }\n        else if (layout === 'row' && !isRtl) {\n            this.styleCache = flexOffsetCacheRowLtr;\n        }\n        else if (layout === 'column' && isRtl) {\n            this.styleCache = flexOffsetCacheColumnRtl;\n        }\n        else if (layout === 'column' && !isRtl) {\n            this.styleCache = flexOffsetCacheColumnLtr;\n        }\n        this.addStyles(value + '', { layout, isRtl });\n    }\n}\nFlexOffsetDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nFlexOffsetDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality },\n    { type: FlexOffsetStyleBuilder },\n    { type: MediaMarshaller },\n    { type: StyleUtils }\n];\nclass DefaultFlexOffsetDirective extends FlexOffsetDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultFlexOffsetDirective.decorators = [\n    { type: Directive, args: [{ selector: selector$4, inputs: inputs$4 },] }\n];\n/** @type {?} */\nconst flexOffsetCacheRowRtl = new Map();\n/** @type {?} */\nconst flexOffsetCacheColumnRtl = new Map();\n/** @type {?} */\nconst flexOffsetCacheRowLtr = new Map();\n/** @type {?} */\nconst flexOffsetCacheColumnLtr = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-align/flex-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FlexAlignStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    buildStyles(input) {\n        input = input || 'stretch';\n        /** @type {?} */\n        const styles = {};\n        // Cross-axis\n        switch (input) {\n            case 'start':\n                styles['align-self'] = 'flex-start';\n                break;\n            case 'end':\n                styles['align-self'] = 'flex-end';\n                break;\n            default:\n                styles['align-self'] = input;\n                break;\n        }\n        return styles;\n    }\n}\n/** @nocollapse */ FlexAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function FlexAlignStyleBuilder_Factory() { return new FlexAlignStyleBuilder(); }, token: FlexAlignStyleBuilder, providedIn: \"root\" });\nFlexAlignStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @type {?} */\nconst inputs$5 = [\n    'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n    'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n    'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n    'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\n/** @type {?} */\nconst selector$5 = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nclass FlexAlignDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-align';\n        this.styleCache = flexAlignCache;\n        this.init();\n    }\n}\nFlexAlignDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nFlexAlignDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: FlexAlignStyleBuilder },\n    { type: MediaMarshaller }\n];\n/** @type {?} */\nconst flexAlignCache = new Map();\nclass DefaultFlexAlignDirective extends FlexAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultFlexAlignDirective.decorators = [\n    { type: Directive, args: [{ selector: selector$5, inputs: inputs$5 },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-fill/flex-fill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst FLEX_FILL_CSS = {\n    'margin': 0,\n    'width': '100%',\n    'height': '100%',\n    'min-width': '100%',\n    'min-height': '100%'\n};\nclass FlexFillStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} _input\n     * @return {?}\n     */\n    buildStyles(_input) {\n        return FLEX_FILL_CSS;\n    }\n}\n/** @nocollapse */ FlexFillStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function FlexFillStyleBuilder_Factory() { return new FlexFillStyleBuilder(); }, token: FlexFillStyleBuilder, providedIn: \"root\" });\nFlexFillStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\nclass FlexFillDirective extends BaseDirective2 {\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.styleCache = flexFillCache;\n        this.addStyles('');\n    }\n}\nFlexFillDirective.decorators = [\n    { type: Directive, args: [{ selector: `[fxFill], [fxFlexFill]` },] }\n];\n/** @nocollapse */\nFlexFillDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: FlexFillStyleBuilder },\n    { type: MediaMarshaller }\n];\n/** @type {?} */\nconst flexFillCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-align/layout-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LayoutAlignStyleBuilder extends StyleBuilder {\n    /**\n     * @param {?} align\n     * @param {?} parent\n     * @return {?}\n     */\n    buildStyles(align, parent) {\n        /** @type {?} */\n        const css = {};\n        const [mainAxis, crossAxis] = align.split(' ');\n        // Main axis\n        switch (mainAxis) {\n            case 'center':\n                css['justify-content'] = 'center';\n                break;\n            case 'space-around':\n                css['justify-content'] = 'space-around';\n                break;\n            case 'space-between':\n                css['justify-content'] = 'space-between';\n                break;\n            case 'space-evenly':\n                css['justify-content'] = 'space-evenly';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['justify-content'] = 'flex-end';\n                break;\n            case 'start':\n            case 'flex-start':\n            default:\n                css['justify-content'] = 'flex-start'; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (crossAxis) {\n            case 'start':\n            case 'flex-start':\n                css['align-items'] = css['align-content'] = 'flex-start';\n                break;\n            case 'center':\n                css['align-items'] = css['align-content'] = 'center';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['align-items'] = css['align-content'] = 'flex-end';\n                break;\n            case 'space-between':\n                css['align-content'] = 'space-between';\n                css['align-items'] = 'stretch';\n                break;\n            case 'space-around':\n                css['align-content'] = 'space-around';\n                css['align-items'] = 'stretch';\n                break;\n            case 'baseline':\n                css['align-content'] = 'stretch';\n                css['align-items'] = 'baseline';\n                break;\n            case 'stretch':\n            default: // 'stretch'\n                css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n                break;\n        }\n        return (/** @type {?} */ (extendObject(css, {\n            'display': parent.inline ? 'inline-flex' : 'flex',\n            'flex-direction': parent.layout,\n            'box-sizing': 'border-box',\n            'max-width': crossAxis === 'stretch' ?\n                !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n            'max-height': crossAxis === 'stretch' ?\n                isFlowHorizontal(parent.layout) ? '100%' : null : null,\n        })));\n    }\n}\n/** @nocollapse */ LayoutAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({ factory: function LayoutAlignStyleBuilder_Factory() { return new LayoutAlignStyleBuilder(); }, token: LayoutAlignStyleBuilder, providedIn: \"root\" });\nLayoutAlignStyleBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @type {?} */\nconst inputs$6 = [\n    'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n    'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n    'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n    'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\n/** @type {?} */\nconst selector$6 = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n * @see https://css-tricks.com/almanac/properties/j/justify-content/\n * @see https://css-tricks.com/almanac/properties/a/align-items/\n * @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nclass LayoutAlignDirective extends BaseDirective2 {\n    // default inline value\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'layout-align';\n        this.layout = 'row'; // default flex-direction\n        // default flex-direction\n        this.inline = false; // default inline value\n        this.init();\n        this.marshal.trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    updateWithValue(value) {\n        /** @type {?} */\n        const layout = this.layout || 'row';\n        /** @type {?} */\n        const inline = this.inline;\n        if (layout === 'row' && inline) {\n            this.styleCache = layoutAlignHorizontalInlineCache;\n        }\n        else if (layout === 'row' && !inline) {\n            this.styleCache = layoutAlignHorizontalCache;\n        }\n        else if (layout === 'row-reverse' && inline) {\n            this.styleCache = layoutAlignHorizontalRevInlineCache;\n        }\n        else if (layout === 'row-reverse' && !inline) {\n            this.styleCache = layoutAlignHorizontalRevCache;\n        }\n        else if (layout === 'column' && inline) {\n            this.styleCache = layoutAlignVerticalInlineCache;\n        }\n        else if (layout === 'column' && !inline) {\n            this.styleCache = layoutAlignVerticalCache;\n        }\n        else if (layout === 'column-reverse' && inline) {\n            this.styleCache = layoutAlignVerticalRevInlineCache;\n        }\n        else if (layout === 'column-reverse' && !inline) {\n            this.styleCache = layoutAlignVerticalRevCache;\n        }\n        this.addStyles(value, { layout, inline });\n    }\n    /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     * @protected\n     * @param {?} matcher\n     * @return {?}\n     */\n    onLayoutChange(matcher) {\n        /** @type {?} */\n        const layoutKeys = matcher.value.split(' ');\n        this.layout = layoutKeys[0];\n        this.inline = matcher.value.includes('inline');\n        if (!LAYOUT_VALUES.find((/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => x === this.layout))) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n}\nLayoutAlignDirective.decorators = [\n    { type: Directive }\n];\n/** @nocollapse */\nLayoutAlignDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: StyleUtils },\n    { type: LayoutAlignStyleBuilder },\n    { type: MediaMarshaller }\n];\nclass DefaultLayoutAlignDirective extends LayoutAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultLayoutAlignDirective.decorators = [\n    { type: Directive, args: [{ selector: selector$6, inputs: inputs$6 },] }\n];\n/** @type {?} */\nconst layoutAlignHorizontalCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalRevCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalRevCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignHorizontalRevInlineCache = new Map();\n/** @type {?} */\nconst layoutAlignVerticalRevInlineCache = new Map();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ALL_DIRECTIVES = [\n    DefaultLayoutDirective,\n    DefaultLayoutGapDirective,\n    DefaultLayoutAlignDirective,\n    DefaultFlexOrderDirective,\n    DefaultFlexOffsetDirective,\n    FlexFillDirective,\n    DefaultFlexAlignDirective,\n    DefaultFlexDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\nclass FlexModule {\n}\nFlexModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CoreModule, BidiModule],\n                declarations: [...ALL_DIRECTIVES],\n                exports: [...ALL_DIRECTIVES]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}