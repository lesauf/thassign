{"ast":null,"code":"import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Attribute, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { MAT_ERROR, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MAT_FORM_FIELD, MatFormFieldControl, MAT_PREFIX, MAT_SUFFIX, matFormFieldAnimations } from '@angular/material/form-field';\nexport { MAT_ERROR as MAT_LEGACY_ERROR, MAT_FORM_FIELD as MAT_LEGACY_FORM_FIELD, MAT_PREFIX as MAT_LEGACY_PREFIX, MAT_SUFFIX as MAT_LEGACY_SUFFIX, MatFormFieldControl as MatLegacyFormFieldControl, getMatFormFieldDuplicatedHintError as getMatLegacyFormFieldDuplicatedHintError, getMatFormFieldMissingControlError as getMatLegacyFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError as getMatLegacyFormFieldPlaceholderConflictError, matFormFieldAnimations as matLegacyFormFieldAnimations } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _c0 = [\"connectionContainer\"];\nconst _c1 = [\"inputContainer\"];\nconst _c2 = [\"label\"];\nfunction MatLegacyFormField_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵelement(6, \"div\", 15)(7, \"div\", 16)(8, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MatLegacyFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵlistener(\"cdkObserveContent\", function MatLegacyFormField_div_4_Template_div_cdkObserveContent_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.updateOutlineGap());\n    });\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r2.appearance != \"outline\");\n  }\n}\nfunction MatLegacyFormField_label_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12._control.placeholder);\n  }\n}\nfunction MatLegacyFormField_label_9_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction MatLegacyFormField_label_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" *\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatLegacyFormField_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 20, 21);\n    i0.ɵɵlistener(\"cdkObserveContent\", function MatLegacyFormField_label_9_Template_label_cdkObserveContent_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.updateOutlineGap());\n    });\n    i0.ɵɵtemplate(2, MatLegacyFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(3, MatLegacyFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    i0.ɵɵtemplate(4, MatLegacyFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    i0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    i0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitchCase\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n  }\n}\nfunction MatLegacyFormField_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵprojection(1, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatLegacyFormField_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n  }\n}\nfunction MatLegacyFormField_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵprojection(1, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n  }\n}\nfunction MatLegacyFormField_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r17._hintLabelId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.hintLabel);\n  }\n}\nfunction MatLegacyFormField_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, MatLegacyFormField_div_14_div_1_Template, 2, 2, \"div\", 28);\n    i0.ɵɵprojection(2, 6);\n    i0.ɵɵelement(3, \"div\", 29);\n    i0.ɵɵprojection(4, 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n  }\n}\nconst _c3 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c4 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId$2 = 0;\n/**\n * Single error message to be shown underneath the form field.\n * @deprecated Use `MatError` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyError {\n  constructor(ariaLive, elementRef) {\n    this.id = `mat-error-${nextUniqueId$2++}`;\n    // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n    // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n    if (!ariaLive) {\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\n    }\n  }\n}\nMatLegacyError.ɵfac = function MatLegacyError_Factory(t) {\n  return new (t || MatLegacyError)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nMatLegacyError.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyError,\n  selectors: [[\"mat-error\"]],\n  hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"],\n  hostVars: 1,\n  hostBindings: function MatLegacyError_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_ERROR,\n    useExisting: MatLegacyError\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error',\n      host: {\n        'class': 'mat-error',\n        '[attr.id]': 'id',\n        'aria-atomic': 'true'\n      },\n      providers: [{\n        provide: MAT_ERROR,\n        useExisting: MatLegacyError\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n *\n * @deprecated Use `_MAT_HINT` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst _MAT_LEGACY_HINT = new InjectionToken('MatHint');\n/**\n * Hint text to be shown underneath the form field control.\n * @deprecated Use `MatHint` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHint {\n  constructor() {\n    /** Whether to align the hint label at the start or end of the line. */\n    this.align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    this.id = `mat-hint-${nextUniqueId$1++}`;\n  }\n}\nMatLegacyHint.ɵfac = function MatLegacyHint_Factory(t) {\n  return new (t || MatLegacyHint)();\n};\nMatLegacyHint.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyHint,\n  selectors: [[\"mat-hint\"]],\n  hostAttrs: [1, \"mat-hint\"],\n  hostVars: 4,\n  hostBindings: function MatLegacyHint_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n      i0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\",\n    id: \"id\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: _MAT_LEGACY_HINT,\n    useExisting: MatLegacyHint\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-hint',\n        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n        '[attr.id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      },\n      providers: [{\n        provide: _MAT_LEGACY_HINT,\n        useExisting: MatLegacyHint\n      }]\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The floating label for a `mat-form-field`.\n * @deprecated Use `MatLabel` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyLabel {}\nMatLegacyLabel.ɵfac = function MatLegacyLabel_Factory(t) {\n  return new (t || MatLegacyLabel)();\n};\nMatLegacyLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyLabel,\n  selectors: [[\"mat-label\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatLegacyPlaceholder {}\nMatLegacyPlaceholder.ɵfac = function MatLegacyPlaceholder_Factory(t) {\n  return new (t || MatLegacyPlaceholder)();\n};\nMatLegacyPlaceholder.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyPlaceholder,\n  selectors: [[\"mat-placeholder\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-placeholder'\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n * @deprecated Use `MatFormField` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFormField extends _MatFormFieldBase {\n  /** The form field appearance style. */\n  get appearance() {\n    return this._appearance;\n  }\n  set appearance(value) {\n    const oldValue = this._appearance;\n    this._appearance = value || this._defaults?.appearance || 'legacy';\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  /** Whether the required marker should be hidden. */\n  get hideRequiredMarker() {\n    return this._hideRequiredMarker;\n  }\n  set hideRequiredMarker(value) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  /** Whether the floating label should always float or not. */\n  _shouldAlwaysFloat() {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n  /** Whether the label can float or not. */\n  _canLabelFloat() {\n    return this.floatLabel !== 'never';\n  }\n  /** Text for the form field hint. */\n  get hintLabel() {\n    return this._hintLabel;\n  }\n  set hintLabel(value) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   */\n  get floatLabel() {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  set floatLabel(value) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._getDefaultFloatLabelState();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get _control() {\n    // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n    //  We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._defaults = _defaults;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     */\n    this._outlineGapCalculationNeededImmediately = false;\n    /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n    this._outlineGapCalculationNeededOnStable = false;\n    this._destroyed = new Subject();\n    this._hideRequiredMarker = false;\n    /** Override for the logic that disables the label animation in certain cases. */\n    this._showAlwaysAnimate = false;\n    /** State of the mat-hint and mat-error animations. */\n    this._subscriptAnimationState = '';\n    this._hintLabel = '';\n    // Unique id for the hint label.\n    this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n    // Unique id for the label element.\n    this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n    this.floatLabel = this._getDefaultFloatLabelState();\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = _defaults?.appearance || 'legacy';\n    if (_defaults) {\n      this._hideRequiredMarker = Boolean(_defaults.hideRequiredMarker);\n      if (_defaults.color) {\n        this.color = this.defaultColor = _defaults.color;\n      }\n    }\n  }\n  /**\n   * Gets the id of the label element. If no label is present, returns `null`.\n   */\n  getLabelId() {\n    return this._hasFloatingLabel() ? this._labelId : null;\n  }\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._connectionContainerRef || this._elementRef;\n  }\n  ngAfterContentInit() {\n    this._validateControlChild();\n    const control = this._control;\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (typeof requestAnimationFrame === 'function') {\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => this.updateOutlineGap());\n          });\n        } else {\n          this.updateOutlineGap();\n        }\n      });\n    }\n  }\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Determines whether a class from the AbstractControlDirective\n   * should be forwarded to the host element.\n   */\n  _shouldForward(prop) {\n    const control = this._control ? this._control.ngControl : null;\n    return control && control[prop];\n  }\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n  _hasLabel() {\n    return !!(this._labelChildNonStatic || this._labelChildStatic);\n  }\n  _shouldLabelFloat() {\n    return this._canLabelFloat() && (this._control && this._control.shouldLabelFloat || this._shouldAlwaysFloat());\n  }\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();\n  }\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages() {\n    return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel() {\n    if (this._hasFloatingLabel() && this._canLabelFloat()) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled && this._label) {\n        this._showAlwaysAnimate = true;\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   */\n  _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n  /** Does any extra processing that is required when handling the hints. */\n  _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   */\n  _validateHints() {\n    if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      let startHint;\n      let endHint;\n      this._hintChildren.forEach(hint => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n  /** Gets the default float label state. */\n  _getDefaultFloatLabelState() {\n    return this._defaults && this._defaults.floatLabel || 'auto';\n  }\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  _syncDescribedByIds() {\n    if (this._control) {\n      let ids = [];\n      // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n      if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n        ids.push(...this._control.userAriaDescribedBy.split(' '));\n      }\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids.push(...this._errorChildren.map(error => error.id));\n      }\n      this._control.setDescribedByIds(ids);\n    }\n  }\n  /** Throws an error if the form field's control is missing. */\n  _validateControlChild() {\n    if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   */\n  updateOutlineGap() {\n    const labelEl = this._label ? this._label.nativeElement : null;\n    const container = this._connectionContainerRef.nativeElement;\n    const outlineStartSelector = '.mat-form-field-outline-start';\n    const outlineGapSelector = '.mat-form-field-outline-gap';\n    // getBoundingClientRect isn't available on the server.\n    if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n      return;\n    }\n    // If there is no content, set the gap elements to zero.\n    if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n      const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n      for (let i = 0; i < gapElements.length; i++) {\n        gapElements[i].style.width = '0';\n      }\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (!this._isAttachedToDOM()) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n    let startWidth = 0;\n    let gapWidth = 0;\n    const startEls = container.querySelectorAll(outlineStartSelector);\n    const gapEls = container.querySelectorAll(outlineGapSelector);\n    if (this._label && this._label.nativeElement.children.length) {\n      const containerRect = container.getBoundingClientRect();\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be recalculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n      const containerStart = this._getStartEnd(containerRect);\n      const labelChildren = labelEl.children;\n      const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n      let labelWidth = 0;\n      for (let i = 0; i < labelChildren.length; i++) {\n        labelWidth += labelChildren[i].offsetWidth;\n      }\n      startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n    for (let i = 0; i < startEls.length; i++) {\n      startEls[i].style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls[i].style.width = `${gapWidth}px`;\n    }\n    this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = false;\n  }\n  /** Gets the start end of the rect considering the current directionality. */\n  _getStartEnd(rect) {\n    return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n  }\n  /** Checks whether the form field is attached to the DOM. */\n  _isAttachedToDOM() {\n    const element = this._elementRef.nativeElement;\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement.contains(element);\n  }\n}\nMatLegacyFormField.ɵfac = function MatLegacyFormField_Factory(t) {\n  return new (t || MatLegacyFormField)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatLegacyFormField.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatLegacyFormField,\n  selectors: [[\"mat-form-field\"]],\n  contentQueries: function MatLegacyFormField_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n      i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n      i0.ɵɵcontentQuery(dirIndex, MatLegacyLabel, 5);\n      i0.ɵɵcontentQuery(dirIndex, MatLegacyLabel, 7);\n      i0.ɵɵcontentQuery(dirIndex, MatLegacyPlaceholder, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n      i0.ɵɵcontentQuery(dirIndex, _MAT_LEGACY_HINT, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    }\n  },\n  viewQuery: function MatLegacyFormField_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-form-field\"],\n  hostVars: 40,\n  hostBindings: function MatLegacyFormField_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    appearance: \"appearance\",\n    hideRequiredMarker: \"hideRequiredMarker\",\n    hintLabel: \"hintLabel\",\n    floatLabel: \"floatLabel\"\n  },\n  exportAs: [\"matFormField\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_FORM_FIELD,\n    useExisting: MatLegacyFormField\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 15,\n  vars: 8,\n  consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 3, \"cdkObserveContentDisabled\", \"cdkObserveContent\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\", 3, \"cdkObserveContentDisabled\", \"cdkObserveContent\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]],\n  template: function MatLegacyFormField_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n      i0.ɵɵlistener(\"click\", function MatLegacyFormField_Template_div_click_1_listener($event) {\n        return ctx._control.onContainerClick && ctx._control.onContainerClick($event);\n      });\n      i0.ɵɵtemplate(3, MatLegacyFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, MatLegacyFormField_div_4_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵprojection(7);\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtemplate(9, MatLegacyFormField_label_9_Template, 5, 16, \"label\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, MatLegacyFormField_div_10_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, MatLegacyFormField_div_11_Template, 2, 4, \"div\", 10);\n      i0.ɵɵelementStart(12, \"div\", 11);\n      i0.ɵɵtemplate(13, MatLegacyFormField_div_13_Template, 2, 1, \"div\", 12);\n      i0.ɵɵtemplate(14, MatLegacyFormField_div_14_Template, 5, 2, \"div\", 13);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    }\n  },\n  dependencies: [i3.NgIf, i3.NgSwitch, i3.NgSwitchCase, i4.CdkObserveContent],\n  styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}.mat-form-field .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-button-base,.mat-form-field .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-button-base{width:40px;height:40px;padding:8px 0}.mat-form-field .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{font-size:1em;display:inline-block;margin:-2px 0 1px}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button{font-size:inherit;width:1.5em;height:1.5em;padding:0}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{line-height:1.5em;margin:0}.mat-form-field .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:baseline}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matFormFieldAnimations.transitionMessages]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      animations: [matFormFieldAnimations.transitionMessages],\n      host: {\n        'class': 'mat-form-field',\n        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '[class._mat-animation-noopable]': '!_animationsEnabled'\n      },\n      inputs: ['color'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatLegacyFormField\n      }],\n      template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}.mat-form-field .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-button-base,.mat-form-field .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-button-base{width:40px;height:40px;padding:8px 0}.mat-form-field .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{font-size:1em;display:inline-block;margin:-2px 0 1px}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button{font-size:inherit;width:1.5em;height:1.5em;padding:0}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{line-height:1.5em;margin:0}.mat-form-field .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:baseline}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i2.Platform\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    appearance: [{\n      type: Input\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }],\n    floatLabel: [{\n      type: Input\n    }],\n    _connectionContainerRef: [{\n      type: ViewChild,\n      args: ['connectionContainer', {\n        static: true\n      }]\n    }],\n    _inputContainerRef: [{\n      type: ViewChild,\n      args: ['inputContainer']\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    _controlNonStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _controlStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl, {\n        static: true\n      }]\n    }],\n    _labelChildNonStatic: [{\n      type: ContentChild,\n      args: [MatLegacyLabel]\n    }],\n    _labelChildStatic: [{\n      type: ContentChild,\n      args: [MatLegacyLabel, {\n        static: true\n      }]\n    }],\n    _placeholderChild: [{\n      type: ContentChild,\n      args: [MatLegacyPlaceholder]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MAT_ERROR, {\n        descendants: true\n      }]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [_MAT_LEGACY_HINT, {\n        descendants: true\n      }]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MAT_PREFIX, {\n        descendants: true\n      }]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MAT_SUFFIX, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Prefix to be placed in front of the form field.\n * @deprecated Use `MatPrefix` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyPrefix {}\nMatLegacyPrefix.ɵfac = function MatLegacyPrefix_Factory(t) {\n  return new (t || MatLegacyPrefix)();\n};\nMatLegacyPrefix.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyPrefix,\n  selectors: [[\"\", \"matPrefix\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_PREFIX,\n    useExisting: MatLegacyPrefix\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix]',\n      providers: [{\n        provide: MAT_PREFIX,\n        useExisting: MatLegacyPrefix\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suffix to be placed at the end of the form field.\n * @deprecated Use `MatSuffix` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySuffix {}\nMatLegacySuffix.ɵfac = function MatLegacySuffix_Factory(t) {\n  return new (t || MatLegacySuffix)();\n};\nMatLegacySuffix.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacySuffix,\n  selectors: [[\"\", \"matSuffix\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SUFFIX,\n    useExisting: MatLegacySuffix\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix]',\n      providers: [{\n        provide: MAT_SUFFIX,\n        useExisting: MatLegacySuffix\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatFormFieldModule` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFormFieldModule {}\nMatLegacyFormFieldModule.ɵfac = function MatLegacyFormFieldModule_Factory(t) {\n  return new (t || MatLegacyFormFieldModule)();\n};\nMatLegacyFormFieldModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLegacyFormFieldModule\n});\nMatLegacyFormFieldModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, ObserversModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MatLegacyError, MatLegacyFormField, MatLegacyHint, MatLegacyLabel, MatLegacyPlaceholder, MatLegacyPrefix, MatLegacySuffix],\n      imports: [CommonModule, MatCommonModule, ObserversModule],\n      exports: [MatCommonModule, MatLegacyError, MatLegacyFormField, MatLegacyHint, MatLegacyLabel, MatLegacyPlaceholder, MatLegacyPrefix, MatLegacySuffix]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS, MatLegacyError, MatLegacyFormField, MatLegacyFormFieldModule, MatLegacyHint, MatLegacyLabel, MatLegacyPlaceholder, MatLegacyPrefix, MatLegacySuffix, _MAT_LEGACY_HINT };","map":{"version":3,"names":["i4","ObserversModule","i3","CommonModule","i0","Directive","Attribute","Input","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","ViewChild","ContentChild","ContentChildren","NgModule","mixinColor","MatCommonModule","MAT_ERROR","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","MAT_FORM_FIELD","MatFormFieldControl","MAT_PREFIX","MAT_SUFFIX","matFormFieldAnimations","MAT_LEGACY_ERROR","MAT_LEGACY_FORM_FIELD","MAT_LEGACY_PREFIX","MAT_LEGACY_SUFFIX","MatLegacyFormFieldControl","getMatLegacyFormFieldDuplicatedHintError","getMatLegacyFormFieldMissingControlError","getMatLegacyFormFieldPlaceholderConflictError","matLegacyFormFieldAnimations","i1","coerceBooleanProperty","Subject","merge","fromEvent","startWith","takeUntil","take","i2","ANIMATION_MODULE_TYPE","_c0","_c1","_c2","MatLegacyFormField_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","MatLegacyFormField_div_4_Template","_r10","ɵɵgetCurrentView","ɵɵlistener","MatLegacyFormField_div_4_Template_div_cdkObserveContent_0_listener","ɵɵrestoreView","ctx_r9","ɵɵnextContext","ɵɵresetView","updateOutlineGap","ɵɵprojection","ctx_r2","ɵɵproperty","appearance","MatLegacyFormField_label_9_ng_container_2_Template","ɵɵtext","ctx_r12","ɵɵadvance","ɵɵtextInterpolate","_control","placeholder","MatLegacyFormField_label_9_ng_content_3_Template","MatLegacyFormField_label_9_span_4_Template","MatLegacyFormField_label_9_Template","_r16","MatLegacyFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r15","ɵɵtemplate","ctx_r4","ɵɵclassProp","empty","_shouldAlwaysFloat","color","_labelId","_hasLabel","ɵɵattribute","id","hideRequiredMarker","required","disabled","MatLegacyFormField_div_10_Template","MatLegacyFormField_div_11_Template","ctx_r6","MatLegacyFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatLegacyFormField_div_14_div_1_Template","ctx_r17","_hintLabelId","hintLabel","MatLegacyFormField_div_14_Template","ctx_r8","_c3","_c4","nextUniqueId$2","MatLegacyError","constructor","ariaLive","elementRef","nativeElement","setAttribute","ɵfac","MatLegacyError_Factory","t","ɵɵinjectAttribute","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatLegacyError_HostBindings","inputs","features","ɵɵProvidersFeature","provide","useExisting","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","undefined","decorators","nextUniqueId$1","_MAT_LEGACY_HINT","MatLegacyHint","align","MatLegacyHint_Factory","MatLegacyHint_HostBindings","MatLegacyLabel","MatLegacyLabel_Factory","MatLegacyPlaceholder","MatLegacyPlaceholder_Factory","nextUniqueId","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","_elementRef","MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS","MatLegacyFormField","_appearance","value","oldValue","_defaults","_outlineGapCalculationNeededOnStable","_hideRequiredMarker","floatLabel","_showAlwaysAnimate","_canLabelFloat","_hintLabel","_processHints","_floatLabel","_getDefaultFloatLabelState","_changeDetectorRef","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_dir","_platform","_ngZone","_animationMode","_outlineGapCalculationNeededImmediately","_destroyed","_animationsEnabled","Boolean","defaultColor","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","control","controlType","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","runOutsideAngular","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","requestAnimationFrame","ngAfterContentChecked","ngAfterViewInit","detectChanges","ngOnDestroy","next","complete","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","length","errorState","_animateAndLockLabel","_label","_validateHints","startHint","endHint","forEach","hint","ids","userAriaDescribedBy","push","split","find","map","error","setDescribedByIds","labelEl","container","outlineStartSelector","outlineGapSelector","isBrowser","children","textContent","trim","gapElements","querySelectorAll","i","style","width","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","getBoundingClientRect","height","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","Math","abs","rect","right","left","element","getRootNode","rootNode","document","documentElement","contains","MatLegacyFormField_Factory","ChangeDetectorRef","Directionality","Platform","NgZone","ɵcmp","ɵɵdefineComponent","contentQueries","MatLegacyFormField_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatLegacyFormField_Query","ɵɵviewQuery","_inputContainerRef","MatLegacyFormField_HostBindings","autofilled","focused","exportAs","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacyFormField_Template","ɵɵprojectionDef","MatLegacyFormField_Template_div_click_1_listener","$event","onContainerClick","dependencies","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","styles","encapsulation","data","animation","transitionMessages","changeDetection","animations","None","OnPush","static","descendants","MatLegacyPrefix","MatLegacyPrefix_Factory","MatLegacySuffix","MatLegacySuffix_Factory","MatLegacyFormFieldModule","MatLegacyFormFieldModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/material/fesm2020/legacy-form-field.mjs"],"sourcesContent":["import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Attribute, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { MAT_ERROR, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MAT_FORM_FIELD, MatFormFieldControl, MAT_PREFIX, MAT_SUFFIX, matFormFieldAnimations } from '@angular/material/form-field';\nexport { MAT_ERROR as MAT_LEGACY_ERROR, MAT_FORM_FIELD as MAT_LEGACY_FORM_FIELD, MAT_PREFIX as MAT_LEGACY_PREFIX, MAT_SUFFIX as MAT_LEGACY_SUFFIX, MatFormFieldControl as MatLegacyFormFieldControl, getMatFormFieldDuplicatedHintError as getMatLegacyFormFieldDuplicatedHintError, getMatFormFieldMissingControlError as getMatLegacyFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError as getMatLegacyFormFieldPlaceholderConflictError, matFormFieldAnimations as matLegacyFormFieldAnimations } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Single error message to be shown underneath the form field.\n * @deprecated Use `MatError` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatLegacyError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatLegacyError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatLegacyError }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n *\n * @deprecated Use `_MAT_HINT` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst _MAT_LEGACY_HINT = new InjectionToken('MatHint');\n/**\n * Hint text to be shown underneath the form field control.\n * @deprecated Use `MatHint` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatLegacyHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_LEGACY_HINT, useExisting: MatLegacyHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_LEGACY_HINT, useExisting: MatLegacyHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The floating label for a `mat-form-field`.\n * @deprecated Use `MatLabel` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyLabel {\n}\nMatLegacyLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatLegacyPlaceholder {\n}\nMatLegacyPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n * @deprecated Use `MatFormField` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFormField extends _MatFormFieldBase {\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || this._defaults?.appearance || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        this._hideRequiredMarker = false;\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults?.appearance || 'legacy';\n        if (_defaults) {\n            this._hideRequiredMarker = Boolean(_defaults.hideRequiredMarker);\n            if (_defaults.color) {\n                this.color = this.defaultColor = _defaults.color;\n            }\n        }\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        const container = this._connectionContainerRef.nativeElement;\n        const outlineStartSelector = '.mat-form-field-outline-start';\n        const outlineGapSelector = '.mat-form-field-outline-gap';\n        // getBoundingClientRect isn't available on the server.\n        if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n            return;\n        }\n        // If there is no content, set the gap elements to zero.\n        if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n            const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n            for (let i = 0; i < gapElements.length; i++) {\n                gapElements[i].style.width = '0';\n            }\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const startEls = container.querySelectorAll(outlineStartSelector);\n        const gapEls = container.querySelectorAll(outlineGapSelector);\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be recalculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatLegacyFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatLegacyFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatLegacyFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLegacyLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLegacyLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatLegacyPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_LEGACY_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}.mat-form-field .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-button-base,.mat-form-field .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-button-base{width:40px;height:40px;padding:8px 0}.mat-form-field .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{font-size:1em;display:inline-block;margin:-2px 0 1px}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button{font-size:inherit;width:1.5em;height:1.5em;padding:0}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{line-height:1.5em;margin:0}.mat-form-field .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:baseline}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatLegacyFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}.mat-form-field .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-button-base,.mat-form-field .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-button-base{width:40px;height:40px;padding:8px 0}.mat-form-field .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{font-size:1em;display:inline-block;margin:-2px 0 1px}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button{font-size:inherit;width:1.5em;height:1.5em;padding:0}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle .mat-mdc-icon-button .mat-icon{line-height:1.5em;margin:0}.mat-form-field .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-datepicker-toggle .mat-mdc-button-base{vertical-align:baseline}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS]\n                }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLegacyLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLegacyLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatLegacyPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_LEGACY_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Prefix to be placed in front of the form field.\n * @deprecated Use `MatPrefix` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyPrefix {\n}\nMatLegacyPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatLegacyPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatLegacyPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suffix to be placed at the end of the form field.\n * @deprecated Use `MatSuffix` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySuffix {\n}\nMatLegacySuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLegacySuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacySuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatLegacySuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatLegacySuffix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatFormFieldModule` from `@angular/material/form-field` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFormFieldModule {\n}\nMatLegacyFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLegacyFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormFieldModule, declarations: [MatLegacyError,\n        MatLegacyFormField,\n        MatLegacyHint,\n        MatLegacyLabel,\n        MatLegacyPlaceholder,\n        MatLegacyPrefix,\n        MatLegacySuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatLegacyError,\n        MatLegacyFormField,\n        MatLegacyHint,\n        MatLegacyLabel,\n        MatLegacyPlaceholder,\n        MatLegacyPrefix,\n        MatLegacySuffix] });\nMatLegacyFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormFieldModule, imports: [CommonModule, MatCommonModule, ObserversModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MatLegacyError,\n                        MatLegacyFormField,\n                        MatLegacyHint,\n                        MatLegacyLabel,\n                        MatLegacyPlaceholder,\n                        MatLegacyPrefix,\n                        MatLegacySuffix,\n                    ],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatLegacyError,\n                        MatLegacyFormField,\n                        MatLegacyHint,\n                        MatLegacyLabel,\n                        MatLegacyPlaceholder,\n                        MatLegacyPrefix,\n                        MatLegacySuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_FORM_FIELD_DEFAULT_OPTIONS, MatLegacyError, MatLegacyFormField, MatLegacyFormFieldModule, MatLegacyHint, MatLegacyLabel, MatLegacyPlaceholder, MatLegacyPrefix, MatLegacySuffix, _MAT_LEGACY_HINT };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}