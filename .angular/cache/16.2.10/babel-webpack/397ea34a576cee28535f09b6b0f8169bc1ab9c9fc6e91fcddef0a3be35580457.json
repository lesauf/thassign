{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Directive, NgModule } from '@angular/core';\nimport { MAT_LEGACY_OPTION_PARENT_COMPONENT, MAT_LEGACY_OPTGROUP, MatLegacyOption, MatLegacyOptionModule } from '@angular/material/legacy-core';\nimport { _MatAutocompleteBase, _MatAutocompleteTriggerBase, _MatAutocompleteOriginBase, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/autocomplete';\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MatAutocompleteSelectedEvent as MatLegacyAutocompleteSelectedEvent, getMatAutocompleteMissingPanelError as getMatLegacyAutocompleteMissingPanelError } from '@angular/material/autocomplete';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatAutocomplete` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nfunction MatLegacyAutocomplete_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0, 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0._getPanelAriaLabelledby(formFieldId_r1));\n  }\n}\nconst _c0 = [\"*\"];\nclass MatLegacyAutocomplete extends _MatAutocompleteBase {\n  constructor() {\n    super(...arguments);\n    this._visibleClass = 'mat-autocomplete-visible';\n    this._hiddenClass = 'mat-autocomplete-hidden';\n  }\n}\nMatLegacyAutocomplete.ɵfac = /* @__PURE__ */function () {\n  let ɵMatLegacyAutocomplete_BaseFactory;\n  return function MatLegacyAutocomplete_Factory(t) {\n    return (ɵMatLegacyAutocomplete_BaseFactory || (ɵMatLegacyAutocomplete_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyAutocomplete)))(t || MatLegacyAutocomplete);\n  };\n}();\nMatLegacyAutocomplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatLegacyAutocomplete,\n  selectors: [[\"mat-autocomplete\"]],\n  contentQueries: function MatLegacyAutocomplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_LEGACY_OPTGROUP, 5);\n      i0.ɵɵcontentQuery(dirIndex, MatLegacyOption, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-autocomplete\"],\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matAutocomplete\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_LEGACY_OPTION_PARENT_COMPONENT,\n    useExisting: MatLegacyAutocomplete\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]],\n  template: function MatLegacyAutocomplete_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatLegacyAutocomplete_ng_template_0_Template, 3, 4, \"ng-template\");\n    }\n  },\n  dependencies: [i1.NgClass],\n  styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyAutocomplete, [{\n    type: Component,\n    args: [{\n      selector: 'mat-autocomplete',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'matAutocomplete',\n      inputs: ['disableRipple'],\n      host: {\n        'class': 'mat-autocomplete'\n      },\n      providers: [{\n        provide: MAT_LEGACY_OPTION_PARENT_COMPONENT,\n        useExisting: MatLegacyAutocomplete\n      }],\n      template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"]\n    }]\n  }], null, {\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_LEGACY_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatLegacyOption, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n * @deprecated Use `MAT_AUTOCOMPLETE_VALUE_ACCESSOR` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatLegacyAutocompleteTrigger),\n  multi: true\n};\n/**\n * @deprecated Use `MatAutocompleteTrigger` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n  constructor() {\n    super(...arguments);\n    this._aboveClass = 'mat-autocomplete-panel-above';\n  }\n}\nMatLegacyAutocompleteTrigger.ɵfac = /* @__PURE__ */function () {\n  let ɵMatLegacyAutocompleteTrigger_BaseFactory;\n  return function MatLegacyAutocompleteTrigger_Factory(t) {\n    return (ɵMatLegacyAutocompleteTrigger_BaseFactory || (ɵMatLegacyAutocompleteTrigger_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyAutocompleteTrigger)))(t || MatLegacyAutocompleteTrigger);\n  };\n}();\nMatLegacyAutocompleteTrigger.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyAutocompleteTrigger,\n  selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]],\n  hostAttrs: [1, \"mat-autocomplete-trigger\"],\n  hostVars: 7,\n  hostBindings: function MatLegacyAutocompleteTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function MatLegacyAutocompleteTrigger_focusin_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"blur\", function MatLegacyAutocompleteTrigger_blur_HostBindingHandler() {\n        return ctx._onTouched();\n      })(\"input\", function MatLegacyAutocompleteTrigger_input_HostBindingHandler($event) {\n        return ctx._handleInput($event);\n      })(\"keydown\", function MatLegacyAutocompleteTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatLegacyAutocompleteTrigger_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", ctx.autocompleteDisabled ? null : \"listbox\");\n    }\n  },\n  exportAs: [\"matAutocompleteTrigger\"],\n  features: [i0.ɵɵProvidersFeature([MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyAutocompleteTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n      host: {\n        'class': 'mat-autocomplete-trigger',\n        '[attr.autocomplete]': 'autocompleteAttribute',\n        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n        // a little earlier. This avoids issues where IE delays the focusing of the input.\n        '(focusin)': '_handleFocus()',\n        '(blur)': '_onTouched()',\n        '(input)': '_handleInput($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick()'\n      },\n      exportAs: 'matAutocompleteTrigger',\n      providers: [MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n * @deprecated Use `MatAutocompleteOrigin` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteOrigin extends _MatAutocompleteOriginBase {}\nMatLegacyAutocompleteOrigin.ɵfac = /* @__PURE__ */function () {\n  let ɵMatLegacyAutocompleteOrigin_BaseFactory;\n  return function MatLegacyAutocompleteOrigin_Factory(t) {\n    return (ɵMatLegacyAutocompleteOrigin_BaseFactory || (ɵMatLegacyAutocompleteOrigin_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyAutocompleteOrigin)))(t || MatLegacyAutocompleteOrigin);\n  };\n}();\nMatLegacyAutocompleteOrigin.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyAutocompleteOrigin,\n  selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]],\n  exportAs: [\"matAutocompleteOrigin\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyAutocompleteOrigin, [{\n    type: Directive,\n    args: [{\n      selector: '[matAutocompleteOrigin]',\n      exportAs: 'matAutocompleteOrigin'\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatAutocompleteModule` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteModule {}\nMatLegacyAutocompleteModule.ɵfac = function MatLegacyAutocompleteModule_Factory(t) {\n  return new (t || MatLegacyAutocompleteModule)();\n};\nMatLegacyAutocompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLegacyAutocompleteModule\n});\nMatLegacyAutocompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule, CdkScrollableModule, MatLegacyOptionModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule],\n      exports: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin, CdkScrollableModule, MatLegacyOptionModule, MatCommonModule],\n      declarations: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin],\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR, MatLegacyAutocomplete, MatLegacyAutocompleteModule, MatLegacyAutocompleteOrigin, MatLegacyAutocompleteTrigger };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Directive","NgModule","MAT_LEGACY_OPTION_PARENT_COMPONENT","MAT_LEGACY_OPTGROUP","MatLegacyOption","MatLegacyOptionModule","_MatAutocompleteBase","_MatAutocompleteTriggerBase","_MatAutocompleteOriginBase","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MatAutocompleteSelectedEvent","MatLegacyAutocompleteSelectedEvent","getMatAutocompleteMissingPanelError","getMatLegacyAutocompleteMissingPanelError","i1","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","NG_VALUE_ACCESSOR","MatLegacyAutocomplete_ng_template_0_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","formFieldId_r1","id","ctx_r0","ɵɵnextContext","ɵɵproperty","_classList","ɵɵattribute","ariaLabel","_getPanelAriaLabelledby","_c0","MatLegacyAutocomplete","constructor","arguments","_visibleClass","_hiddenClass","ɵfac","ɵMatLegacyAutocomplete_BaseFactory","MatLegacyAutocomplete_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","MatLegacyAutocomplete_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","optionGroups","options","hostAttrs","inputs","disableRipple","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacyAutocomplete_Template","ɵɵprojectionDef","ɵɵtemplate","dependencies","NgClass","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","providers","descendants","MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR","MatLegacyAutocompleteTrigger","multi","_aboveClass","ɵMatLegacyAutocompleteTrigger_BaseFactory","MatLegacyAutocompleteTrigger_Factory","ɵdir","ɵɵdefineDirective","hostVars","hostBindings","MatLegacyAutocompleteTrigger_HostBindings","ɵɵlistener","MatLegacyAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatLegacyAutocompleteTrigger_blur_HostBindingHandler","_onTouched","MatLegacyAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatLegacyAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","MatLegacyAutocompleteTrigger_click_HostBindingHandler","_handleClick","autocompleteAttribute","autocompleteDisabled","panelOpen","activeOption","toString","autocomplete","MatLegacyAutocompleteOrigin","ɵMatLegacyAutocompleteOrigin_BaseFactory","MatLegacyAutocompleteOrigin_Factory","MatLegacyAutocompleteModule","MatLegacyAutocompleteModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/material/fesm2020/legacy-autocomplete.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Directive, NgModule } from '@angular/core';\nimport { MAT_LEGACY_OPTION_PARENT_COMPONENT, MAT_LEGACY_OPTGROUP, MatLegacyOption, MatLegacyOptionModule } from '@angular/material/legacy-core';\nimport { _MatAutocompleteBase, _MatAutocompleteTriggerBase, _MatAutocompleteOriginBase, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/autocomplete';\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MatAutocompleteSelectedEvent as MatLegacyAutocompleteSelectedEvent, getMatAutocompleteMissingPanelError as getMatLegacyAutocompleteMissingPanelError } from '@angular/material/autocomplete';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatAutocomplete` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatLegacyAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatLegacyAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacyAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_LEGACY_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatLegacyOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacyAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_LEGACY_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatLegacyOption, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n * @deprecated Use `MAT_AUTOCOMPLETE_VALUE_ACCESSOR` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacyAutocompleteTrigger),\n    multi: true,\n};\n/**\n * @deprecated Use `MatAutocompleteTrigger` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatLegacyAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\", \"click\": \"_handleClick()\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick()',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n * @deprecated Use `MatAutocompleteOrigin` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatLegacyAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatAutocompleteModule` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteModule {\n}\nMatLegacyAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLegacyAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteModule, declarations: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin], imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule], exports: [MatLegacyAutocomplete,\n        MatLegacyAutocompleteTrigger,\n        MatLegacyAutocompleteOrigin,\n        CdkScrollableModule,\n        MatLegacyOptionModule,\n        MatCommonModule] });\nMatLegacyAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule, CdkScrollableModule,\n        MatLegacyOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatLegacyAutocomplete,\n                        MatLegacyAutocompleteTrigger,\n                        MatLegacyAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatLegacyOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR, MatLegacyAutocomplete, MatLegacyAutocompleteModule, MatLegacyAutocompleteOrigin, MatLegacyAutocompleteTrigger };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}