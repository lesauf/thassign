{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { UntypedFormArray, UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { IsArray, IsString, IsObject, IsOptional } from 'class-validator';\nimport { DateTime } from 'luxon';\nimport { Assignment } from '@src/app/core/models/assignment/assignment.model';\nexport class Program {\n  /**\r\n   * @todo Sanitize/clean the object passed (apply some rules,\r\n   * like women can not give public talks ...)\r\n   */\n  constructor(props, allParts, allUsers) {\n    if (props) {\n      // Converting week and month to Luxon date if not\n      if (!props['week']?.hasOwnProperty('isLuxonDateTime')) {\n        const refDate = DateTime.utc();\n        props['week'] = DateTime.fromISO(props['week'], {\n          zone: refDate.zone,\n          locale: refDate.locale\n        });\n        props['month'] = DateTime.fromISO(props['month'], {\n          zone: refDate.zone,\n          locale: refDate.locale\n        });\n      }\n      // Object to convert\n      props['assignments'] = props['assignments'] ? props['assignments'].map(roughAssignment => new Assignment(roughAssignment, allParts, allUsers)) : [];\n      console.log();\n      // Assign the properties to this object\n      Object.assign(this, props);\n    }\n  }\n  /**\r\n   * Convert to a standard object for saving\r\n   */\n  toObject() {\n    let assignments = [];\n    // Convert assignments to simple objects\n    this.assignments.forEach(ass => {\n      assignments.push(ass.toObject());\n    });\n    return {\n      month: this.week.toFormat('yyyyMM'),\n      week: this.week.toFormat('yyyyMMdd'),\n      assignments: assignments,\n      meeting: this.meeting,\n      ...(this._id ? {\n        _id: this._id\n      } : null),\n      ...(this.ownerId ? {\n        ownerId: this.ownerId\n      } : null)\n    };\n  }\n  toFormGroup(ownerId) {\n    const assignmentsArray = [];\n    // Prepare the assignments form array\n    this.assignments.forEach(assignment => {\n      assignmentsArray[assignment.position] = assignment.toFormGroup();\n    });\n    // Now prepare the program form itself\n    return new UntypedFormGroup({\n      _id: new UntypedFormControl(this._id || ''),\n      month: new UntypedFormControl(this.month || ''),\n      week: new UntypedFormControl(this.week || ''),\n      meeting: new UntypedFormControl(this.meeting || ''),\n      ownerId: new UntypedFormControl(this.ownerId || ownerId),\n      assignments: new UntypedFormArray(assignmentsArray)\n    });\n  }\n}\n__decorate([IsObject(), IsOptional()], Program.prototype, \"_id\", void 0);\n__decorate([IsString()], Program.prototype, \"meeting\", void 0);\n__decorate([IsObject(), IsOptional()], Program.prototype, \"month\", void 0);\n__decorate([IsObject(), IsOptional()], Program.prototype, \"week\", void 0);\n__decorate([IsArray()], Program.prototype, \"assignments\", void 0);\n__decorate([IsString()], Program.prototype, \"ownerId\", void 0);","map":{"version":3,"names":["UntypedFormArray","UntypedFormControl","UntypedFormGroup","IsArray","IsString","IsObject","IsOptional","DateTime","Assignment","Program","constructor","props","allParts","allUsers","hasOwnProperty","refDate","utc","fromISO","zone","locale","map","roughAssignment","console","log","Object","assign","toObject","assignments","forEach","ass","push","month","week","toFormat","meeting","_id","ownerId","toFormGroup","assignmentsArray","assignment","position","__decorate"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\core\\models\\program.model.ts"],"sourcesContent":["import { UntypedFormArray, UntypedFormControl, UntypedFormGroup } from '@angular/forms';\r\nimport {\r\n  IsArray,\r\n  IsBoolean,\r\n  IsEmail,\r\n  IsString,\r\n  IsIn,\r\n  IsInt,\r\n  IsObject,\r\n  IsOptional,\r\n  MinLength,\r\n  IsDate,\r\n  IsDateString,\r\n} from 'class-validator';\r\nimport { DateTime } from 'luxon';\r\n\r\nimport { Assignment } from '@src/app/core/models/assignment/assignment.model';\r\nimport { Part } from './part/part.model';\r\nimport { User } from './user/user.model';\r\n\r\nexport class Program {\r\n  /**\r\n   * For reference programs the _id is the month string\r\n   */\r\n  @IsObject()\r\n  @IsOptional()\r\n  _id: string;\r\n\r\n  @IsString()\r\n  meeting: 'midweek' | 'weekend';\r\n\r\n  /**\r\n   * Store the month to speed up search\r\n   */\r\n  @IsObject()\r\n  @IsOptional()\r\n  month: DateTime;\r\n\r\n  @IsObject()\r\n  @IsOptional()\r\n  week: DateTime;\r\n\r\n  @IsArray()\r\n  assignments: Assignment[];\r\n\r\n  @IsString()\r\n  ownerId: string;\r\n\r\n  /**\r\n   * @todo Sanitize/clean the object passed (apply some rules,\r\n   * like women can not give public talks ...)\r\n   */\r\n  constructor(props?: object, allParts?: Part[], allUsers?: User[]) {\r\n    if (props) {\r\n      // Converting week and month to Luxon date if not\r\n      if (!props['week']?.hasOwnProperty('isLuxonDateTime')) {\r\n        const refDate = DateTime.utc();\r\n\r\n        props['week'] = DateTime.fromISO(props['week'], {\r\n          zone: refDate.zone,\r\n          locale: refDate.locale,\r\n        });\r\n        props['month'] = DateTime.fromISO(props['month'], {\r\n          zone: refDate.zone,\r\n          locale: refDate.locale,\r\n        });\r\n      }\r\n\r\n      // Object to convert\r\n      props['assignments'] = props['assignments']\r\n        ? props['assignments'].map(\r\n            (roughAssignment: any) =>\r\n              new Assignment(roughAssignment, allParts, allUsers)\r\n          )\r\n        : [];\r\n\r\n      console.log();\r\n      // Assign the properties to this object\r\n      Object.assign(this, props);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert to a standard object for saving\r\n   */\r\n  toObject(): object {\r\n    let assignments = [];\r\n\r\n    // Convert assignments to simple objects\r\n    this.assignments.forEach((ass) => {\r\n      assignments.push(ass.toObject());\r\n    });\r\n\r\n    return {\r\n      month: this.week.toFormat('yyyyMM'),\r\n      week: this.week.toFormat('yyyyMMdd'),\r\n      assignments: assignments,\r\n      meeting: this.meeting,\r\n      ...(this._id ? { _id: this._id } : null),\r\n      ...(this.ownerId ? { ownerId: this.ownerId } : null),\r\n    };\r\n  }\r\n\r\n  toFormGroup(ownerId: string) {\r\n    const assignmentsArray = [];\r\n\r\n    // Prepare the assignments form array\r\n    this.assignments.forEach((assignment) => {\r\n      assignmentsArray[assignment.position] = assignment.toFormGroup();\r\n    });\r\n\r\n    // Now prepare the program form itself\r\n    return new UntypedFormGroup({\r\n      _id: new UntypedFormControl(this._id || ''),\r\n      month: new UntypedFormControl(this.month || ''),\r\n      week: new UntypedFormControl(this.week || ''),\r\n      meeting: new UntypedFormControl(this.meeting || ''),\r\n      ownerId: new UntypedFormControl(this.ownerId || ownerId),\r\n      assignments: new UntypedFormArray(assignmentsArray),\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}