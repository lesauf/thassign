{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\n/**\r\n * A container for all of the Logger instances\r\n */\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\nvar levelStringToEnum = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n/**\r\n * The default log level\r\n */\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\nvar ConsoleMethod = (_a = {}, _a[LogLevel.DEBUG] = 'log', _a[LogLevel.VERBOSE] = 'log', _a[LogLevel.INFO] = 'info', _a[LogLevel.WARN] = 'warn', _a[LogLevel.ERROR] = 'error', _a);\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\nvar defaultLogHandler = function (instance, logType) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  if (logType < instance.logLevel) {\n    return;\n  }\n  var now = new Date().toISOString();\n  var method = ConsoleMethod[logType];\n  if (method) {\n    console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n  } else {\n    throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n  }\n};\nvar Logger = /** @class */function () {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  function Logger(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The main (internal) log handler for the Logger instance.\r\n     * Can be set to a new function in internal package code but not by user.\r\n     */\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * The optional, additional, user-defined log handler for the Logger instance.\r\n     */\n    this._userLogHandler = null;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n    instances.push(this);\n  }\n  Object.defineProperty(Logger.prototype, \"logLevel\", {\n    get: function () {\n      return this._logLevel;\n    },\n    set: function (val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\n      }\n      this._logLevel = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  // Workaround for setter/getter having to be the same type.\n  Logger.prototype.setLogLevel = function (val) {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  };\n  Object.defineProperty(Logger.prototype, \"logHandler\", {\n    get: function () {\n      return this._logHandler;\n    },\n    set: function (val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n      this._logHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Logger.prototype, \"userLogHandler\", {\n    get: function () {\n      return this._userLogHandler;\n    },\n    set: function (val) {\n      this._userLogHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n  Logger.prototype.debug = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\n  };\n  Logger.prototype.log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\n  };\n  Logger.prototype.info = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\n  };\n  Logger.prototype.warn = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\n  };\n  Logger.prototype.error = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\n  };\n  return Logger;\n}();\nfunction setLogLevel(level) {\n  instances.forEach(function (inst) {\n    inst.setLogLevel(level);\n  });\n}\nfunction setUserLogHandler(logCallback, options) {\n  var _loop_1 = function (instance) {\n    var customLogLevel = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = function (instance, level) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n        var message = args.map(function (arg) {\n          if (arg == null) {\n            return null;\n          } else if (typeof arg === 'string') {\n            return arg;\n          } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n            return arg.toString();\n          } else if (arg instanceof Error) {\n            return arg.message;\n          } else {\n            try {\n              return JSON.stringify(arg);\n            } catch (ignored) {\n              return null;\n            }\n          }\n        }).filter(function (arg) {\n          return arg;\n        }).join(' ');\n        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase(),\n            message: message,\n            args: args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  };\n  for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\n    var instance = instances_1[_i];\n    _loop_1(instance);\n  }\n}\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_a","instances","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","_i","logLevel","now","Date","toISOString","method","console","apply","name","Error","Logger","_logLevel","_logHandler","_userLogHandler","push","Object","defineProperty","prototype","get","set","val","TypeError","enumerable","configurable","setLogLevel","debug","log","info","warn","error","level","forEach","inst","setUserLogHandler","logCallback","options","_loop_1","customLogLevel","userLogHandler","message","map","arg","toString","JSON","stringify","ignored","filter","join","toLowerCase","type","instances_1"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@firebase/logger/dist/index.esm.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAcA,CAAA,EAAG;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAED,CAAC,IAAIG,SAAS,CAACF,CAAC,CAAC,CAACG,MAAM;EACnF,KAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAC,CAAC,EAAEO,CAAC,GAAG,CAAC,EAAEN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAC5C,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAC,CAAC,EAAEQ,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,CAAC,CAACJ,MAAM,EAAEK,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEF,CAAC,EAAE,EAC7DF,CAAC,CAACE,CAAC,CAAC,GAAGC,CAAC,CAACC,CAAC,CAAC;EACnB,OAAOJ,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,EAAE;AACN;AACA;AACA;AACA,IAAIC,SAAS,GAAG,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ;AACZ,CAAC,UAAUA,QAAQ,EAAE;EACjBA,QAAQ,CAACA,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACzCA,QAAQ,CAACA,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC7CA,QAAQ,CAACA,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACvCA,QAAQ,CAACA,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACvCA,QAAQ,CAACA,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACzCA,QAAQ,CAACA,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;AAC/C,CAAC,EAAEA,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAIC,iBAAiB,GAAG;EACpB,OAAO,EAAED,QAAQ,CAACE,KAAK;EACvB,SAAS,EAAEF,QAAQ,CAACG,OAAO;EAC3B,MAAM,EAAEH,QAAQ,CAACI,IAAI;EACrB,MAAM,EAAEJ,QAAQ,CAACK,IAAI;EACrB,OAAO,EAAEL,QAAQ,CAACM,KAAK;EACvB,QAAQ,EAAEN,QAAQ,CAACO;AACvB,CAAC;AACD;AACA;AACA;AACA,IAAIC,eAAe,GAAGR,QAAQ,CAACI,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,aAAa,IAAIX,EAAE,GAAG,CAAC,CAAC,EACxBA,EAAE,CAACE,QAAQ,CAACE,KAAK,CAAC,GAAG,KAAK,EAC1BJ,EAAE,CAACE,QAAQ,CAACG,OAAO,CAAC,GAAG,KAAK,EAC5BL,EAAE,CAACE,QAAQ,CAACI,IAAI,CAAC,GAAG,MAAM,EAC1BN,EAAE,CAACE,QAAQ,CAACK,IAAI,CAAC,GAAG,MAAM,EAC1BP,EAAE,CAACE,QAAQ,CAACM,KAAK,CAAC,GAAG,OAAO,EAC5BR,EAAE,CAAC;AACP;AACA;AACA;AACA;AACA;AACA,IAAIY,iBAAiB,GAAG,SAAAA,CAAUC,QAAQ,EAAEC,OAAO,EAAE;EACjD,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;IAC1CD,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;EAChC;EACA,IAAIF,OAAO,GAAGD,QAAQ,CAACI,QAAQ,EAAE;IAC7B;EACJ;EACA,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAClC,IAAIC,MAAM,GAAGV,aAAa,CAACG,OAAO,CAAC;EACnC,IAAIO,MAAM,EAAE;IACRC,OAAO,CAACD,MAAM,CAAC,CAACE,KAAK,CAACD,OAAO,EAAElC,cAAc,CAAC,CAAC,GAAG,GAAG8B,GAAG,GAAG,KAAK,GAAGL,QAAQ,CAACW,IAAI,GAAG,GAAG,CAAC,EAAET,IAAI,CAAC,CAAC;EACnG,CAAC,MACI;IACD,MAAM,IAAIU,KAAK,CAAC,6DAA6D,GAAGX,OAAO,GAAG,GAAG,CAAC;EAClG;AACJ,CAAC;AACD,IAAIY,MAAM,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;AACA;AACA;EACI,SAASA,MAAMA,CAACF,IAAI,EAAE;IAClB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB;AACR;AACA;IACQ,IAAI,CAACG,SAAS,GAAGjB,eAAe;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACkB,WAAW,GAAGhB,iBAAiB;IACpC;AACR;AACA;IACQ,IAAI,CAACiB,eAAe,GAAG,IAAI;IAC3B;AACR;AACA;IACQ5B,SAAS,CAAC6B,IAAI,CAAC,IAAI,CAAC;EACxB;EACAC,MAAM,CAACC,cAAc,CAACN,MAAM,CAACO,SAAS,EAAE,UAAU,EAAE;IAChDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACP,SAAS;IACzB,CAAC;IACDQ,GAAG,EAAE,SAAAA,CAAUC,GAAG,EAAE;MAChB,IAAI,EAAEA,GAAG,IAAIlC,QAAQ,CAAC,EAAE;QACpB,MAAM,IAAImC,SAAS,CAAC,kBAAkB,GAAGD,GAAG,GAAG,2BAA2B,CAAC;MAC/E;MACA,IAAI,CAACT,SAAS,GAAGS,GAAG;IACxB,CAAC;IACDE,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACAb,MAAM,CAACO,SAAS,CAACO,WAAW,GAAG,UAAUJ,GAAG,EAAE;IAC1C,IAAI,CAACT,SAAS,GAAG,OAAOS,GAAG,KAAK,QAAQ,GAAGjC,iBAAiB,CAACiC,GAAG,CAAC,GAAGA,GAAG;EAC3E,CAAC;EACDL,MAAM,CAACC,cAAc,CAACN,MAAM,CAACO,SAAS,EAAE,YAAY,EAAE;IAClDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACN,WAAW;IAC3B,CAAC;IACDO,GAAG,EAAE,SAAAA,CAAUC,GAAG,EAAE;MAChB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC3B,MAAM,IAAIC,SAAS,CAAC,mDAAmD,CAAC;MAC5E;MACA,IAAI,CAACT,WAAW,GAAGQ,GAAG;IAC1B,CAAC;IACDE,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFR,MAAM,CAACC,cAAc,CAACN,MAAM,CAACO,SAAS,EAAE,gBAAgB,EAAE;IACtDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACL,eAAe;IAC/B,CAAC;IACDM,GAAG,EAAE,SAAAA,CAAUC,GAAG,EAAE;MAChB,IAAI,CAACP,eAAe,GAAGO,GAAG;IAC9B,CAAC;IACDE,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;EACIb,MAAM,CAACO,SAAS,CAACQ,KAAK,GAAG,YAAY;IACjC,IAAI1B,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;IAC5B;IACA,IAAI,CAACa,eAAe,IAAI,IAAI,CAACA,eAAe,CAACN,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACE,KAAK,CAAC,EAAEW,IAAI,CAAC,CAAC;IACtG,IAAI,CAACa,WAAW,CAACL,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACE,KAAK,CAAC,EAAEW,IAAI,CAAC,CAAC;EAC9E,CAAC;EACDW,MAAM,CAACO,SAAS,CAACS,GAAG,GAAG,YAAY;IAC/B,IAAI3B,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;IAC5B;IACA,IAAI,CAACa,eAAe,IAAI,IAAI,CAACA,eAAe,CAACN,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACG,OAAO,CAAC,EAAEU,IAAI,CAAC,CAAC;IACxG,IAAI,CAACa,WAAW,CAACL,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACG,OAAO,CAAC,EAAEU,IAAI,CAAC,CAAC;EAChF,CAAC;EACDW,MAAM,CAACO,SAAS,CAACU,IAAI,GAAG,YAAY;IAChC,IAAI5B,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;IAC5B;IACA,IAAI,CAACa,eAAe,IAAI,IAAI,CAACA,eAAe,CAACN,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACI,IAAI,CAAC,EAAES,IAAI,CAAC,CAAC;IACrG,IAAI,CAACa,WAAW,CAACL,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACI,IAAI,CAAC,EAAES,IAAI,CAAC,CAAC;EAC7E,CAAC;EACDW,MAAM,CAACO,SAAS,CAACW,IAAI,GAAG,YAAY;IAChC,IAAI7B,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;IAC5B;IACA,IAAI,CAACa,eAAe,IAAI,IAAI,CAACA,eAAe,CAACN,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACK,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAC;IACrG,IAAI,CAACa,WAAW,CAACL,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACK,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAC;EAC7E,CAAC;EACDW,MAAM,CAACO,SAAS,CAACY,KAAK,GAAG,YAAY;IACjC,IAAI9B,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;IAC5B;IACA,IAAI,CAACa,eAAe,IAAI,IAAI,CAACA,eAAe,CAACN,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACM,KAAK,CAAC,EAAEO,IAAI,CAAC,CAAC;IACtG,IAAI,CAACa,WAAW,CAACL,KAAK,CAAC,IAAI,EAAEnC,cAAc,CAAC,CAAC,IAAI,EAAEc,QAAQ,CAACM,KAAK,CAAC,EAAEO,IAAI,CAAC,CAAC;EAC9E,CAAC;EACD,OAAOW,MAAM;AACjB,CAAC,CAAC,CAAE;AACJ,SAASc,WAAWA,CAACM,KAAK,EAAE;EACxB7C,SAAS,CAAC8C,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC9BA,IAAI,CAACR,WAAW,CAACM,KAAK,CAAC;EAC3B,CAAC,CAAC;AACN;AACA,SAASG,iBAAiBA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC7C,IAAIC,OAAO,GAAG,SAAAA,CAAUvC,QAAQ,EAAE;IAC9B,IAAIwC,cAAc,GAAG,IAAI;IACzB,IAAIF,OAAO,IAAIA,OAAO,CAACL,KAAK,EAAE;MAC1BO,cAAc,GAAGlD,iBAAiB,CAACgD,OAAO,CAACL,KAAK,CAAC;IACrD;IACA,IAAII,WAAW,KAAK,IAAI,EAAE;MACtBrC,QAAQ,CAACyC,cAAc,GAAG,IAAI;IAClC,CAAC,MACI;MACDzC,QAAQ,CAACyC,cAAc,GAAG,UAAUzC,QAAQ,EAAEiC,KAAK,EAAE;QACjD,IAAI/B,IAAI,GAAG,EAAE;QACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGxB,SAAS,CAACC,MAAM,EAAEuB,EAAE,EAAE,EAAE;UAC1CD,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,GAAGxB,SAAS,CAACwB,EAAE,CAAC;QAChC;QACA,IAAIuC,OAAO,GAAGxC,IAAI,CACbyC,GAAG,CAAC,UAAUC,GAAG,EAAE;UACpB,IAAIA,GAAG,IAAI,IAAI,EAAE;YACb,OAAO,IAAI;UACf,CAAC,MACI,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAOA,GAAG;UACd,CAAC,MACI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,SAAS,EAAE;YAC1D,OAAOA,GAAG,CAACC,QAAQ,CAAC,CAAC;UACzB,CAAC,MACI,IAAID,GAAG,YAAYhC,KAAK,EAAE;YAC3B,OAAOgC,GAAG,CAACF,OAAO;UACtB,CAAC,MACI;YACD,IAAI;cACA,OAAOI,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;YAC9B,CAAC,CACD,OAAOI,OAAO,EAAE;cACZ,OAAO,IAAI;YACf;UACJ;QACJ,CAAC,CAAC,CACGC,MAAM,CAAC,UAAUL,GAAG,EAAE;UAAE,OAAOA,GAAG;QAAE,CAAC,CAAC,CACtCM,IAAI,CAAC,GAAG,CAAC;QACd,IAAIjB,KAAK,KAAKO,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAGA,cAAc,GAAGxC,QAAQ,CAACI,QAAQ,CAAC,EAAE;UACtGiC,WAAW,CAAC;YACRJ,KAAK,EAAE5C,QAAQ,CAAC4C,KAAK,CAAC,CAACkB,WAAW,CAAC,CAAC;YACpCT,OAAO,EAAEA,OAAO;YAChBxC,IAAI,EAAEA,IAAI;YACVkD,IAAI,EAAEpD,QAAQ,CAACW;UACnB,CAAC,CAAC;QACN;MACJ,CAAC;IACL;EACJ,CAAC;EACD,KAAK,IAAIR,EAAE,GAAG,CAAC,EAAEkD,WAAW,GAAGjE,SAAS,EAAEe,EAAE,GAAGkD,WAAW,CAACzE,MAAM,EAAEuB,EAAE,EAAE,EAAE;IACrE,IAAIH,QAAQ,GAAGqD,WAAW,CAAClD,EAAE,CAAC;IAC9BoC,OAAO,CAACvC,QAAQ,CAAC;EACrB;AACJ;AAEA,SAASX,QAAQ,EAAEwB,MAAM,EAAEc,WAAW,EAAES,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}