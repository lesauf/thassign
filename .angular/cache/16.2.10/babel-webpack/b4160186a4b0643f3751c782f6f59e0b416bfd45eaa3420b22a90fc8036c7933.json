{"ast":null,"code":"import { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/app/modules/assignments/services/assignment.service\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/legacy-dialog\";\nimport * as i6 from \"@angular/material/legacy-form-field\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/legacy-list\";\nimport * as i10 from \"@angular/material/legacy-tooltip\";\nimport * as i11 from \"@src/app/shared/pipes/translate-date.pipe\";\nconst _c0 = [\"options\"];\nfunction AssignableListComponent_mat_list_option_37_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵpipe(5, \"translateDate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", ctx_r3.getUserLastAssignmentNameTranslated(user_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(2, 3, i0.ɵɵpipeBind1(3, 5, \"last\")), \" \", i0.ɵɵpipeBind1(4, 7, i0.ɵɵpipeBind2(5, 9, ctx_r3.getUserLastAssignment(user_r2).week, \"DATE_MED\")), \" \");\n  }\n}\nfunction AssignableListComponent_mat_list_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-option\", 9)(1, \"h2\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AssignableListComponent_mat_list_option_37_span_3_Template, 6, 12, \"span\", 11);\n    i0.ɵɵelementStart(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"titlecase\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", user_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.fullName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getUserAssignments(user_r2).length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(6, 5, i0.ɵɵpipeBind1(7, 7, \"total\")), \" \", ctx_r1.getAssignmentsNumber(user_r2), \"\");\n  }\n}\n/**\r\n * Display a list of assignable brothers to choose from for an assignment\r\n */\nexport class AssignableListComponent {\n  constructor(injector, assignmentService, translateService) {\n    this.injector = injector;\n    this.assignmentService = assignmentService;\n    this.translateService = translateService;\n    this.dialogRef = null;\n    this.dialogRef = this.injector.get(MatDialogRef, null);\n    this.data = this.injector.get(MAT_DIALOG_DATA, null);\n  }\n  ngOnInit() {\n    this.userList = this.data.options;\n    // By default sort the users bay last assignments date\n    this.sortByLastAssignmentDate();\n  }\n  closeDialog() {\n    this.dialogRef.close({\n      data: this.options.selectedOptions.selected[0].value\n    });\n  }\n  /**\r\n   * Sort assignable list according to some fields\r\n   */\n  sort(field) {\n    if (field === 'date') {\n      // Sort by last assignment date\n      this.sortByLastAssignmentDate();\n    } else if (field === 'assignmentsNumber') {\n      // Sort by assignments number\n      this.sortByAssignmentsTotal();\n    } else {\n      // Sort by the given field\n      this.data.options.sort((a, b) => {\n        if (typeof a[field] === 'string') {\n          // easier sort if strings\n          return a[field].localeCompare(b[field]);\n        } else {\n          if (a[field] < b[field]) {\n            return -1;\n          }\n          if (a[field] > b[field]) {\n            return 1;\n          }\n          return 0;\n        }\n      });\n    }\n  }\n  sortByLastAssignmentDate() {\n    // Sort by last assignment date\n    this.data.options.sort((a, b) => {\n      // Sort by last assignment's date\n      // nulls sort after anything else\n      if (this.getUserLastAssignment(a) === undefined) {\n        return -1;\n      } else if (this.getUserLastAssignment(b) === undefined) {\n        return 1;\n      } else if (this.getUserLastAssignment(a).week.equals(this.getUserLastAssignment(b).week)) {\n        // equal items sort equally\n        return 0;\n      } else if (this.getUserLastAssignment(a).week < this.getUserLastAssignment(b).week) {\n        // otherwise, older sorts first\n        return -1;\n      } else {\n        // recent sorts first\n        return 1;\n      }\n    });\n  }\n  sortByAssignmentsTotal() {\n    this.data.options.sort((a, b) => {\n      if (this.getAssignmentsNumber(a) < this.getAssignmentsNumber(b)) {\n        return -1;\n      }\n      if (this.getAssignmentsNumber(a) > this.getAssignmentsNumber(b)) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  /**\r\n   * Get the assignments for part filtered by the current user\r\n   *\r\n   * Get those from assignmentsByUser, so they would\r\n   * contain any assignment not yet saved to the DB\r\n   *\r\n   * @param user\r\n   */\n  getUserAssignments(user) {\n    const assignmentsByUser = this.assignmentService.assignmentsByUser;\n    return assignmentsByUser.get(user._id).filter(a => this.assignmentService.isWorkingOnPart(a.part));\n  }\n  /**\r\n   * Get the last assignment\r\n   * (or undefined if there are none)\r\n   * @param user\r\n   */\n  getUserLastAssignment(user) {\n    const userAss = this.getUserAssignments(user);\n    if (userAss.length !== 0) {\n      const index = userAss.length - 1;\n      return userAss[index];\n    }\n  }\n  getUserLastAssignmentNameTranslated(user) {\n    const lastAssignment = this.getUserLastAssignment(user);\n    if (lastAssignment.assignee._id === user._id) {\n      return this.translateService.instant(lastAssignment.part.name);\n    } else {\n      // Assistant\n      const partName = this.translateService.instant(lastAssignment.part.name);\n      const assistant = this.translateService.instant('assistant');\n      return `${partName} (${assistant})`;\n    }\n  }\n  /**\r\n   * Return the number of all the assignment of a user\r\n   * @param user\r\n   */\n  getAssignmentsNumber(user) {\n    return this.getUserAssignments(user).length;\n  }\n  /**\r\n   * TODO extract this to be used anywhere\r\n   */\n  getValueByDotNotation(obj, path) {\n    return new Function('_', 'return _.' + path)(obj);\n  }\n  static #_ = this.ɵfac = function AssignableListComponent_Factory(t) {\n    return new (t || AssignableListComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i1.AssignmentService), i0.ɵɵdirectiveInject(i2.TranslateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssignableListComponent,\n    selectors: [[\"app-assignable-list\"]],\n    viewQuery: function AssignableListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t.first);\n      }\n    },\n    decls: 38,\n    vars: 25,\n    consts: [[\"mat-dialog-title\", \"\"], [\"fxFill\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", \"mat-dialog-close\", \"\", \"aria-label\", \"close\"], [\"fxFlex\", \"45\", \"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"matSuffix\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"multiple\", \"selectionChange\"], [\"options\", \"\"], [\"cdkFocusInitial\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"cdkFocusInitial\", \"\", 3, \"value\"], [\"matLine\", \"\"], [\"matLine\", \"\", 3, \"matTooltip\", 4, \"ngIf\"], [\"matLine\", \"\", 3, \"matTooltip\"]],\n    template: function AssignableListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"p\", 1)(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AssignableListComponent_Template_button_click_9_listener() {\n          return ctx.sort(\"assignmentsNumber\");\n        });\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"titlecase\");\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementStart(13, \"mat-icon\", 4);\n        i0.ɵɵtext(14, \"arrow_upward\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AssignableListComponent_Template_button_click_15_listener() {\n          return ctx.sort(\"date\");\n        });\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"titlecase\");\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementStart(19, \"mat-icon\");\n        i0.ɵɵtext(20, \"arrow_upward\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"p\", 1)(22, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AssignableListComponent_Template_button_click_22_listener() {\n          return ctx.sort(\"firstName\");\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"titlecase\");\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementStart(26, \"mat-icon\");\n        i0.ɵɵtext(27, \"arrow_upward\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AssignableListComponent_Template_button_click_28_listener() {\n          return ctx.sort(\"lastName\");\n        });\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"titlecase\");\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementStart(32, \"mat-icon\");\n        i0.ɵɵtext(33, \"arrow_upward\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(34, \"div\", 5)(35, \"mat-selection-list\", 6, 7);\n        i0.ɵɵlistener(\"selectionChange\", function AssignableListComponent_Template_mat_selection_list_selectionChange_35_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtemplate(37, AssignableListComponent_mat_list_option_37_Template, 8, 9, \"mat-list-option\", 8);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 7, ctx.data.title), \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 9, i0.ɵɵpipeBind1(12, 11, \"number\")), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(17, 13, i0.ɵɵpipeBind1(18, 15, \"date\")), \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 17, i0.ɵɵpipeBind1(25, 19, \"first-name\")), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 21, i0.ɵɵpipeBind1(31, 23, \"last-name\")), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"multiple\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatLegacyButton, i5.MatLegacyDialogClose, i5.MatLegacyDialogTitle, i5.MatLegacyDialogContent, i6.MatLegacySuffix, i7.MatIcon, i8.MatLine, i9.MatLegacySelectionList, i9.MatLegacyListOption, i10.MatLegacyTooltip, i3.AsyncPipe, i3.TitleCasePipe, i11.TranslateDatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhc3NpZ25hYmxlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hc3NpZ25tZW50cy9jb21wb25lbnRzL2Fzc2lnbmFibGUtbGlzdC9hc3NpZ25hYmxlLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdMQUFnTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MatLegacyDialogRef","MatDialogRef","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","ctx_r3","getUserLastAssignmentNameTranslated","user_r2","ɵɵadvance","ɵɵtextInterpolate2","ɵɵpipeBind1","ɵɵpipeBind2","getUserLastAssignment","week","ɵɵtemplate","AssignableListComponent_mat_list_option_37_span_3_Template","ɵɵproperty","ɵɵtextInterpolate","fullName","ctx_r1","getUserAssignments","length","getAssignmentsNumber","AssignableListComponent","constructor","injector","assignmentService","translateService","dialogRef","get","data","ngOnInit","userList","options","sortByLastAssignmentDate","closeDialog","close","selectedOptions","selected","value","sort","field","sortByAssignmentsTotal","a","b","localeCompare","undefined","equals","user","assignmentsByUser","_id","filter","isWorkingOnPart","part","userAss","index","lastAssignment","assignee","instant","name","partName","assistant","getValueByDotNotation","obj","path","Function","_","ɵɵdirectiveInject","Injector","i1","AssignmentService","i2","TranslateService","_2","selectors","viewQuery","AssignableListComponent_Query","rf","ctx","ɵɵlistener","AssignableListComponent_Template_button_click_9_listener","AssignableListComponent_Template_button_click_15_listener","AssignableListComponent_Template_button_click_22_listener","AssignableListComponent_Template_button_click_28_listener","AssignableListComponent_Template_mat_selection_list_selectionChange_35_listener","AssignableListComponent_mat_list_option_37_Template","ɵɵtextInterpolate1","title"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\modules\\assignments\\components\\assignable-list\\assignable-list.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\modules\\assignments\\components\\assignable-list\\assignable-list.component.html"],"sourcesContent":["import { Component, OnInit, Inject, ViewChild, Injector } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { MatLegacySelectionList as MatSelectionList } from '@angular/material/legacy-list';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { OptionsDialogComponent } from '@src/app/shared/components/options-dialog/options-dialog.component';\r\nimport { Assignment } from '@src/app/core/models/assignment/assignment.model';\r\nimport { User } from '@src/app/core/models/user/user.model';\r\nimport { AssignmentService } from '@src/app/modules/assignments/services/assignment.service';\r\n\r\n/**\r\n * Display a list of assignable brothers to choose from for an assignment\r\n */\r\n@Component({\r\n  selector: 'app-assignable-list',\r\n  templateUrl: './assignable-list.component.html',\r\n  styleUrls: ['./assignable-list.component.scss'],\r\n})\r\nexport class AssignableListComponent<T> implements OnInit {\r\n  @ViewChild('options', { static: true }) options: MatSelectionList;\r\n\r\n  public dialogRef = null;\r\n  public data;\r\n\r\n  public userList: User[];\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    protected assignmentService: AssignmentService,\r\n    protected translateService: TranslateService\r\n  ) {\r\n    this.dialogRef = this.injector.get(MatDialogRef, null);\r\n    this.data = this.injector.get(MAT_DIALOG_DATA, null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userList = this.data.options;\r\n\r\n    // By default sort the users bay last assignments date\r\n    this.sortByLastAssignmentDate();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({\r\n      data: this.options.selectedOptions.selected[0].value,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sort assignable list according to some fields\r\n   */\r\n  sort(field: string) {\r\n    if (field === 'date') {\r\n      // Sort by last assignment date\r\n      this.sortByLastAssignmentDate();\r\n    } else if (field === 'assignmentsNumber') {\r\n      // Sort by assignments number\r\n      this.sortByAssignmentsTotal();\r\n    } else {\r\n      // Sort by the given field\r\n      this.data.options.sort((a: User, b: User) => {\r\n        if (typeof a[field] === 'string') {\r\n          // easier sort if strings\r\n          return a[field].localeCompare(b[field]);\r\n        } else {\r\n          if (a[field] < b[field]) {\r\n            return -1;\r\n          }\r\n          if (a[field] > b[field]) {\r\n            return 1;\r\n          }\r\n\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  sortByLastAssignmentDate() {\r\n    // Sort by last assignment date\r\n    this.data.options.sort((a: User, b: User) => {\r\n      // Sort by last assignment's date\r\n      // nulls sort after anything else\r\n      if (this.getUserLastAssignment(a) === undefined) {\r\n        return -1;\r\n      } else if (this.getUserLastAssignment(b) === undefined) {\r\n        return 1;\r\n      } else if (\r\n        this.getUserLastAssignment(a).week.equals(\r\n          this.getUserLastAssignment(b).week\r\n        )\r\n      ) {\r\n        // equal items sort equally\r\n        return 0;\r\n      } else if (\r\n        this.getUserLastAssignment(a).week < this.getUserLastAssignment(b).week\r\n      ) {\r\n        // otherwise, older sorts first\r\n        return -1;\r\n      } else {\r\n        // recent sorts first\r\n        return 1;\r\n      }\r\n    });\r\n  }\r\n\r\n  sortByAssignmentsTotal() {\r\n    this.data.options.sort((a: User, b: User) => {\r\n      if (this.getAssignmentsNumber(a) < this.getAssignmentsNumber(b)) {\r\n        return -1;\r\n      }\r\n      if (this.getAssignmentsNumber(a) > this.getAssignmentsNumber(b)) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the assignments for part filtered by the current user\r\n   *\r\n   * Get those from assignmentsByUser, so they would\r\n   * contain any assignment not yet saved to the DB\r\n   *\r\n   * @param user\r\n   */\r\n  getUserAssignments(user: User): Assignment[] {\r\n    const assignmentsByUser = this.assignmentService.assignmentsByUser;\r\n\r\n    return assignmentsByUser\r\n      .get(user._id)\r\n      .filter((a) => this.assignmentService.isWorkingOnPart(a.part));\r\n  }\r\n\r\n  /**\r\n   * Get the last assignment\r\n   * (or undefined if there are none)\r\n   * @param user\r\n   */\r\n  getUserLastAssignment(user: User): Assignment {\r\n    const userAss = this.getUserAssignments(user);\r\n\r\n    if (userAss.length !== 0) {\r\n      const index = userAss.length - 1;\r\n\r\n      return userAss[index];\r\n    }\r\n  }\r\n\r\n  getUserLastAssignmentNameTranslated(user: User) {\r\n    const lastAssignment = this.getUserLastAssignment(user);\r\n    if (lastAssignment.assignee._id === user._id) {\r\n      return this.translateService.instant(lastAssignment.part.name);\r\n    } else {\r\n      // Assistant\r\n      const partName = this.translateService.instant(lastAssignment.part.name);\r\n      const assistant = this.translateService.instant('assistant');\r\n      return `${partName} (${assistant})`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the number of all the assignment of a user\r\n   * @param user\r\n   */\r\n  getAssignmentsNumber(user: User): number {\r\n    return this.getUserAssignments(user).length;\r\n  }\r\n\r\n  /**\r\n   * TODO extract this to be used anywhere\r\n   */\r\n  getValueByDotNotation(obj, path) {\r\n    return new Function('_', 'return _.' + path)(obj);\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <div fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <!-- Title & close buttons-->\r\n    <span>\r\n      {{ data.title | translate }}\r\n    </span>\r\n\r\n    <button\r\n      type=\"button\"\r\n      mat-icon-button\r\n      matSuffix\r\n      mat-dialog-close\r\n      aria-label=\"close\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <p fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\"> \r\n    <!-- Sort buttons-->\r\n    <button\r\n      fxFlex=\"45\"\r\n      mat-raised-button\r\n      type=\"button\"\r\n      (click)=\"sort('assignmentsNumber')\">\r\n      {{ \"number\" | translate | titlecase }}\r\n      <mat-icon matSuffix>arrow_upward</mat-icon>\r\n    </button>\r\n  \r\n    <button fxFlex=\"45\"\r\n      mat-raised-button \r\n      type=\"button\" \r\n      (click)=\"sort('date')\">\r\n      {{ \"date\" | translate | titlecase }} \r\n      <mat-icon>arrow_upward</mat-icon>\r\n    </button>\r\n  </p>\r\n  <p fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <button\r\n      fxFlex=\"45\"\r\n      mat-raised-button\r\n      type=\"button\"\r\n      (click)=\"sort('firstName')\">\r\n      {{ \"first-name\" | translate | titlecase }} \r\n      <mat-icon>arrow_upward</mat-icon>\r\n    </button>\r\n    <button\r\n      fxFlex=\"45\"\r\n      mat-raised-button\r\n      type=\"button\"\r\n      (click)=\"sort('lastName')\">\r\n      {{ \"last-name\" | translate | titlecase }} <mat-icon>arrow_upward</mat-icon>\r\n    </button>\r\n  </p>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <mat-selection-list\r\n    #options\r\n    [multiple]=\"false\"\r\n    (selectionChange)=\"closeDialog()\">\r\n    <mat-list-option\r\n      *ngFor=\"let user of userList\"\r\n      [value]=\"user\"\r\n      cdkFocusInitial>\r\n      <h2 matLine>{{ user.fullName }}</h2>\r\n      <span matLine *ngIf=\"getUserAssignments(user).length\"\r\n        matTooltip=\"{{ getUserLastAssignmentNameTranslated(user) }}\">\r\n        {{ \"last\" | translate | titlecase }}\r\n        {{\r\n          getUserLastAssignment(user).week\r\n            | translateDate: \"DATE_MED\"\r\n            | async\r\n        }}\r\n      </span>\r\n      <span matLine\r\n        >{{ \"total\" | translate | titlecase }}\r\n        {{ getAssignmentsNumber(user) }}</span>\r\n    </mat-list-option>\r\n\r\n    <!-- <div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>\r\n    Ok\r\n  </button> -->\r\n  </mat-selection-list>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}