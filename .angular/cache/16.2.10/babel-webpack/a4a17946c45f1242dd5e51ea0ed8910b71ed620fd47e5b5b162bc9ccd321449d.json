{"ast":null,"code":"import { MatSidenav, MatDrawer } from '@angular/material/sidenav';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout\";\nimport * as i2 from \"@src/app/modules/users/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/sidenav\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@src/app/shared/components/sidemenu/sidemenu.component\";\nimport * as i8 from \"@src/app/shared/components/toolbar/toolbar.component\";\nexport class ContentLayoutComponent {\n  constructor(mediaObserver, userService) {\n    this.mediaObserver = mediaObserver;\n    this.userService = userService;\n    this.isVisible = true;\n    this.visibility = 'shown';\n    this.sideNavOpened = true;\n    this.matDrawerOpened = false;\n    this.matDrawerShow = true;\n    this.sideNavMode = 'side';\n  }\n  ngOnChanges() {\n    this.visibility = this.isVisible ? 'shown' : 'hidden';\n  }\n  ngOnInit() {\n    this.mediaObserver.media$.subscribe(mediaChange => {\n      this.toggleView();\n    });\n  }\n  ngOnDestroy() {\n    this.userService.destroy();\n  }\n  getRouteAnimation(outlet) {\n    return outlet.activatedRouteData.animation;\n    // return outlet.isActivated ? outlet.activatedRoute : ''\n  }\n  /**\r\n   * Called on a submenu selected to close the sidebar\r\n   */\n  closeSidebar() {\n    if (!this.sideNavOpened) {\n      // If not opened by default (on small screens)\n      this.sidenav.close();\n      if (this.matDrawerShow) {\n        // if drawer is shown by default\n        this.drawer.toggle();\n      }\n    }\n  }\n  toggleView() {\n    if (this.mediaObserver.isActive('gt-md')) {\n      this.sideNavMode = 'side';\n      this.sideNavOpened = true;\n      this.matDrawerOpened = false;\n      this.matDrawerShow = true;\n    } else if (this.mediaObserver.isActive('gt-xs')) {\n      this.sideNavMode = 'side';\n      this.sideNavOpened = false;\n      this.matDrawerOpened = true;\n      this.matDrawerShow = true;\n    } else if (this.mediaObserver.isActive('lt-sm')) {\n      this.sideNavMode = 'over';\n      this.sideNavOpened = false;\n      this.matDrawerOpened = false;\n      this.matDrawerShow = false;\n    }\n  }\n  static #_ = this.ɵfac = function ContentLayoutComponent_Factory(t) {\n    return new (t || ContentLayoutComponent)(i0.ɵɵdirectiveInject(i1.MediaObserver), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContentLayoutComponent,\n    selectors: [[\"app-content-layout\"]],\n    viewQuery: function ContentLayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSidenav, 5);\n        i0.ɵɵviewQuery(MatDrawer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawer = _t.first);\n      }\n    },\n    inputs: {\n      isVisible: \"isVisible\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 23,\n    vars: 7,\n    consts: [[\"fullscreen\", \"\", 1, \"container\"], [1, \"sidenav\", 3, \"mode\", \"opened\"], [\"sidenav\", \"\"], [\"color\", \"primary\", 1, \"mat-elevation-z4\"], [\"mat-button\", \"\", \"routerLink\", \"/\"], [1, \"logo\"], [2, \"font-size\", \"12px\"], [3, \"onMenuSelected\"], [2, \"z-index\", \"unset\"], [\"fullscreen\", \"\"], [\"mode\", \"side\", 1, \"drawer\", 3, \"opened\"], [\"drawer\", \"\"], [\"color\", \"primary\", \"center\", \"\", 1, \"mat-elevation-z4\"], [\"mat-icon-button\", \"\", \"routerLink\", \"/\"], [3, \"iconOnly\"], [2, \"z-index\", \"500\", 3, \"sidenav\", \"drawer\", \"matDrawerShow\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center start\"], [\"fxFlex\", \"95\", 1, \"mat-elevation-z4\"]],\n    template: function ContentLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2)(3, \"mat-toolbar\", 3)(4, \"a\", 4)(5, \"h1\", 5);\n        i0.ɵɵtext(6, \"Thassign.\");\n        i0.ɵɵelementStart(7, \"span\", 6);\n        i0.ɵɵtext(8, \"com\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"app-sidemenu\", 7);\n        i0.ɵɵlistener(\"onMenuSelected\", function ContentLayoutComponent_Template_app_sidemenu_onMenuSelected_9_listener() {\n          return ctx.closeSidebar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-sidenav-content\", 8)(11, \"mat-drawer-container\", 9)(12, \"mat-drawer\", 10, 11)(14, \"mat-toolbar\", 12)(15, \"button\", 13);\n        i0.ɵɵtext(16, \"TA\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"app-sidemenu\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-drawer-content\");\n        i0.ɵɵelement(19, \"ma-toolbar\", 15);\n        i0.ɵɵelementStart(20, \"div\", 16)(21, \"div\", 17);\n        i0.ɵɵelement(22, \"router-outlet\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        const _r1 = i0.ɵɵreference(13);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mode\", ctx.sideNavMode)(\"opened\", ctx.sideNavOpened);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"opened\", ctx.matDrawerOpened);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"iconOnly\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"sidenav\", _r0)(\"drawer\", _r1)(\"matDrawerShow\", ctx.matDrawerShow);\n      }\n    },\n    dependencies: [i3.RouterOutlet, i3.RouterLink, i4.MatLegacyButton, i4.MatLegacyAnchor, i5.MatDrawer, i5.MatDrawerContainer, i5.MatDrawerContent, i5.MatSidenav, i5.MatSidenavContainer, i5.MatSidenavContent, i6.MatToolbar, i7.SidemenuComponent, i8.ToolbarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250ZW50LWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9jb250ZW50LWxheW91dC9jb250ZW50LWxheW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsNEtBQTRLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["MatSidenav","MatDrawer","ContentLayoutComponent","constructor","mediaObserver","userService","isVisible","visibility","sideNavOpened","matDrawerOpened","matDrawerShow","sideNavMode","ngOnChanges","ngOnInit","media$","subscribe","mediaChange","toggleView","ngOnDestroy","destroy","getRouteAnimation","outlet","activatedRouteData","animation","closeSidebar","sidenav","close","drawer","toggle","isActive","_","i0","ɵɵdirectiveInject","i1","MediaObserver","i2","UserService","_2","selectors","viewQuery","ContentLayoutComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContentLayoutComponent_Template_app_sidemenu_onMenuSelected_9_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","_r0","_r1"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\layouts\\content-layout\\content-layout.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\layouts\\content-layout\\content-layout.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatSidenav, MatDrawer } from '@angular/material/sidenav';\r\nimport { UserService } from '@src/app/modules/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-content-layout',\r\n  templateUrl: './content-layout.component.html',\r\n  styleUrls: ['./content-layout.component.scss'],\r\n})\r\nexport class ContentLayoutComponent implements OnInit, OnChanges {\r\n  @Input() isVisible = true;\r\n  visibility = 'shown';\r\n\r\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\r\n  @ViewChild(MatDrawer) drawer: MatDrawer;\r\n\r\n  sideNavOpened = true;\r\n  matDrawerOpened = false;\r\n  matDrawerShow = true;\r\n  sideNavMode = 'side';\r\n\r\n  constructor(\r\n    public mediaObserver: MediaObserver,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnChanges() {\r\n    this.visibility = this.isVisible ? 'shown' : 'hidden';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mediaObserver.media$.subscribe((mediaChange: MediaChange) => {\r\n      this.toggleView();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userService.destroy();\r\n  }\r\n\r\n  getRouteAnimation(outlet) {\r\n    return outlet.activatedRouteData.animation;\r\n    // return outlet.isActivated ? outlet.activatedRoute : ''\r\n  }\r\n\r\n  /**\r\n   * Called on a submenu selected to close the sidebar\r\n   */\r\n  closeSidebar() {\r\n    if (!this.sideNavOpened) {\r\n      // If not opened by default (on small screens)\r\n      this.sidenav.close();\r\n\r\n      if (this.matDrawerShow) {\r\n        // if drawer is shown by default\r\n        this.drawer.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleView() {\r\n    if (this.mediaObserver.isActive('gt-md')) {\r\n      this.sideNavMode = 'side';\r\n      this.sideNavOpened = true;\r\n      this.matDrawerOpened = false;\r\n      this.matDrawerShow = true;\r\n    } else if (this.mediaObserver.isActive('gt-xs')) {\r\n      this.sideNavMode = 'side';\r\n      this.sideNavOpened = false;\r\n      this.matDrawerOpened = true;\r\n      this.matDrawerShow = true;\r\n    } else if (this.mediaObserver.isActive('lt-sm')) {\r\n      this.sideNavMode = 'over';\r\n      this.sideNavOpened = false;\r\n      this.matDrawerOpened = false;\r\n      this.matDrawerShow = false;\r\n    }\r\n  }\r\n}\r\n","<!--\r\n  Below is another example of the home page that has a smaller menu that shows up when the main menu is hidden\r\n-->\r\n\r\n<mat-sidenav-container class=\"container\" fullscreen>\r\n  <mat-sidenav\r\n    [mode]=\"sideNavMode\"\r\n    class=\"sidenav\"\r\n    #sidenav\r\n    [opened]=\"sideNavOpened\"\r\n  >\r\n    <mat-toolbar color=\"primary\" class=\"mat-elevation-z4\">\r\n      <a mat-button routerLink=\"/\">\r\n        <h1 class=\"logo\">Thassign.<span style=\"font-size: 12px;\">com</span></h1>\r\n      </a>\r\n    </mat-toolbar>\r\n    <app-sidemenu (onMenuSelected)=\"closeSidebar()\"></app-sidemenu>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content style=\"z-index: unset;\">\r\n    <mat-drawer-container fullscreen>\r\n      <mat-drawer mode=\"side\" #drawer class=\"drawer\" [opened]=\"matDrawerOpened\">\r\n        <!-- Logo or Initials -->\r\n        <mat-toolbar color=\"primary\" center class=\"mat-elevation-z4\">\r\n          <button mat-icon-button routerLink=\"/\">TA</button>\r\n        </mat-toolbar>\r\n        <!-- Second sidebar with icons only -->\r\n        <app-sidemenu [iconOnly]=\"true\"></app-sidemenu>\r\n      </mat-drawer>\r\n      <mat-drawer-content>\r\n        <ma-toolbar\r\n          [sidenav]=\"sidenav\"\r\n          [drawer]=\"drawer\"\r\n          [matDrawerShow]=\"matDrawerShow\"\r\n          style=\"z-index: 500;\"\r\n        ></ma-toolbar>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center start\">\r\n          <div fxFlex=\"95\" class=\"mat-elevation-z4\">\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </mat-drawer-content>\r\n    </mat-drawer-container>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}