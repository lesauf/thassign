{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/CSEG/Desktop/thassign/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { AuthHelper } from '@src/app/modules/auth/auth-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/app/modules/auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@src/app/modules/auth/auth-helper\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/legacy-button\";\nimport * as i7 from \"@angular/material/legacy-card\";\nimport * as i8 from \"@angular/material/legacy-form-field\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/legacy-input\";\nimport * as i11 from \"@src/app/shared/components/loader/loader.component\";\nfunction AuthComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"legend\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx_r0.formMessages.all));\n  }\n}\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r1.formMessages.email), \" \");\n  }\n}\nfunction AuthComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r2.formMessages.password), \" \");\n  }\n}\nfunction AuthComponent_mat_form_field_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 4);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"input\", 15);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"password2-required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(3, 4, \"password2-required\"));\n  }\n}\nfunction AuthComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r4.formMessages.repeatPassword), \" \");\n  }\n}\nfunction AuthComponent_app_loader_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nexport class AuthComponent {\n  constructor(authService, fb, router, authHelper, ngZone) {\n    this.authService = authService;\n    this.fb = fb;\n    this.router = router;\n    this.authHelper = authHelper;\n    this.ngZone = ngZone;\n    this.formMessages = {\n      all: '',\n      email: '',\n      password: '',\n      repeatPassword: ''\n    };\n    this.validationMessages = {\n      email: {\n        required: 'Please enter your email',\n        email: 'please enter your vaild email'\n      },\n      password: {\n        required: 'please enter your password',\n        pattern: 'The password must contain numbers and letters',\n        minlength: 'Please enter more than 6 characters',\n        maxlength: 'Please enter less than 25 characters'\n      },\n      repeatPassword: {\n        required: 'please retype your password',\n        pattern: 'The password must contain numbers and letters',\n        minlength: 'Please enter more than 6 characters',\n        maxlength: 'Please enter less than 25 characters',\n        passwordMatch: 'Password mismatch'\n      }\n    };\n    this.isLoggingIn = true;\n    this.isLoading = false;\n    authHelper.configureMatIcon();\n  }\n  // email: string;\n  // password: string;\n  ngOnInit() {\n    this.buildForm();\n    // this.authHelper.hideActionBar();\n  }\n\n  toggleDisplay() {\n    this.isLoggingIn = !this.isLoggingIn;\n    this.buildForm();\n  }\n  buildForm() {\n    this.userForm = this.fb.group({\n      email: ['brest@gmail.com', [Validators.required\n      // Validators.email\n      ]],\n\n      password: ['a123456', [\n      // Temporarily disable strong password\n      // Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n      Validators.minLength(6), Validators.maxLength(25)]],\n      ...(!this.isLoggingIn && {\n        repeatPassword: ['a123456', [this.passwordsMatchValidator]]\n      })\n    });\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    // this.onValueChanged();\n  }\n\n  passwordsMatchValidator(control) {\n    const password = control.root.get('password');\n    return password && control.value !== password.value ? {\n      passwordMatch: true\n    } : null;\n  }\n  setMessage(type, message) {\n    this.formMessages[type] = message;\n  }\n  /**\r\n   * Display error messages as the user type\r\n   */\n  onValueChanged(data) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formMessages) {\n      if (Object.prototype.hasOwnProperty.call(this.formMessages, field)) {\n        this.formMessages[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formMessages[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n  submit(provider) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        switch (provider) {\n          case 'emailPassword':\n            if (_this.isLoggingIn) {\n              yield _this.login();\n            } else {\n              yield _this.signUp();\n            }\n            break;\n          case 'google':\n            yield _this.googleAuth();\n            break;\n        }\n        _this.router.navigate([_this.authService.redirectUrl]);\n        // this.router.navigate(['/home']);\n        // this.ngZone.run(() => {\n        //   this.router.navigateByUrl('/auto-generated').then();\n        // });\n      } catch (error) {\n        _this.isLoading = false;\n        if (error.code === 'auth/email-already-in-use') {\n          _this.formMessages.email = 'error.email.string.already-in-use';\n        } else if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n          _this.formMessages.all = 'error.email.string.no-record';\n        } else {\n          _this.formMessages.all = 'error.occurred';\n          console.log(error.message, error);\n        }\n      }\n    })();\n  }\n  login() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.isLoading = true;\n        yield _this2.authService.emailLogin(_this2.userForm.value.email, _this2.userForm.value.password);\n        console.log(`successfully logged in`);\n        _this2.isLoading = false;\n      } catch (error) {\n        _this2.formMessages.all = error.message;\n        throw error;\n      }\n    })();\n  }\n  signUp() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // try {\n      if (!_this3.userForm.valid) {\n        return;\n      }\n      _this3.isLoading = true;\n      const {\n        email,\n        password,\n        repeatPassword\n      } = _this3.userForm.getRawValue();\n      const res = yield _this3.authService.register(email, password, repeatPassword);\n      _this3.isLoading = false;\n      // this.router.navigate(['']);\n      // } catch (error) {\n      //   throw error;\n      // }\n    })();\n  }\n\n  googleAuth() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this4.authService.googleLogin();\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }\n  logout() {\n    this.authService.logout();\n    this.setMessage('all', 'Logged ' + (this.authService.isLoggedIn() ? 'in' : 'out'));\n  }\n  static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthHelper), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-login\"]],\n    inputs: {\n      message: \"message\"\n    },\n    features: [i0.ɵɵProvidersFeature([AuthHelper])],\n    decls: 41,\n    vars: 41,\n    consts: [[\"fxLayout\", \"column\", \"fxFlexFill\", \"\", \"fxLayoutAlign\", \"center center\", \"id\", \"auth\"], [\"fxLayout\", \"column\", 1, \"mat-elevation-z4\", \"login-block\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start stretch\", \"fxLayoutGap\", \"1em\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"help is-danger\", 4, \"ngIf\"], [1, \"full-width\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", \"autofocus\", \"\", \"matInput\", \"\", 1, \"input\", 3, \"placeholder\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", \"matInput\", \"\", 1, \"input\", 3, \"placeholder\"], [\"class\", \"full-width\", 4, \"ngIf\"], [4, \"ngIf\"], [\"fxLayout\", \"row-reverse\", \"fxLayoutAlign\", \"space-between center\"], [\"mat-raised-button\", \"\", \"fxAlign\", \"start\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center stretch\"], [\"svgIcon\", \"google-logo\", \"aria-hidden\", \"false\", \"aria-label\", \"Google logo\", \"matPrefix\", \"\"], [1, \"help\", \"is-danger\"], [\"type\", \"password\", \"id\", \"repeatPassword\", \"formControlName\", \"repeatPassword\", \"required\", \"\", \"matInput\", \"\", 1, \"input\", 3, \"placeholder\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-card\")(3, \"mat-card-title\")(4, \"h1\");\n        i0.ɵɵtext(5, \"Thassign\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"h2\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.submit(\"emailPassword\");\n        });\n        i0.ɵɵtemplate(11, AuthComponent_div_11_Template, 4, 3, \"div\", 3);\n        i0.ɵɵelementStart(12, \"mat-form-field\", 4);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 3, 3, \"div\", 3);\n        i0.ɵɵelementStart(17, \"mat-form-field\", 4);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelement(19, \"input\", 6);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AuthComponent_div_21_Template, 3, 3, \"div\", 3);\n        i0.ɵɵtemplate(22, AuthComponent_mat_form_field_22_Template, 4, 6, \"mat-form-field\", 7);\n        i0.ɵɵtemplate(23, AuthComponent_div_23_Template, 3, 3, \"div\", 3);\n        i0.ɵɵtemplate(24, AuthComponent_app_loader_24_Template, 1, 0, \"app-loader\", 8);\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"button\", 10);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵtext(28);\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_30_listener() {\n          return ctx.toggleDisplay();\n        });\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 12)(35, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_35_listener() {\n          return ctx.submit(\"google\");\n        });\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelement(37, \"mat-icon\", 13);\n        i0.ɵɵtext(38, \" \\u00A0 \");\n        i0.ɵɵtext(39);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 19, \"log-in-to-your-account\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formMessages.all);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(13, 21, \"email-required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 23, \"email-required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.formMessages.email);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(18, 25, \"password-required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(20, 27, \"password-required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.formMessages.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggingIn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formMessages.repeatPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.userForm.valid);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(27, 29, ctx.isLoggingIn ? \"sign-in\" : \"sign-up\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(29, 31, ctx.isLoggingIn ? \"sign-in\" : \"sign-up\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(31, 33, ctx.isLoggingIn ? \"sign-up\" : \"sign-in\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(33, 35, ctx.isLoggingIn ? \"sign-up\" : \"sign-in\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(36, 37, \"google-sign-in\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(40, 39, \"google-sign-in\"), \" \");\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i6.MatLegacyButton, i7.MatLegacyCard, i7.MatLegacyCardContent, i7.MatLegacyCardTitle, i8.MatLegacyFormField, i8.MatLegacyPrefix, i9.MatIcon, i10.MatLegacyInput, i2.FormGroupDirective, i2.FormControlName, i11.LoaderComponent],\n    styles: [\".sigin-conainer[_ngcontent-%COMP%] {\\n  min-height: 100%;\\n  background-size: cover;\\n  padding: 100px;\\n}\\n.sigin-main[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin: 0 auto;\\n  width: 500px;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.is-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.redirect[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00aaaa;\\n}\\n\\n#auth[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background-image: url(\\\"/assets/login11.jpg\\\");\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n}\\n\\n.login-block[_ngcontent-%COMP%] {\\n  width: 90%;\\n  max-width: 300px;\\n}\\n\\n#auth[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 0 auto 1em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUU7RUFDRSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsY0FBQTtBQUxKO0FBUUU7RUFDRSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FBTko7O0FBVUE7RUFDRSxXQUFBO0FBUEY7O0FBYUE7RUFDRSxVQUFBO0FBVkY7O0FBYUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FBVkY7O0FBYUE7RUFDRSxZQUFBO0VBQ0EsNENBQUE7RUFDQSw0QkFBQTtFQUNBLDJCQUFBO0VBQ0Esc0JBQUE7QUFWRjs7QUFhQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQVZGOztBQWFBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQVZGIiwiZmlsZSI6ImF1dGguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkZ3JheS1saWdodGVyOiAjZWNlZWVmICFkZWZhdWx0O1xyXG4kaW1hZ2VfcGF0aDogXCIvYXNzZXRzL2ltYWdlcy9cIiAhZGVmYXVsdDtcclxuXHJcbiRwcmVmaXg6IFwic2lnaW5cIjtcclxuXHJcbi4jeyRwcmVmaXh9IHtcclxuICAmLWNvbmFpbmVyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgcGFkZGluZzogMTAwcHg7XHJcbiAgfVxyXG5cclxuICAmLW1haW4ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5oZWxwIHtcclxufVxyXG5cclxuLmlzLWRhbmdlciB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnJlZGlyZWN0IHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgY29sb3I6ICMwMGFhYWE7XHJcbn1cclxuXHJcbiNhdXRoIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9sb2dpbjExLmpwZ1wiKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG4ubG9naW4tYmxvY2sge1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgbWF4LXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuI2F1dGggbWF0LWNhcmQtdGl0bGUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDAgYXV0byAxZW07XHJcbn1cclxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUU7RUFDRSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsY0FBQTtBQUxKO0FBUUU7RUFDRSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FBTko7O0FBVUE7RUFDRSxXQUFBO0FBUEY7O0FBYUE7RUFDRSxVQUFBO0FBVkY7O0FBYUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FBVkY7O0FBYUE7RUFDRSxZQUFBO0VBQ0EsNENBQUE7RUFDQSw0QkFBQTtFQUNBLDJCQUFBO0VBQ0Esc0JBQUE7QUFWRjs7QUFhQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQVZGOztBQWFBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQVZGO0FBQ0EsZ3ZEQUFndkQiLCJzb3VyY2VzQ29udGVudCI6WyIkZ3JheS1saWdodGVyOiAjZWNlZWVmICFkZWZhdWx0O1xyXG4kaW1hZ2VfcGF0aDogXCIvYXNzZXRzL2ltYWdlcy9cIiAhZGVmYXVsdDtcclxuXHJcbiRwcmVmaXg6IFwic2lnaW5cIjtcclxuXHJcbi4jeyRwcmVmaXh9IHtcclxuICAmLWNvbmFpbmVyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgcGFkZGluZzogMTAwcHg7XHJcbiAgfVxyXG5cclxuICAmLW1haW4ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5oZWxwIHtcclxufVxyXG5cclxuLmlzLWRhbmdlciB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnJlZGlyZWN0IHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgY29sb3I6ICMwMGFhYWE7XHJcbn1cclxuXHJcbiNhdXRoIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9sb2dpbjExLmpwZ1wiKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG4ubG9naW4tYmxvY2sge1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgbWF4LXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuI2F1dGggbWF0LWNhcmQtdGl0bGUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDAgYXV0byAxZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AuthHelper","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r0","formMessages","all","ɵɵtextInterpolate1","ctx_r1","email","ctx_r2","password","ɵɵelement","ɵɵattribute","ɵɵpropertyInterpolate","ctx_r4","repeatPassword","AuthComponent","constructor","authService","fb","router","authHelper","ngZone","validationMessages","required","pattern","minlength","maxlength","passwordMatch","isLoggingIn","isLoading","configureMatIcon","ngOnInit","buildForm","toggleDisplay","userForm","group","minLength","maxLength","passwordsMatchValidator","valueChanges","subscribe","data","onValueChanged","control","root","get","value","setMessage","type","message","form","field","Object","prototype","hasOwnProperty","call","dirty","valid","messages","key","errors","submit","provider","_this","_asyncToGenerator","login","signUp","googleAuth","navigate","redirectUrl","error","code","console","log","_this2","emailLogin","_this3","getRawValue","res","register","_this4","googleLogin","logout","isLoggedIn","_","ɵɵdirectiveInject","i1","AuthService","i2","UntypedFormBuilder","i3","Router","i4","NgZone","_2","selectors","inputs","features","ɵɵProvidersFeature","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵlistener","AuthComponent_Template_form_ngSubmit_10_listener","ɵɵtemplate","AuthComponent_div_11_Template","AuthComponent_div_16_Template","AuthComponent_div_21_Template","AuthComponent_mat_form_field_22_Template","AuthComponent_div_23_Template","AuthComponent_app_loader_24_Template","AuthComponent_Template_button_click_30_listener","AuthComponent_Template_button_click_35_listener","ɵɵproperty"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\modules\\auth\\auth.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\modules\\auth\\auth.component.html"],"sourcesContent":["import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport {\r\n  UntypedFormGroup,\r\n  UntypedFormBuilder,\r\n  Validators,\r\n  UntypedFormControl,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '@src/app/modules/auth/auth.service';\r\nimport { AuthHelper } from '@src/app/modules/auth/auth-helper';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n  providers: [AuthHelper],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  @Input() message: string;\r\n\r\n  userForm: UntypedFormGroup;\r\n  formMessages = {\r\n    all: '',\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n  };\r\n  validationMessages = {\r\n    email: {\r\n      required: 'Please enter your email',\r\n      email: 'please enter your vaild email',\r\n    },\r\n    password: {\r\n      required: 'please enter your password',\r\n      pattern: 'The password must contain numbers and letters',\r\n      minlength: 'Please enter more than 6 characters',\r\n      maxlength: 'Please enter less than 25 characters',\r\n    },\r\n    repeatPassword: {\r\n      required: 'please retype your password',\r\n      pattern: 'The password must contain numbers and letters',\r\n      minlength: 'Please enter more than 6 characters',\r\n      maxlength: 'Please enter less than 25 characters',\r\n      passwordMatch: 'Password mismatch',\r\n    },\r\n  };\r\n\r\n  isLoggingIn = true;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: UntypedFormBuilder,\r\n    private router: Router,\r\n    private authHelper: AuthHelper,\r\n    private ngZone: NgZone\r\n  ) {\r\n    authHelper.configureMatIcon();\r\n  }\r\n\r\n  // email: string;\r\n  // password: string;\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    // this.authHelper.hideActionBar();\r\n  }\r\n\r\n  toggleDisplay() {\r\n    this.isLoggingIn = !this.isLoggingIn;\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.userForm = this.fb.group({\r\n      email: [\r\n        'brest@gmail.com',\r\n        [\r\n          Validators.required,\r\n          // Validators.email\r\n        ],\r\n      ],\r\n      password: [\r\n        'a123456',\r\n        [\r\n          // Temporarily disable strong password\r\n          // Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\r\n          Validators.minLength(6),\r\n          Validators.maxLength(25),\r\n        ],\r\n      ],\r\n      ...(!this.isLoggingIn && {\r\n        repeatPassword: ['a123456', [this.passwordsMatchValidator]],\r\n      }),\r\n    });\r\n\r\n    this.userForm.valueChanges.subscribe((data) => this.onValueChanged(data));\r\n    // this.onValueChanged();\r\n  }\r\n\r\n  passwordsMatchValidator(control: UntypedFormControl): ValidationErrors {\r\n    const password = control.root.get('password');\r\n    return password && control.value !== password.value\r\n      ? {\r\n          passwordMatch: true,\r\n        }\r\n      : null;\r\n  }\r\n\r\n  setMessage(type: string, message: string) {\r\n    this.formMessages[type] = message;\r\n  }\r\n\r\n  /**\r\n   * Display error messages as the user type\r\n   */\r\n  onValueChanged(data?: any) {\r\n    if (!this.userForm) {\r\n      return;\r\n    }\r\n    const form = this.userForm;\r\n    for (const field in this.formMessages) {\r\n      if (Object.prototype.hasOwnProperty.call(this.formMessages, field)) {\r\n        this.formMessages[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\r\n              this.formMessages[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async submit(provider) {\r\n    try {\r\n      switch (provider) {\r\n        case 'emailPassword':\r\n          if (this.isLoggingIn) {\r\n            await this.login();\r\n          } else {\r\n            await this.signUp();\r\n          }\r\n          break;\r\n        case 'google':\r\n          await this.googleAuth();\r\n          break;\r\n      }\r\n\r\n      this.router.navigate([this.authService.redirectUrl]);\r\n      // this.router.navigate(['/home']);\r\n      // this.ngZone.run(() => {\r\n      //   this.router.navigateByUrl('/auto-generated').then();\r\n      // });\r\n    } catch (error) {\r\n      this.isLoading = false;\r\n\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        this.formMessages.email = 'error.email.string.already-in-use';\r\n      } else if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        this.formMessages.all = 'error.email.string.no-record';\r\n      } else {\r\n        this.formMessages.all = 'error.occurred';\r\n\r\n        console.log(error.message, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async login(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n\r\n      await this.authService.emailLogin(\r\n        this.userForm.value.email,\r\n        this.userForm.value.password\r\n      );\r\n\r\n      console.log(`successfully logged in`);\r\n\r\n      this.isLoading = false;\r\n    } catch (error) {\r\n      this.formMessages.all = error.message;\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async signUp() {\r\n    // try {\r\n    if (!this.userForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    const { email, password, repeatPassword } = this.userForm.getRawValue();\r\n\r\n    const res = await this.authService.register(\r\n      email,\r\n      password,\r\n      repeatPassword\r\n    );\r\n\r\n    this.isLoading = false;\r\n\r\n    // this.router.navigate(['']);\r\n    // } catch (error) {\r\n    //   throw error;\r\n    // }\r\n  }\r\n\r\n  async googleAuth() {\r\n    try {\r\n      await this.authService.googleLogin();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.setMessage(\r\n      'all',\r\n      'Logged ' + (this.authService.isLoggedIn() ? 'in' : 'out')\r\n    );\r\n  }\r\n}\r\n","<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"center center\" id=\"auth\">\r\n  <div fxLayout=\"column\" class=\"mat-elevation-z4 login-block\">\r\n    <mat-card>\r\n      <mat-card-title><h1>Thassign</h1></mat-card-title>\r\n      <mat-card-content>\r\n        <h2>{{ \"log-in-to-your-account\" | translate }}</h2>\r\n\r\n        <form\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start stretch\"\r\n          fxLayoutGap=\"1em\"\r\n          [formGroup]=\"userForm\"\r\n          (ngSubmit)=\"submit('emailPassword')\"\r\n        >\r\n          <div *ngIf=\"formMessages.all\" class=\"help is-danger\">\r\n            <legend>{{ formMessages.all | translate }}</legend>\r\n          </div>\r\n          <mat-form-field\r\n            class=\"full-width\"\r\n            attr.aria-label=\"{{ 'email-required' | translate }}\"\r\n          >\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"input\"\r\n              placeholder=\"{{ 'email-required' | translate }}\"\r\n              formControlName=\"email\"\r\n              required\r\n              autofocus\r\n              matInput\r\n            />\r\n          </mat-form-field>\r\n          <div *ngIf=\"formMessages.email\" class=\"help is-danger\">\r\n            {{ formMessages.email | translate }}\r\n          </div>\r\n          <mat-form-field\r\n            class=\"full-width\"\r\n            attr.aria-label=\"{{ 'password-required' | translate }}\"\r\n          >\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              class=\"input\"\r\n              placeholder=\"{{ 'password-required' | translate }}\"\r\n              formControlName=\"password\"\r\n              required\r\n              matInput\r\n            />\r\n          </mat-form-field>\r\n          <div *ngIf=\"formMessages.password\" class=\"help is-danger\">\r\n            {{ formMessages.password | translate }}\r\n          </div>\r\n          <mat-form-field\r\n            class=\"full-width\"\r\n            *ngIf=\"!isLoggingIn\"\r\n            attr.aria-label=\"{{ 'password2-required' | translate }}\"\r\n          >\r\n            <input\r\n              type=\"password\"\r\n              id=\"repeatPassword\"\r\n              class=\"input\"\r\n              placeholder=\"{{ 'password2-required' | translate }}\"\r\n              formControlName=\"repeatPassword\"\r\n              required\r\n              matInput\r\n            />\r\n          </mat-form-field>\r\n          <div *ngIf=\"formMessages.repeatPassword\" class=\"help is-danger\">\r\n            {{ formMessages.repeatPassword | translate }}\r\n          </div>\r\n          <app-loader *ngIf=\"isLoading\"></app-loader>\r\n          <div fxLayout=\"row-reverse\" fxLayoutAlign=\"space-between center\">\r\n            <!-- Sign in button -->\r\n            <button\r\n              mat-raised-button\r\n              fxAlign=\"start\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              [disabled]=\"!userForm.valid\"\r\n              attr.aria-label=\"{{\r\n                (isLoggingIn ? 'sign-in' : 'sign-up') | translate\r\n              }}\"\r\n            >\r\n              {{ (isLoggingIn ? \"sign-in\" : \"sign-up\") | translate }}\r\n            </button>\r\n\r\n            <!-- Sign up button -->\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              (click)=\"toggleDisplay()\"\r\n              attr.aria-label=\"{{\r\n                (isLoggingIn ? 'sign-up' : 'sign-in') | translate\r\n              }}\"\r\n            >\r\n              {{ (isLoggingIn ? \"sign-up\" : \"sign-in\") | translate }}\r\n            </button>\r\n          </div>\r\n          <!-- Social login button -->\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              (click)=\"submit('google')\"\r\n              attr.aria-label=\"{{ 'google-sign-in' | translate }}\"\r\n            >\r\n              <mat-icon\r\n                svgIcon=\"google-logo\"\r\n                aria-hidden=\"false\"\r\n                aria-label=\"Google logo\"\r\n                matPrefix\r\n              ></mat-icon>\r\n              &nbsp;\r\n              <!-- <img src=\"/assets/icon/google-logo.svg\" /> -->\r\n              {{ \"google-sign-in\" | translate }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}