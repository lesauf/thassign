{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { menus } from '@src/app/shared/components/sidemenu/menu-element';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@src/app/shared/components/sidemenu-item/sidemenu-item.component\";\nfunction SidemenuComponent_app_sidemenu_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-sidemenu-item\", 2);\n    i0.ɵɵlistener(\"onMenuSelected\", function SidemenuComponent_app_sidemenu_item_1_Template_app_sidemenu_item_onMenuSelected_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.menuSelected());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menu_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", menu_r1)(\"iconOnly\", ctx_r0.iconOnly);\n  }\n}\nexport class SidemenuComponent {\n  constructor(translate) {\n    this.translate = translate;\n    this.iconOnly = false;\n    this.menus = menus;\n    /**\r\n     * Emit event to close sidenav on menu select\r\n     */\n    this.onMenuSelected = new EventEmitter();\n  }\n  ngOnInit() {\n    this.language = this.translate.currentLang;\n  }\n  /**\r\n   * Emit an event to close the drawer when menu is clicked\r\n   */\n  menuSelected() {\n    this.onMenuSelected.emit(true);\n  }\n  /**\r\n   * Capture the selected language from the  component\r\n   *\r\n   * @method changeLanguage\r\n   */\n  changeLanguage() {\n    // this.translate.use(this.language);\n  }\n  static #_ = this.ɵfac = function SidemenuComponent_Factory(t) {\n    return new (t || SidemenuComponent)(i0.ɵɵdirectiveInject(i1.TranslateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidemenuComponent,\n    selectors: [[\"app-sidemenu\"]],\n    inputs: {\n      iconOnly: \"iconOnly\"\n    },\n    outputs: {\n      onMenuSelected: \"onMenuSelected\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"fxLayout\", \"column\"], [3, \"menu\", \"iconOnly\", \"onMenuSelected\", 4, \"ngFor\", \"ngForOf\"], [3, \"menu\", \"iconOnly\", \"onMenuSelected\"]],\n    template: function SidemenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SidemenuComponent_app_sidemenu_item_1_Template, 1, 2, \"app-sidemenu-item\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menus);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.SidemenuItemComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWRlbWVudS5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc2lkZW1lbnUvc2lkZW1lbnUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","menus","i0","ɵɵelementStart","ɵɵlistener","SidemenuComponent_app_sidemenu_item_1_Template_app_sidemenu_item_onMenuSelected_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","menuSelected","ɵɵelementEnd","ɵɵproperty","menu_r1","ctx_r0","iconOnly","SidemenuComponent","constructor","translate","onMenuSelected","ngOnInit","language","currentLang","emit","changeLanguage","_","ɵɵdirectiveInject","i1","TranslateService","_2","selectors","inputs","outputs","decls","vars","consts","template","SidemenuComponent_Template","rf","ctx","ɵɵtemplate","SidemenuComponent_app_sidemenu_item_1_Template","ɵɵadvance"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\sidemenu\\sidemenu.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\sidemenu\\sidemenu.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { menus } from '@src/app/shared/components/sidemenu/menu-element';\r\n\r\n@Component({\r\n  selector: 'app-sidemenu',\r\n  templateUrl: './sidemenu.component.html',\r\n  styleUrls: ['./sidemenu.component.scss'],\r\n})\r\nexport class SidemenuComponent implements OnInit {\r\n  /**\r\n   *\r\n   * @description     \t\tProperty that stores the selected language\r\n   *  value from the component\r\n   */\r\n  language: string;\r\n\r\n  @Input() iconOnly = false;\r\n\r\n  public menus = menus;\r\n\r\n  /**\r\n   * Emit event to close sidenav on menu select\r\n   */\r\n  @Output() onMenuSelected: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(private translate: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.language = this.translate.currentLang;\r\n  }\r\n\r\n  /**\r\n   * Emit an event to close the drawer when menu is clicked\r\n   */\r\n  menuSelected() {\r\n    this.onMenuSelected.emit(true);\r\n  }\r\n\r\n  /**\r\n   * Capture the selected language from the  component\r\n   *\r\n   * @method changeLanguage\r\n   */\r\n  public changeLanguage(): void {\r\n    // this.translate.use(this.language);\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n  <!-- Avatar -->\r\n  <!-- <div\r\n    *ngIf=\"!iconOnly\"\r\n    fxLayoutAlign=\"space-around center\"\r\n    [style.margin]=\"'10px 0px'\"\r\n  >\r\n    <img\r\n      width=\"100\"\r\n      [style.borderRadius]=\"'50%'\"\r\n      src=\"./assets/user-image.jpg\"\r\n    />\r\n  </div>\r\n  <div\r\n    *ngIf=\"iconOnly\"\r\n    style=\"height: 100px;\"\r\n    fxLayoutAlign=\"space-around center\"\r\n  >\r\n    <img\r\n      width=\"50\"\r\n      [style.borderRadius]=\"'50%'\"\r\n      src=\"./assets/user-image.jpg\"\r\n    />\r\n  </div> -->\r\n\r\n  <!-- Menu -->\r\n  <app-sidemenu-item\r\n    *ngFor=\"let menu of menus\"\r\n    [menu]=\"menu\"\r\n    [iconOnly]=\"iconOnly\"\r\n    (onMenuSelected)=\"menuSelected()\"\r\n  >\r\n  </app-sidemenu-item>\r\n\r\n  <!-- Language selector -->\r\n  <!-- TODO a better job displaying the language selector -->\r\n  <!-- <mat-form-field *ngIf=\"!iconOnly\">\r\n    <span matPrefix style=\"margin-right: 8px;\">\r\n      <mat-icon>language</mat-icon>\r\n    </span>\r\n\r\n    <mat-select\r\n      name=\"language\"\r\n      [(ngModel)]=\"language\"\r\n      (selectionChange)=\"changeLanguage()\"\r\n    >\r\n      <mat-option value=\"en\"> English </mat-option>\r\n      <mat-option value=\"fr\"> Français </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field style=\"width:50px;\" *ngIf=\"iconOnly\">\r\n    <span matPrefix style=\"margin-right: 8px;\">\r\n      <mat-icon>language</mat-icon>\r\n    </span>\r\n\r\n    <mat-select\r\n      name=\"language\"\r\n      [(ngModel)]=\"language\"\r\n      (selectionChange)=\"changeLanguage()\"\r\n    >\r\n      <mat-option value=\"en\"> English </mat-option>\r\n      <mat-option value=\"fr\"> Français </mat-option>\r\n    </mat-select>\r\n  </mat-form-field> -->\r\n</div>\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;AAG9E,SAASC,KAAK,QAAQ,kDAAkD;;;;;;;;ICuBtEC,EAAA,CAAAC,cAAA,2BAKC;IADCD,EAAA,CAAAE,UAAA,4BAAAC,2FAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAkBP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,YAAA,EAAc;IAAA,EAAC;IAEnCT,EAAA,CAAAU,YAAA,EAAoB;;;;;IAJlBV,EAAA,CAAAW,UAAA,SAAAC,OAAA,CAAa,aAAAC,MAAA,CAAAC,QAAA;;;ADlBjB,OAAM,MAAOC,iBAAiB;EAiB5BC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IATpB,KAAAH,QAAQ,GAAG,KAAK;IAElB,KAAAf,KAAK,GAAGA,KAAK;IAEpB;;;IAGU,KAAAmB,cAAc,GAA0B,IAAIpB,YAAY,EAAE;EAElB;EAElDqB,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,SAAS,CAACI,WAAW;EAC5C;EAEA;;;EAGAZ,YAAYA,CAAA;IACV,IAAI,CAACS,cAAc,CAACI,IAAI,CAAC,IAAI,CAAC;EAChC;EAEA;;;;;EAKOC,cAAcA,CAAA;IACnB;EAAA;EACD,QAAAC,CAAA,G;qBArCUT,iBAAiB,EAAAf,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBb,iBAAiB;IAAAc,SAAA;IAAAC,MAAA;MAAAhB,QAAA;IAAA;IAAAiB,OAAA;MAAAb,cAAA;IAAA;IAAAc,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9BrC,EAAA,CAAAC,cAAA,aAAuB;QA0BrBD,EAAA,CAAAuC,UAAA,IAAAC,8CAAA,+BAMoB;QAiCtBxC,EAAA,CAAAU,YAAA,EAAM;;;QAtCeV,EAAA,CAAAyC,SAAA,GAAQ;QAARzC,EAAA,CAAAW,UAAA,YAAA2B,GAAA,CAAAvC,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}