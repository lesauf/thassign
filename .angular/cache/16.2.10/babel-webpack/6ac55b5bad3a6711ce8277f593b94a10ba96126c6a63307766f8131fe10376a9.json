{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/legacy-list\";\nimport * as i5 from \"@angular/material/core\";\nfunction SidemenuItemComponent_mat_list_item_1_h3_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, i0.ɵɵpipeBind1(3, 3, ctx_r1.menu.name)));\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\nfunction SidemenuItemComponent_mat_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 1);\n    i0.ɵɵlistener(\"click\", function SidemenuItemComponent_mat_list_item_1_Template_mat_list_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.menuSelected());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, SidemenuItemComponent_mat_list_item_1_h3_3_Template, 4, 5, \"h3\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.menu.link));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.menu.icon, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.iconOnly);\n  }\n}\nexport class SidemenuItemComponent {\n  constructor() {\n    this.secondaryMenu = false;\n    /**\r\n     * Emit event to close sidenav on menu select\r\n     */\n    this.onMenuSelected = new EventEmitter();\n  }\n  ngOnInit() {}\n  openLink() {\n    this.menu.open = this.menu.open;\n  }\n  chechForChildMenu() {\n    return this.menu && this.menu.sub ? true : false;\n  }\n  /**\r\n   * Emit an event to close the drawer when menu is clicked\r\n   */\n  menuSelected() {\n    this.onMenuSelected.emit(true);\n  }\n  static #_ = this.ɵfac = function SidemenuItemComponent_Factory(t) {\n    return new (t || SidemenuItemComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidemenuItemComponent,\n    selectors: [[\"app-sidemenu-item\"]],\n    inputs: {\n      menu: \"menu\",\n      iconOnly: \"iconOnly\",\n      secondaryMenu: \"secondaryMenu\"\n    },\n    outputs: {\n      onMenuSelected: \"onMenuSelected\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"routerLink\", \"click\", 4, \"ngIf\"], [3, \"routerLink\", \"click\"], [\"matListIcon\", \"\", \"iconsmall\", \"\"], [\"matLine\", \"\", 4, \"ngIf\"], [\"matLine\", \"\"]],\n    template: function SidemenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-nav-list\");\n        i0.ɵɵtemplate(1, SidemenuItemComponent_mat_list_item_1_Template, 4, 5, \"mat-list-item\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.link !== false);\n      }\n    },\n    dependencies: [i1.NgIf, i2.RouterLink, i3.MatIcon, i4.MatLegacyNavList, i4.MatLegacyListItem, i5.MatLine, i4.MatLegacyListIconCssMatStyler, i1.TitleCasePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWRlbWVudS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc2lkZW1lbnUtaXRlbS9zaWRlbWVudS1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r1","menu","name","ɵɵlistener","SidemenuItemComponent_mat_list_item_1_Template_mat_list_item_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","menuSelected","ɵɵtemplate","SidemenuItemComponent_mat_list_item_1_h3_3_Template","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","link","ɵɵtextInterpolate1","icon","iconOnly","SidemenuItemComponent","constructor","secondaryMenu","onMenuSelected","ngOnInit","openLink","open","chechForChildMenu","sub","emit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","SidemenuItemComponent_Template","rf","ctx","SidemenuItemComponent_mat_list_item_1_Template"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\sidemenu-item\\sidemenu-item.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\sidemenu-item\\sidemenu-item.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-sidemenu-item',\r\n    templateUrl: './sidemenu-item.component.html',\r\n    styleUrls: ['./sidemenu-item.component.scss']\r\n})\r\nexport class SidemenuItemComponent implements OnInit {\r\n\r\n    @Input() menu;\r\n    @Input() iconOnly: boolean;\r\n    @Input() secondaryMenu = false;\r\n    /**\r\n     * Emit event to close sidenav on menu select\r\n     */\r\n    @Output() onMenuSelected: EventEmitter<boolean> = new EventEmitter();\r\n\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    openLink() {\r\n        this.menu.open = this.menu.open;\r\n    }\r\n\r\n    chechForChildMenu() {\r\n      return (this.menu && this.menu.sub) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Emit an event to close the drawer when menu is clicked\r\n     */\r\n    menuSelected() {\r\n      this.onMenuSelected.emit(true);\r\n    }\r\n\r\n}\r\n","<mat-nav-list>\r\n  <mat-list-item *ngIf=\"menu.link !== false\" [routerLink]=\"[menu.link]\" (click)=\"menuSelected()\">\r\n    <mat-icon matListIcon iconsmall>{{ menu.icon }} </mat-icon>\r\n    <h3 matLine *ngIf=\"!iconOnly\">{{ menu.name | translate | titlecase }}</h3>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;;;;;;;;;ICG1EC,EAAA,CAAAC,cAAA,YAA8B;IAAAD,EAAA,CAAAE,MAAA,GAAuC;;;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA5CH,EAAA,CAAAI,SAAA,GAAuC;IAAvCJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,OAAAN,EAAA,CAAAM,WAAA,OAAAC,MAAA,CAAAC,IAAA,CAAAC,IAAA,GAAuC;;;;;;;;;IAFvET,EAAA,CAAAC,cAAA,uBAA+F;IAAzBD,EAAA,CAAAU,UAAA,mBAAAC,8EAAA;MAAAX,EAAA,CAAAY,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAd,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAF,MAAA,CAAAG,YAAA,EAAc;IAAA,EAAC;IAC5FjB,EAAA,CAAAC,cAAA,kBAAgC;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAC3DH,EAAA,CAAAkB,UAAA,IAAAC,mDAAA,gBAA0E;IAC5EnB,EAAA,CAAAG,YAAA,EAAgB;;;;IAH2BH,EAAA,CAAAoB,UAAA,eAAApB,EAAA,CAAAqB,eAAA,IAAAC,GAAA,EAAAC,MAAA,CAAAf,IAAA,CAAAgB,IAAA,EAA0B;IACnCxB,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAyB,kBAAA,KAAAF,MAAA,CAAAf,IAAA,CAAAkB,IAAA,MAAgB;IACnC1B,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAoB,UAAA,UAAAG,MAAA,CAAAI,QAAA,CAAe;;;ADIhC,OAAM,MAAOC,qBAAqB;EAW9BC,YAAA;IAPS,KAAAC,aAAa,GAAG,KAAK;IAC9B;;;IAGU,KAAAC,cAAc,GAA0B,IAAIhC,YAAY,EAAE;EAGpD;EAEhBiC,QAAQA,CAAA,GACR;EAEAC,QAAQA,CAAA;IACJ,IAAI,CAACzB,IAAI,CAAC0B,IAAI,GAAG,IAAI,CAAC1B,IAAI,CAAC0B,IAAI;EACnC;EAEAC,iBAAiBA,CAAA;IACf,OAAQ,IAAI,CAAC3B,IAAI,IAAI,IAAI,CAACA,IAAI,CAAC4B,GAAG,GAAI,IAAI,GAAG,KAAK;EACpD;EAEA;;;EAGAnB,YAAYA,CAAA;IACV,IAAI,CAACc,cAAc,CAACM,IAAI,CAAC,IAAI,CAAC;EAChC;EAAC,QAAAC,CAAA,G;qBA7BQV,qBAAqB;EAAA;EAAA,QAAAW,EAAA,G;UAArBX,qBAAqB;IAAAY,SAAA;IAAAC,MAAA;MAAAjC,IAAA;MAAAmB,QAAA;MAAAG,aAAA;IAAA;IAAAY,OAAA;MAAAX,cAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPlChD,EAAA,CAAAC,cAAA,mBAAc;QACZD,EAAA,CAAAkB,UAAA,IAAAgC,8CAAA,2BAGgB;QAClBlD,EAAA,CAAAG,YAAA,EAAe;;;QAJGH,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAoB,UAAA,SAAA6B,GAAA,CAAAzC,IAAA,CAAAgB,IAAA,WAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}