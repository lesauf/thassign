{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, NgModule } from '@angular/core';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵfetchInstance, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\nconst proxyPolyfillCompat = {\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null\n};\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\nclass AngularFireAuth {\n  constructor(options, nameOrConfig,\n  // tslint:disable-next-line:ban-types\n  platformId, zone, _useEmulator,\n  // can't use the tuple here\n  _settings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n    const logins = new Subject();\n    const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))), map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)), map(app => zone.runOutsideAngular(() => {\n      const useEmulator = _useEmulator;\n      const settings = _settings;\n      return ɵfetchInstance(`${app.name}.auth`, 'AngularFireAuth', app, () => {\n        const auth = zone.runOutsideAngular(() => app.auth());\n        if (useEmulator) {\n          // Firebase Auth doesn't conform to the useEmulator convention, let's smooth that over\n          auth.useEmulator(`http://${useEmulator.join(':')}`);\n        }\n        if (tenantId) {\n          auth.tenantId = tenantId;\n        }\n        auth.languageCode = languageCode;\n        if (useDeviceLanguage) {\n          auth.useDeviceLanguage();\n        }\n        if (settings) {\n          for (const [k, v] of Object.entries(settings)) {\n            auth.settings[k] = v;\n          }\n        }\n        if (persistence) {\n          auth.setPersistence(persistence);\n        }\n        return auth;\n      }, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n    })), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n    if (isPlatformServer(platformId)) {\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n    } else {\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n      const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({\n        bufferSize: 1,\n        refCount: false\n      }));\n      const fromCallback = cb => new Observable(subscriber => ({\n        unsubscribe: zone.runOutsideAngular(() => cb(subscriber))\n      }));\n      const authStateChanged = auth.pipe(switchMap(auth => fromCallback(auth.onAuthStateChanged.bind(auth))));\n      const idTokenChanged = auth.pipe(switchMap(auth => fromCallback(auth.onIdTokenChanged.bind(auth))));\n      this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n      this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n      this.credential = merge(redirectResult, logins,\n      // pipe in null authState to make credential zipable, just a weird devexp if\n      // authState and user go null to still have a credential\n      this.authState.pipe(filter(it => !it))).pipe(\n      // handle the { user: { } } when a user is already logged in, rather have null\n      // TODO handle the type corcersion better\n      map(credential => (credential === null || credential === void 0 ? void 0 : credential.user) ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    }\n    return ɵlazySDKProxy(this, auth, zone, {\n      spy: {\n        apply: (name, _, val) => {\n          // If they call a signIn or createUser function listen into the promise\n          // this will give us the user credential, push onto the logins Subject\n          // to be consumed in .credential\n          if (name.startsWith('signIn') || name.startsWith('createUser')) {\n            // TODO fix the types, the trouble is UserCredential has everything optional\n            val.then(user => logins.next(user));\n          }\n        }\n      }\n    });\n  }\n}\n/** @nocollapse */\nAngularFireAuth.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AngularFireAuth_Factory() {\n    return new AngularFireAuth(i0.ɵɵinject(i1.FIREBASE_OPTIONS), i0.ɵɵinject(i1.FIREBASE_APP_NAME, 8), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8));\n  },\n  token: AngularFireAuth,\n  providedIn: \"any\"\n});\nAngularFireAuth.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'any'\n  }]\n}];\n/** @nocollapse */\nAngularFireAuth.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [FIREBASE_OPTIONS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [FIREBASE_APP_NAME]\n  }]\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [USE_EMULATOR]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [SETTINGS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TENANT_ID]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [LANGUAGE_CODE]\n  }]\n}, {\n  type: Boolean,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [USE_DEVICE_LANGUAGE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [PERSISTENCE]\n  }]\n}];\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\nclass AngularFireAuthModule {}\nAngularFireAuthModule.decorators = [{\n  type: NgModule,\n  args: [{\n    providers: [AngularFireAuth]\n  }]\n}];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR };","map":{"version":3,"names":["i0","InjectionToken","Injectable","Inject","Optional","PLATFORM_ID","NgZone","NgModule","Subject","of","Observable","from","merge","observeOn","switchMap","map","shareReplay","first","switchMapTo","subscribeOn","filter","i1","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","ɵfirebaseAppFactory","ɵfetchInstance","ɵlazySDKProxy","FIREBASE_OPTIONS","FIREBASE_APP_NAME","ɵapplyMixins","isPlatformServer","proxyPolyfillCompat","app","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","currentUser","fetchSignInMethodsForEmail","isSignInWithEmailLink","getRedirectResult","languageCode","settings","onAuthStateChanged","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","signInAndRetrieveDataWithCredential","signInAnonymously","signInWithCredential","signInWithCustomToken","signInWithEmailAndPassword","signInWithPhoneNumber","signInWithEmailLink","signInWithPopup","signInWithRedirect","signOut","tenantId","updateCurrentUser","useDeviceLanguage","useEmulator","verifyPasswordResetCode","USE_EMULATOR","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","AngularFireAuth","constructor","options","nameOrConfig","platformId","zone","_useEmulator","_settings","persistence","schedulers","keepUnstableUntilFirst","logins","auth","undefined","pipe","outsideAngular","runOutsideAngular","name","join","k","v","Object","entries","bufferSize","refCount","authState","user","idToken","idTokenResult","credential","_","subscribe","redirectResult","then","it","fromCallback","cb","subscriber","unsubscribe","authStateChanged","bind","idTokenChanged","insideAngular","getIdToken","getIdTokenResult","spy","apply","val","startsWith","next","ɵprov","ɵɵdefineInjectable","factory","AngularFireAuth_Factory","ɵɵinject","token","providedIn","decorators","type","args","ctorParameters","String","Boolean","AngularFireAuthModule","providers"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/fire/fesm2015/angular-fire-auth.js"],"sourcesContent":["\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, NgModule } from '@angular/core';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵfetchInstance, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\n\nconst proxyPolyfillCompat = {\n    app: null,\n    applyActionCode: null,\n    checkActionCode: null,\n    confirmPasswordReset: null,\n    createUserWithEmailAndPassword: null,\n    currentUser: null,\n    fetchSignInMethodsForEmail: null,\n    isSignInWithEmailLink: null,\n    getRedirectResult: null,\n    languageCode: null,\n    settings: null,\n    onAuthStateChanged: null,\n    onIdTokenChanged: null,\n    sendSignInLinkToEmail: null,\n    sendPasswordResetEmail: null,\n    setPersistence: null,\n    signInAndRetrieveDataWithCredential: null,\n    signInAnonymously: null,\n    signInWithCredential: null,\n    signInWithCustomToken: null,\n    signInWithEmailAndPassword: null,\n    signInWithPhoneNumber: null,\n    signInWithEmailLink: null,\n    signInWithPopup: null,\n    signInWithRedirect: null,\n    signOut: null,\n    tenantId: null,\n    updateCurrentUser: null,\n    useDeviceLanguage: null,\n    useEmulator: null,\n    verifyPasswordResetCode: null,\n};\n\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\nclass AngularFireAuth {\n    constructor(options, nameOrConfig, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, _useEmulator, // can't use the tuple here\n    _settings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence) {\n        const schedulers = new ɵAngularFireSchedulers(zone);\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n        const logins = new Subject();\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))), map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)), map(app => zone.runOutsideAngular(() => {\n            const useEmulator = _useEmulator;\n            const settings = _settings;\n            return ɵfetchInstance(`${app.name}.auth`, 'AngularFireAuth', app, () => {\n                const auth = zone.runOutsideAngular(() => app.auth());\n                if (useEmulator) {\n                    // Firebase Auth doesn't conform to the useEmulator convention, let's smooth that over\n                    auth.useEmulator(`http://${useEmulator.join(':')}`);\n                }\n                if (tenantId) {\n                    auth.tenantId = tenantId;\n                }\n                auth.languageCode = languageCode;\n                if (useDeviceLanguage) {\n                    auth.useDeviceLanguage();\n                }\n                if (settings) {\n                    for (const [k, v] of Object.entries(settings)) {\n                        auth.settings[k] = v;\n                    }\n                }\n                if (persistence) {\n                    auth.setPersistence(persistence);\n                }\n                return auth;\n            }, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n        })), shareReplay({ bufferSize: 1, refCount: false }));\n        if (isPlatformServer(platformId)) {\n            this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n        }\n        else {\n            // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n            //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n            //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n            //       There could potentially be race conditions still... but this greatly decreases the odds while\n            //       we reevaluate the API.\n            const _ = auth.pipe(first()).subscribe();\n            const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({ bufferSize: 1, refCount: false }));\n            const fromCallback = (cb) => new Observable(subscriber => ({ unsubscribe: zone.runOutsideAngular(() => cb(subscriber)) }));\n            const authStateChanged = auth.pipe(switchMap(auth => fromCallback(auth.onAuthStateChanged.bind(auth))));\n            const idTokenChanged = auth.pipe(switchMap(auth => fromCallback(auth.onIdTokenChanged.bind(auth))));\n            this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n            this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n            this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n            this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n            this.credential = merge(redirectResult, logins, \n            // pipe in null authState to make credential zipable, just a weird devexp if\n            // authState and user go null to still have a credential\n            this.authState.pipe(filter(it => !it))).pipe(\n            // handle the { user: { } } when a user is already logged in, rather have null\n            // TODO handle the type corcersion better\n            map(credential => (credential === null || credential === void 0 ? void 0 : credential.user) ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n        }\n        return ɵlazySDKProxy(this, auth, zone, { spy: {\n                apply: (name, _, val) => {\n                    // If they call a signIn or createUser function listen into the promise\n                    // this will give us the user credential, push onto the logins Subject\n                    // to be consumed in .credential\n                    if (name.startsWith('signIn') || name.startsWith('createUser')) {\n                        // TODO fix the types, the trouble is UserCredential has everything optional\n                        val.then((user) => logins.next(user));\n                    }\n                }\n            } });\n    }\n}\n/** @nocollapse */ AngularFireAuth.ɵprov = i0.ɵɵdefineInjectable({ factory: function AngularFireAuth_Factory() { return new AngularFireAuth(i0.ɵɵinject(i1.FIREBASE_OPTIONS), i0.ɵɵinject(i1.FIREBASE_APP_NAME, 8), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8)); }, token: AngularFireAuth, providedIn: \"any\" });\nAngularFireAuth.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'any'\n            },] }\n];\n/** @nocollapse */\nAngularFireAuth.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_EMULATOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SETTINGS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [TENANT_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [LANGUAGE_CODE,] }] },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [USE_DEVICE_LANGUAGE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [PERSISTENCE,] }] }\n];\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n\nclass AngularFireAuthModule {\n}\nAngularFireAuthModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [AngularFireAuth]\n            },] }\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR };\n"],"mappings":"AACA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAC3G,SAASC,OAAO,EAAEC,EAAE,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC3D,SAASC,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,QAAQ,gBAAgB;AAChH,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,sBAAsB,EAAEC,8BAA8B,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,eAAe;AAC7L,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,MAAMC,mBAAmB,GAAG;EACxBC,GAAG,EAAE,IAAI;EACTC,eAAe,EAAE,IAAI;EACrBC,eAAe,EAAE,IAAI;EACrBC,oBAAoB,EAAE,IAAI;EAC1BC,8BAA8B,EAAE,IAAI;EACpCC,WAAW,EAAE,IAAI;EACjBC,0BAA0B,EAAE,IAAI;EAChCC,qBAAqB,EAAE,IAAI;EAC3BC,iBAAiB,EAAE,IAAI;EACvBC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE,IAAI;EACdC,kBAAkB,EAAE,IAAI;EACxBC,gBAAgB,EAAE,IAAI;EACtBC,qBAAqB,EAAE,IAAI;EAC3BC,sBAAsB,EAAE,IAAI;EAC5BC,cAAc,EAAE,IAAI;EACpBC,mCAAmC,EAAE,IAAI;EACzCC,iBAAiB,EAAE,IAAI;EACvBC,oBAAoB,EAAE,IAAI;EAC1BC,qBAAqB,EAAE,IAAI;EAC3BC,0BAA0B,EAAE,IAAI;EAChCC,qBAAqB,EAAE,IAAI;EAC3BC,mBAAmB,EAAE,IAAI;EACzBC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE,IAAI;EACxBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,iBAAiB,EAAE,IAAI;EACvBC,iBAAiB,EAAE,IAAI;EACvBC,WAAW,EAAE,IAAI;EACjBC,uBAAuB,EAAE;AAC7B,CAAC;AAED,MAAMC,YAAY,GAAG,IAAI9D,cAAc,CAAC,gCAAgC,CAAC;AACzE,MAAM+D,QAAQ,GAAG,IAAI/D,cAAc,CAAC,4BAA4B,CAAC;AACjE,MAAMgE,SAAS,GAAG,IAAIhE,cAAc,CAAC,6BAA6B,CAAC;AACnE,MAAMiE,aAAa,GAAG,IAAIjE,cAAc,CAAC,kCAAkC,CAAC;AAC5E,MAAMkE,mBAAmB,GAAG,IAAIlE,cAAc,CAAC,uCAAuC,CAAC;AACvF,MAAMmE,WAAW,GAAG,IAAInE,cAAc,CAAC,8BAA8B,CAAC;AACtE,MAAMoE,eAAe,CAAC;EAClBC,WAAWA,CAACC,OAAO,EAAEC,YAAY;EACjC;EACAC,UAAU,EAAEC,IAAI,EAAEC,YAAY;EAAE;EAChCC,SAAS;EAAE;EACXlB,QAAQ,EAAEjB,YAAY,EAAEmB,iBAAiB,EAAEiB,WAAW,EAAE;IACpD,MAAMC,UAAU,GAAG,IAAIxD,sBAAsB,CAACoD,IAAI,CAAC;IACnD,MAAMK,sBAAsB,GAAGxD,8BAA8B,CAACuD,UAAU,CAAC;IACzE,MAAME,MAAM,GAAG,IAAIxE,OAAO,CAAC,CAAC;IAC5B,MAAMyE,IAAI,GAAGxE,EAAE,CAACyE,SAAS,CAAC,CAACC,IAAI,CAACtE,SAAS,CAACiE,UAAU,CAACM,cAAc,CAAC,EAAEtE,SAAS,CAAC,MAAM4D,IAAI,CAACW,iBAAiB,CAAC,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAEtE,GAAG,CAAC,MAAMS,mBAAmB,CAAC+C,OAAO,EAAEG,IAAI,EAAEF,YAAY,CAAC,CAAC,EAAEzD,GAAG,CAACiB,GAAG,IAAI0C,IAAI,CAACW,iBAAiB,CAAC,MAAM;MAC/O,MAAMxB,WAAW,GAAGc,YAAY;MAChC,MAAMjC,QAAQ,GAAGkC,SAAS;MAC1B,OAAOnD,cAAc,CAAE,GAAEO,GAAG,CAACsD,IAAK,OAAM,EAAE,iBAAiB,EAAEtD,GAAG,EAAE,MAAM;QACpE,MAAMiD,IAAI,GAAGP,IAAI,CAACW,iBAAiB,CAAC,MAAMrD,GAAG,CAACiD,IAAI,CAAC,CAAC,CAAC;QACrD,IAAIpB,WAAW,EAAE;UACb;UACAoB,IAAI,CAACpB,WAAW,CAAE,UAASA,WAAW,CAAC0B,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;QACvD;QACA,IAAI7B,QAAQ,EAAE;UACVuB,IAAI,CAACvB,QAAQ,GAAGA,QAAQ;QAC5B;QACAuB,IAAI,CAACxC,YAAY,GAAGA,YAAY;QAChC,IAAImB,iBAAiB,EAAE;UACnBqB,IAAI,CAACrB,iBAAiB,CAAC,CAAC;QAC5B;QACA,IAAIlB,QAAQ,EAAE;UACV,KAAK,MAAM,CAAC8C,CAAC,EAAEC,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACjD,QAAQ,CAAC,EAAE;YAC3CuC,IAAI,CAACvC,QAAQ,CAAC8C,CAAC,CAAC,GAAGC,CAAC;UACxB;QACJ;QACA,IAAIZ,WAAW,EAAE;UACbI,IAAI,CAAClC,cAAc,CAAC8B,WAAW,CAAC;QACpC;QACA,OAAOI,IAAI;MACf,CAAC,EAAE,CAACpB,WAAW,EAAEH,QAAQ,EAAEjB,YAAY,EAAEmB,iBAAiB,EAAElB,QAAQ,EAAEmC,WAAW,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC,EAAE7D,WAAW,CAAC;MAAE4E,UAAU,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC,CAAC;IACrD,IAAI/D,gBAAgB,CAAC2C,UAAU,CAAC,EAAE;MAC9B,IAAI,CAACqB,SAAS,GAAG,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,UAAU,GAAGzF,EAAE,CAAC,IAAI,CAAC;IAC/F,CAAC,MACI;MACD;MACA;MACA;MACA;MACA;MACA,MAAM0F,CAAC,GAAGlB,IAAI,CAACE,IAAI,CAAClE,KAAK,CAAC,CAAC,CAAC,CAACmF,SAAS,CAAC,CAAC;MACxC,MAAMC,cAAc,GAAGpB,IAAI,CAACE,IAAI,CAACrE,SAAS,CAACmE,IAAI,IAAIA,IAAI,CAACzC,iBAAiB,CAAC,CAAC,CAAC8D,IAAI,CAACC,EAAE,IAAIA,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC,EAAExB,sBAAsB,EAAE/D,WAAW,CAAC;QAAE4E,UAAU,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAAC;MACjL,MAAMW,YAAY,GAAIC,EAAE,IAAK,IAAI/F,UAAU,CAACgG,UAAU,KAAK;QAAEC,WAAW,EAAEjC,IAAI,CAACW,iBAAiB,CAAC,MAAMoB,EAAE,CAACC,UAAU,CAAC;MAAE,CAAC,CAAC,CAAC;MAC1H,MAAME,gBAAgB,GAAG3B,IAAI,CAACE,IAAI,CAACrE,SAAS,CAACmE,IAAI,IAAIuB,YAAY,CAACvB,IAAI,CAACtC,kBAAkB,CAACkE,IAAI,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAAC;MACvG,MAAM6B,cAAc,GAAG7B,IAAI,CAACE,IAAI,CAACrE,SAAS,CAACmE,IAAI,IAAIuB,YAAY,CAACvB,IAAI,CAACrC,gBAAgB,CAACiE,IAAI,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAAC;MACnG,IAAI,CAACa,SAAS,GAAGO,cAAc,CAAClB,IAAI,CAACjE,WAAW,CAAC0F,gBAAgB,CAAC,EAAEzF,WAAW,CAAC2D,UAAU,CAACM,cAAc,CAAC,EAAEvE,SAAS,CAACiE,UAAU,CAACiC,aAAa,CAAC,CAAC;MAChJ,IAAI,CAAChB,IAAI,GAAGM,cAAc,CAAClB,IAAI,CAACjE,WAAW,CAAC4F,cAAc,CAAC,EAAE3F,WAAW,CAAC2D,UAAU,CAACM,cAAc,CAAC,EAAEvE,SAAS,CAACiE,UAAU,CAACiC,aAAa,CAAC,CAAC;MACzI,IAAI,CAACf,OAAO,GAAG,IAAI,CAACD,IAAI,CAACZ,IAAI,CAACrE,SAAS,CAACiF,IAAI,IAAIA,IAAI,GAAGpF,IAAI,CAACoF,IAAI,CAACiB,UAAU,CAAC,CAAC,CAAC,GAAGvG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;MAC3F,IAAI,CAACwF,aAAa,GAAG,IAAI,CAACF,IAAI,CAACZ,IAAI,CAACrE,SAAS,CAACiF,IAAI,IAAIA,IAAI,GAAGpF,IAAI,CAACoF,IAAI,CAACkB,gBAAgB,CAAC,CAAC,CAAC,GAAGxG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;MACvG,IAAI,CAACyF,UAAU,GAAGtF,KAAK,CAACyF,cAAc,EAAErB,MAAM;MAC9C;MACA;MACA,IAAI,CAACc,SAAS,CAACX,IAAI,CAAC/D,MAAM,CAACmF,EAAE,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,CAACpB,IAAI;MAC5C;MACA;MACApE,GAAG,CAACmF,UAAU,IAAI,CAACA,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACH,IAAI,IAAIG,UAAU,GAAG,IAAI,CAAC,EAAE/E,WAAW,CAAC2D,UAAU,CAACM,cAAc,CAAC,EAAEvE,SAAS,CAACiE,UAAU,CAACiC,aAAa,CAAC,CAAC;IAClM;IACA,OAAOrF,aAAa,CAAC,IAAI,EAAEuD,IAAI,EAAEP,IAAI,EAAE;MAAEwC,GAAG,EAAE;QACtCC,KAAK,EAAEA,CAAC7B,IAAI,EAAEa,CAAC,EAAEiB,GAAG,KAAK;UACrB;UACA;UACA;UACA,IAAI9B,IAAI,CAAC+B,UAAU,CAAC,QAAQ,CAAC,IAAI/B,IAAI,CAAC+B,UAAU,CAAC,YAAY,CAAC,EAAE;YAC5D;YACAD,GAAG,CAACd,IAAI,CAAEP,IAAI,IAAKf,MAAM,CAACsC,IAAI,CAACvB,IAAI,CAAC,CAAC;UACzC;QACJ;MACJ;IAAE,CAAC,CAAC;EACZ;AACJ;AACA;AAAmB1B,eAAe,CAACkD,KAAK,GAAGvH,EAAE,CAACwH,kBAAkB,CAAC;EAAEC,OAAO,EAAE,SAASC,uBAAuBA,CAAA,EAAG;IAAE,OAAO,IAAIrD,eAAe,CAACrE,EAAE,CAAC2H,QAAQ,CAACtG,EAAE,CAACM,gBAAgB,CAAC,EAAE3B,EAAE,CAAC2H,QAAQ,CAACtG,EAAE,CAACO,iBAAiB,EAAE,CAAC,CAAC,EAAE5B,EAAE,CAAC2H,QAAQ,CAAC3H,EAAE,CAACK,WAAW,CAAC,EAAEL,EAAE,CAAC2H,QAAQ,CAAC3H,EAAE,CAACM,MAAM,CAAC,EAAEN,EAAE,CAAC2H,QAAQ,CAAC5D,YAAY,EAAE,CAAC,CAAC,EAAE/D,EAAE,CAAC2H,QAAQ,CAAC3D,QAAQ,EAAE,CAAC,CAAC,EAAEhE,EAAE,CAAC2H,QAAQ,CAAC1D,SAAS,EAAE,CAAC,CAAC,EAAEjE,EAAE,CAAC2H,QAAQ,CAACzD,aAAa,EAAE,CAAC,CAAC,EAAElE,EAAE,CAAC2H,QAAQ,CAACxD,mBAAmB,EAAE,CAAC,CAAC,EAAEnE,EAAE,CAAC2H,QAAQ,CAACvD,WAAW,EAAE,CAAC,CAAC,CAAC;EAAE,CAAC;EAAEwD,KAAK,EAAEvD,eAAe;EAAEwD,UAAU,EAAE;AAAM,CAAC,CAAC;AAC7exD,eAAe,CAACyD,UAAU,GAAG,CACzB;EAAEC,IAAI,EAAE7H,UAAU;EAAE8H,IAAI,EAAE,CAAC;IACfH,UAAU,EAAE;EAChB,CAAC;AAAG,CAAC,CAChB;AACD;AACAxD,eAAe,CAAC4D,cAAc,GAAG,MAAM,CACnC;EAAEF,IAAI,EAAE7C,SAAS;EAAE4C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAACrG,gBAAgB;EAAG,CAAC;AAAE,CAAC,EAC9E;EAAEoG,IAAI,EAAE7C,SAAS;EAAE4C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAACpG,iBAAiB;EAAG,CAAC;AAAE,CAAC,EACnG;EAAEmG,IAAI,EAAErC,MAAM;EAAEoC,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAC3H,WAAW;EAAG,CAAC;AAAE,CAAC,EACtE;EAAE0H,IAAI,EAAEzH;AAAO,CAAC,EAChB;EAAEyH,IAAI,EAAE7C,SAAS;EAAE4C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAACjE,YAAY;EAAG,CAAC;AAAE,CAAC,EAC9F;EAAEgE,IAAI,EAAE7C,SAAS;EAAE4C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAChE,QAAQ;EAAG,CAAC;AAAE,CAAC,EAC1F;EAAE+D,IAAI,EAAEG,MAAM;EAAEJ,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAC/D,SAAS;EAAG,CAAC;AAAE,CAAC,EACxF;EAAE8D,IAAI,EAAEG,MAAM;EAAEJ,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAC9D,aAAa;EAAG,CAAC;AAAE,CAAC,EAC5F;EAAE6D,IAAI,EAAEI,OAAO;EAAEL,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAC7D,mBAAmB;EAAG,CAAC;AAAE,CAAC,EACnG;EAAE4D,IAAI,EAAEG,MAAM;EAAEJ,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE3H;EAAS,CAAC,EAAE;IAAE2H,IAAI,EAAE5H,MAAM;IAAE6H,IAAI,EAAE,CAAC5D,WAAW;EAAG,CAAC;AAAE,CAAC,CAC7F;AACDvC,YAAY,CAACwC,eAAe,EAAE,CAACtC,mBAAmB,CAAC,CAAC;AAEpD,MAAMqG,qBAAqB,CAAC;AAE5BA,qBAAqB,CAACN,UAAU,GAAG,CAC/B;EAAEC,IAAI,EAAExH,QAAQ;EAAEyH,IAAI,EAAE,CAAC;IACbK,SAAS,EAAE,CAAChE,eAAe;EAC/B,CAAC;AAAG,CAAC,CAChB;;AAED;AACA;AACA;;AAEA,SAASA,eAAe,EAAE+D,qBAAqB,EAAElE,aAAa,EAAEE,WAAW,EAAEJ,QAAQ,EAAEC,SAAS,EAAEE,mBAAmB,EAAEJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}