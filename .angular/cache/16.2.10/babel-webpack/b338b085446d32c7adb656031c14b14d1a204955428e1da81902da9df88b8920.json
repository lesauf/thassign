{"ast":null,"code":"import { OptionsDialogComponent } from '@src/app/shared/components/options-dialog/options-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/legacy-form-field\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/legacy-input\";\nfunction PickerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 4)(2, \"input\", 5);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.control);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r0.placeholder);\n    i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(3, 3, ctx_r0.control.value[ctx_r0.labelField]));\n  }\n}\nfunction PickerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r2.placeholder);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.control);\n  }\n}\n/**\r\n * Implementing the idea to replace select with modal picker with ampl space for options\r\n *\r\n * @link https://medium.com/@mibosc/responsive-design-why-and-how-we-ditched-the-good-old-select-element-bc190d62eff5\r\n *\r\n */\nexport class PickerComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n    /**\r\n     * Component in charge of the display of list\r\n     */\n    this.optionsTemplate = OptionsDialogComponent; // ComponentType<T> | TemplateRef<T>;\n  }\n\n  ngOnInit() {\n    this.control = this.form.get(this.controlPath);\n    // console.log(this.optionsTemplate);\n    if (!this.optionsTemplate) {\n      // this.optionsTemplate = OptionsDialogComponent;\n    }\n  }\n  openOptionsDialog() {\n    const dialogRef = this.dialog.open(this.optionsTemplate, {\n      data: {\n        title: this.title,\n        options: this.options,\n        labelField: this.labelField\n      },\n      height: '100%',\n      position: {\n        right: '0',\n        top: '0'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // Do not change the value if nothing was selected\n        this.control.setValue(result.data);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function PickerComponent_Factory(t) {\n    return new (t || PickerComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PickerComponent,\n    selectors: [[\"app-picker\"]],\n    inputs: {\n      optionsTemplate: \"optionsTemplate\",\n      form: \"form\",\n      controlPath: \"controlPath\",\n      placeholder: \"placeholder\",\n      title: \"title\",\n      options: \"options\",\n      labelField: \"labelField\",\n      selectedValue: \"selectedValue\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[\"fxFill\", \"\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"plainOption\", \"\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\"], [\"hidden\", \"\", 3, \"formControl\"], [\"matInput\", \"\", \"readonly\", \"\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"readonly\", \"\", 3, \"formControl\", \"placeholder\"]],\n    template: function PickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵlistener(\"click\", function PickerComponent_Template_mat_form_field_click_0_listener() {\n          return ctx.openOptionsDialog();\n        });\n        i0.ɵɵtemplate(1, PickerComponent_ng_container_1_Template, 4, 5, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, PickerComponent_ng_template_2_Template, 1, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(4, \"button\", 3)(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"arrow_right\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.labelField)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i4.MatLegacyButton, i5.MatLegacyFormField, i5.MatLegacySuffix, i6.MatIcon, i7.MatLegacyInput, i3.FormControlDirective],\n    styles: [\"input[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpY2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJwaWNrZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcGlja2VyL3BpY2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRjtBQUNBLDRTQUE0UyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["OptionsDialogComponent","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","control","ɵɵpropertyInterpolate","placeholder","ɵɵpipeBind1","value","labelField","ctx_r2","PickerComponent","constructor","dialog","optionsTemplate","ngOnInit","form","get","controlPath","openOptionsDialog","dialogRef","open","data","title","options","height","position","right","top","afterClosed","subscribe","result","setValue","_","ɵɵdirectiveInject","i1","MatLegacyDialog","_2","selectors","inputs","selectedValue","decls","vars","consts","template","PickerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PickerComponent_Template_mat_form_field_click_0_listener","ɵɵtemplate","PickerComponent_ng_container_1_Template","PickerComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵtext","ɵɵelementEnd","_r1"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\picker\\picker.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\picker\\picker.component.html"],"sourcesContent":["import { Component, OnInit, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n  MatLegacyDialog as MatDialog,\r\n  MatLegacyDialogRef as MatDialogRef,\r\n  MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA,\r\n} from '@angular/material/legacy-dialog';\r\nimport { OptionsDialogComponent } from '@src/app/shared/components/options-dialog/options-dialog.component';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\n\r\n/**\r\n * Implementing the idea to replace select with modal picker with ampl space for options\r\n *\r\n * @link https://medium.com/@mibosc/responsive-design-why-and-how-we-ditched-the-good-old-select-element-bc190d62eff5\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-picker',\r\n  templateUrl: './picker.component.html',\r\n  styleUrls: ['./picker.component.scss'],\r\n})\r\nexport class PickerComponent<T> implements OnInit {\r\n  /**\r\n   * Component in charge of the display of list\r\n   */\r\n  @Input() optionsTemplate: any = OptionsDialogComponent; // ComponentType<T> | TemplateRef<T>;\r\n\r\n  @Input() form: UntypedFormGroup;\r\n  @Input() controlPath: string[];\r\n  // @Input() controlName: string;\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Title of the dialog\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * List of options\r\n   */\r\n  @Input() options: T[];\r\n\r\n  /**\r\n   * If options are objects, this will be the property used\r\n   * to as label\r\n   */\r\n  @Input() labelField: string;\r\n\r\n  // @Output() selectionDone: EventEmitter<T> = new EventEmitter();\r\n\r\n  @Input() selectedValue: T;\r\n\r\n  control: UntypedFormGroup;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.control = this.form.get(this.controlPath) as UntypedFormGroup;\r\n\r\n    // console.log(this.optionsTemplate);\r\n    if (!this.optionsTemplate) {\r\n      // this.optionsTemplate = OptionsDialogComponent;\r\n    }\r\n  }\r\n\r\n  openOptionsDialog() {\r\n    const dialogRef = this.dialog.open(this.optionsTemplate, {\r\n      data: {\r\n        title: this.title,\r\n        options: this.options,\r\n        labelField: this.labelField,\r\n      },\r\n      height: '100%',\r\n      position: {\r\n        right: '0',\r\n        top: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        // Do not change the value if nothing was selected\r\n\r\n        this.control.setValue(result.data);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-form-field fxFill (click)=\"openOptionsDialog()\">\r\n  <ng-container *ngIf=\"labelField; else plainOption\">\r\n    <input [formControl]=\"control\" hidden />\r\n    <!-- Display value because it is an object -->\r\n    <input\r\n      matInput\r\n      placeholder=\"{{ placeholder }}\"\r\n      value=\"{{ control.value[labelField] | translate }}\"\r\n      readonly\r\n    />\r\n\r\n    <!-- <span>{{ control.value[labelField] | translate }} </span> -->\r\n  </ng-container>\r\n\r\n  <ng-template #plainOption>\r\n    <input\r\n      matInput\r\n      [formControl]=\"control\"\r\n      placeholder=\"{{ placeholder }}\"\r\n      readonly\r\n    />\r\n  </ng-template>\r\n\r\n  <button type=\"button\" mat-icon-button matSuffix>\r\n    <mat-icon>arrow_right</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}