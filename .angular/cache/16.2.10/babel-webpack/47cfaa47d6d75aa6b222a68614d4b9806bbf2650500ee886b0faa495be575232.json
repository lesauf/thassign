{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ToolbarHelpers } from '@src/app/shared/components/toolbar/toolbar.helpers';\nimport { ToolbarNotificationComponent } from '@src/app/shared/components/toolbar-notification/toolbar-notification.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"@src/app/core/services/backend.service\";\nimport * as i3 from \"@src/app/core/services/message.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/badge\";\nimport * as i6 from \"@angular/material/legacy-button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@src/app/shared/components/user-menu/user-menu.component\";\nimport * as i10 from \"@src/app/shared/components/language-picker/language-picker.component\";\nfunction ToolbarComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.sidenav.toggle();\n      return i0.ɵɵresetView(ctx_r2.drawer.toggle());\n    });\n    i0.ɵɵelementStart(1, \"i\", 7);\n    i0.ɵɵtext(2, \"menu \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ToolbarComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.sidenav.toggle());\n    });\n    i0.ɵɵelementStart(1, \"i\", 7);\n    i0.ɵɵtext(2, \"menu \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ToolbarComponent {\n  constructor(_matDialog, backendService, messageService) {\n    this._matDialog = _matDialog;\n    this.backendService = backendService;\n    this.messageService = messageService;\n    this.searchOpen = false;\n    this.toolbarHelpers = ToolbarHelpers;\n  }\n  ngOnInit() {\n    this.currentUser = this.backendService.getSignedInUser();\n  }\n  // Call the dialog\n  showNotificationsDialog(evt) {\n    const target = new ElementRef(evt.currentTarget);\n    const dialogRef = this._matDialog.open(ToolbarNotificationComponent, {\n      data: {\n        trigger: target,\n        notifications: this.toolbarHelpers.notifications\n      }\n    });\n    dialogRef.afterClosed().subscribe(_res => {});\n  }\n  static #_ = this.ɵfac = function ToolbarComponent_Factory(t) {\n    return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i2.BackendService), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolbarComponent,\n    selectors: [[\"ma-toolbar\"]],\n    inputs: {\n      sidenav: \"sidenav\",\n      sidebar: \"sidebar\",\n      drawer: \"drawer\",\n      matDrawerShow: \"matDrawerShow\"\n    },\n    decls: 10,\n    vars: 4,\n    consts: [[\"fxFlexLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", 1, \"mat-elevation-z4\"], [\"fxFlex\", \"\"], [\"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"fxFlex\", \"\", \"fxFlexLayout\", \"row\", \"fxLayoutAlign\", \"end center\"], [\"mat-icon-button\", \"\", 3, \"click\"], [3, \"matBadge\"], [3, \"currentUser\"], [1, \"material-icons\", \"app-toolbar-menu\"]],\n    template: function ToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ToolbarComponent_button_2_Template, 3, 0, \"button\", 2);\n        i0.ɵɵtemplate(3, ToolbarComponent_button_3_Template, 3, 0, \"button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_5_listener($event) {\n          return ctx.showNotificationsDialog($event);\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\", 5);\n        i0.ɵɵtext(7, \"notifications_none\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"ma-language-picker\")(9, \"ma-user-menu\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.matDrawerShow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.matDrawerShow);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matBadge\", ctx.messageService.messages.length);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"currentUser\", ctx.currentUser.customData);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatBadge, i6.MatLegacyButton, i7.MatIcon, i8.MatToolbar, i9.UserMenuComponent, i10.LanguagePickerComponent],\n    styles: [\"[_nghost-%COMP%] {\\n  z-index: 4;\\n}\\n\\n.main-toolbar[_ngcontent-%COMP%] {\\n  height: 64px;\\n  padding-left: 16px;\\n}\\n\\n.more-btn[_ngcontent-%COMP%] {\\n  height: 100%;\\n  min-width: 70px;\\n}\\n\\n.mat-icon-button[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvb2xiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtBQUNGIiwiZmlsZSI6InRvb2xiYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgei1pbmRleDogNDtcclxufVxyXG5cclxuLm1haW4tdG9vbGJhciB7XHJcbiAgaGVpZ2h0OiA2NHB4O1xyXG4gIHBhZGRpbmctbGVmdDogMTZweDtcclxufVxyXG5cclxuLm1vcmUtYnRuIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWluLXdpZHRoOiA3MHB4O1xyXG59XHJcblxyXG4ubWF0LWljb24tYnV0dG9uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7QUFDRjtBQUNBLHdwQkFBd3BCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIHotaW5kZXg6IDQ7XHJcbn1cclxuXHJcbi5tYWluLXRvb2xiYXIge1xyXG4gIGhlaWdodDogNjRweDtcclxuICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbn1cclxuXHJcbi5tb3JlLWJ0biB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG1pbi13aWR0aDogNzBweDtcclxufVxyXG5cclxuLm1hdC1pY29uLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["ElementRef","ToolbarHelpers","ToolbarNotificationComponent","i0","ɵɵelementStart","ɵɵlistener","ToolbarComponent_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","sidenav","toggle","ɵɵresetView","drawer","ɵɵtext","ɵɵelementEnd","ToolbarComponent_button_3_Template_button_click_0_listener","_r5","ctx_r4","ToolbarComponent","constructor","_matDialog","backendService","messageService","searchOpen","toolbarHelpers","ngOnInit","currentUser","getSignedInUser","showNotificationsDialog","evt","target","currentTarget","dialogRef","open","data","trigger","notifications","afterClosed","subscribe","_res","_","ɵɵdirectiveInject","i1","MatLegacyDialog","i2","BackendService","i3","MessageService","_2","selectors","inputs","sidebar","matDrawerShow","decls","vars","consts","template","ToolbarComponent_Template","rf","ctx","ɵɵtemplate","ToolbarComponent_button_2_Template","ToolbarComponent_button_3_Template","ToolbarComponent_Template_button_click_5_listener","$event","ɵɵelement","ɵɵadvance","ɵɵproperty","messages","length","customData"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\toolbar\\toolbar.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\toolbar\\toolbar.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, Input } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\n\r\nimport { MessageService } from '@src/app/core/services/message.service';\r\nimport { ToolbarHelpers } from '@src/app/shared/components/toolbar/toolbar.helpers';\r\nimport { ToolbarNotificationComponent } from '@src/app/shared/components/toolbar-notification/toolbar-notification.component';\r\nimport { User } from '@src/app/core/models/user/user.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BackendService } from '@src/app/core/services/backend.service';\r\n\r\n@Component({\r\n  selector: 'ma-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  @Input() sidenav;\r\n  @Input() sidebar;\r\n  @Input() drawer;\r\n  @Input() matDrawerShow;\r\n\r\n  searchOpen = false;\r\n  toolbarHelpers = ToolbarHelpers;\r\n\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private _matDialog: MatDialog,\r\n    private backendService: BackendService,\r\n\r\n    public messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.backendService.getSignedInUser();\r\n  }\r\n\r\n  // Call the dialog\r\n  showNotificationsDialog(evt: Event): void {\r\n    const target = new ElementRef(evt.currentTarget);\r\n    const dialogRef = this._matDialog.open(ToolbarNotificationComponent, {\r\n      data: {\r\n        trigger: target,\r\n        notifications: this.toolbarHelpers.notifications,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((_res) => {});\r\n  }\r\n}\r\n","<!-- <stbui-loading *ngIf=\"showLoading\"></stbui-loading> -->\r\n<mat-toolbar\r\n  fxFlexLayout=\"row\"\r\n  fxLayoutAlign=\"space-between center\"\r\n  class=\"mat-elevation-z4\"\r\n>\r\n  <div fxFlex>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"sidenav.toggle(); drawer.toggle()\"\r\n      *ngIf=\"matDrawerShow\"\r\n    >\r\n      <i class=\"material-icons app-toolbar-menu\">menu </i>\r\n    </button>\r\n    <button mat-icon-button (click)=\"sidenav.toggle()\" *ngIf=\"!matDrawerShow\">\r\n      <i class=\"material-icons app-toolbar-menu\">menu </i>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Right icons and user menu -->\r\n  <div fxFlex fxFlexLayout=\"row\" fxLayoutAlign=\"end center\">\r\n    <button mat-icon-button (click)=\"showNotificationsDialog($event)\">\r\n      <mat-icon [matBadge]=\"messageService.messages.length\"\r\n        >notifications_none</mat-icon\r\n      >\r\n    </button>\r\n\r\n    <ma-language-picker></ma-language-picker>\r\n\r\n    <ma-user-menu [currentUser]=\"currentUser.customData\"></ma-user-menu>\r\n\r\n    <!-- Language selector -->\r\n    <!-- TODO a better job displaying the language selector -->\r\n    <!-- <mat-form-field>\r\n      <span matPrefix style=\"margin-right: 8px;\">\r\n        <mat-icon>language</mat-icon>\r\n      </span>\r\n\r\n      <mat-select\r\n        name=\"language\"\r\n        [(ngModel)]=\"language\"\r\n        (selectionChange)=\"changeLanguage()\"\r\n      >\r\n        <mat-option value=\"en\"> English </mat-option>\r\n        <mat-option value=\"fr\"> Français </mat-option>\r\n      </mat-select>\r\n    </mat-form-field> -->\r\n  </div>\r\n</mat-toolbar>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}