{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/CSEG/Desktop/thassign/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/app/core/services/backend.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngx-translate/core\";\n// import { AuthService } from './modules/auth/auth.service';\n// import { SharedModule } from './shared.module';\nexport class AppComponent {\n  constructor(\n  // private authService: AuthService,\n  backendService, router, translate) {\n    this.backendService = backendService;\n    this.router = router;\n    this.translate = translate;\n    // this.backendService.init();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // init this.user on startup\n      // this.authService.me().subscribe(data => {\n      //   this.user = data.user;\n      // });\n      // update this.user after login/register/logout\n      // this.userSubscription = this.authService.$userSource.subscribe(user => {\n      //   this.user = user;\n      // });\n      // this.page.actionBarHidden = true;\n      yield _this.backendService.init();\n      _this._initTranslationLanguage();\n    })();\n  }\n  logout() {\n    // this.authService.signOut();\n    this.navigate('');\n  }\n  navigate(link) {\n    this.router.navigate([link]);\n  }\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n  /**\r\n   * Set the default language for translation strings\r\n   * and the current language.\r\n   */\n  _initTranslationLanguage() {\n    this.translate.setDefaultLang('en');\n    if (this.translate.getBrowserLang() !== undefined) {\n      this.translate.use(this.translate.getBrowserLang());\n    } else {\n      this.translate.use('fr'); // Set the current language\n    }\n    // Setting locale for dates\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BackendService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TranslateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[\"href\", \"https://www.flaticon.com/authors/flat-icons\", \"title\", \"Flat Icons\"], [\"href\", \"https://www.flaticon.com/\", \"title\", \"Flaticon\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵtext(2, \" Icons made by \");\n        i0.ɵɵelementStart(3, \"a\", 0);\n        i0.ɵɵtext(4, \"Flat Icons\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" from \");\n        i0.ɵɵelementStart(6, \"a\", 1);\n        i0.ɵɵtext(7, \"www.flaticon.com\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i2.RouterOutlet],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","backendService","router","translate","ngOnInit","_this","_asyncToGenerator","init","_initTranslationLanguage","logout","navigate","link","ngOnDestroy","userSubscription","unsubscribe","setDefaultLang","getBrowserLang","undefined","use","_","i0","ɵɵdirectiveInject","i1","BackendService","i2","Router","i3","TranslateService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\app.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\n\r\nimport { BackendService } from '@src/app/core/services/backend.service';\r\n\r\n// import { AuthService } from './modules/auth/auth.service';\r\n\r\n// import { SharedModule } from './shared.module';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * @description Property that stores the selected language value\r\n   * from the component\r\n   */\r\n  public language: string;\r\n\r\n  private userSubscription: Subscription;\r\n  public user: any;\r\n\r\n  cities: Observable<any[]>;\r\n\r\n  constructor(\r\n    // private authService: AuthService,\r\n    private backendService: BackendService,\r\n    private router: Router,\r\n    private translate: TranslateService\r\n  ) {\r\n    // this.backendService.init();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // init this.user on startup\r\n    // this.authService.me().subscribe(data => {\r\n    //   this.user = data.user;\r\n    // });\r\n\r\n    // update this.user after login/register/logout\r\n    // this.userSubscription = this.authService.$userSource.subscribe(user => {\r\n    //   this.user = user;\r\n    // });\r\n\r\n    // this.page.actionBarHidden = true;\r\n\r\n    await this.backendService.init();\r\n    this._initTranslationLanguage();\r\n  }\r\n\r\n  logout(): void {\r\n    // this.authService.signOut();\r\n    this.navigate('');\r\n  }\r\n\r\n  navigate(link: any): void {\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the default language for translation strings\r\n   * and the current language.\r\n   */\r\n  private _initTranslationLanguage() {\r\n    this.translate.setDefaultLang('en');\r\n\r\n    if (this.translate.getBrowserLang() !== undefined) {\r\n      this.translate.use(this.translate.getBrowserLang());\r\n    } else {\r\n      this.translate.use('fr'); // Set the current language\r\n    }\r\n\r\n    // Setting locale for dates\r\n  }\r\n}\r\n","<!-- Cities:\r\n<ul>\r\n  <li class=\"text\" *ngFor=\"let city of cities | async\">\r\n    {{ city.name }}\r\n  </li>\r\n</ul> -->\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div>\r\n  Icons made by\r\n  <a href=\"https://www.flaticon.com/authors/flat-icons\" title=\"Flat Icons\"\r\n    >Flat Icons</a\r\n  >\r\n  from\r\n  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\r\n</div>\r\n"],"mappings":";;;;;AAQA;AAEA;AAOA,OAAM,MAAOA,YAAY;EAYvBC;EACE;EACQC,cAA8B,EAC9BC,MAAc,EACdC,SAA2B;IAF3B,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,SAAS,GAATA,SAAS;IAEjB;EACF;;EAEMC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEA;MAEA,MAAMD,KAAI,CAACJ,cAAc,CAACM,IAAI,EAAE;MAChCF,KAAI,CAACG,wBAAwB,EAAE;IAAC;EAClC;EAEAC,MAAMA,CAAA;IACJ;IACA,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC;EACnB;EAEAA,QAAQA,CAACC,IAAS;IAChB,IAAI,CAACT,MAAM,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAAC,CAAC;EAC9B;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAACA,gBAAgB,CAACC,WAAW,EAAE;;EAEvC;EAEA;;;;EAIQN,wBAAwBA,CAAA;IAC9B,IAAI,CAACL,SAAS,CAACY,cAAc,CAAC,IAAI,CAAC;IAEnC,IAAI,IAAI,CAACZ,SAAS,CAACa,cAAc,EAAE,KAAKC,SAAS,EAAE;MACjD,IAAI,CAACd,SAAS,CAACe,GAAG,CAAC,IAAI,CAACf,SAAS,CAACa,cAAc,EAAE,CAAC;KACpD,MAAM;MACL,IAAI,CAACb,SAAS,CAACe,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAG5B;EACF;EAAC,QAAAC,CAAA,G;qBAnEUpB,YAAY,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZ7B,YAAY;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVzBf,EAAA,CAAAiB,SAAA,oBAA+B;QAE/BjB,EAAA,CAAAkB,cAAA,UAAK;QACHlB,EAAA,CAAAmB,MAAA,sBACA;QAAAnB,EAAA,CAAAkB,cAAA,WACG;QAAAlB,EAAA,CAAAmB,MAAA,iBAAU;QAAAnB,EAAA,CAAAoB,YAAA,EACZ;QACDpB,EAAA,CAAAmB,MAAA,aACA;QAAAnB,EAAA,CAAAkB,cAAA,WAAqD;QAAAlB,EAAA,CAAAmB,MAAA,uBAAgB;QAAAnB,EAAA,CAAAoB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}