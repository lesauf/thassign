{"ast":null,"code":"import { isObservable, of } from 'rxjs';\nimport { map, startWith, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/app/core/services/message.service\";\nexport class WithLoadingPipe {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  transform(val) {\n    return isObservable(val) ? val.pipe(map(value => ({\n      loading: false,\n      value\n    })), startWith({\n      loading: true\n    }), catchError(error => {\n      // Notify the dev\n      this.messageService.presentToast(error.message);\n      this.messageService.log(error.message, error);\n      return of({\n        loading: false,\n        error\n      });\n    })) : val;\n  }\n  static #_ = this.ɵfac = function WithLoadingPipe_Factory(t) {\n    return new (t || WithLoadingPipe)(i0.ɵɵdirectiveInject(i1.MessageService, 16));\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"withLoading\",\n    type: WithLoadingPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["isObservable","of","map","startWith","catchError","WithLoadingPipe","constructor","messageService","transform","val","pipe","value","loading","error","presentToast","message","log","_","i0","ɵɵdirectiveInject","i1","MessageService","_2","pure"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\pipes\\with-loading.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { MessageService } from '@src/app/core/services/message.service';\r\nimport { isObservable, of } from 'rxjs';\r\nimport { map, startWith, catchError } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n  name: 'withLoading',\r\n})\r\nexport class WithLoadingPipe implements PipeTransform {\r\n  constructor(protected messageService: MessageService) {}\r\n\r\n  transform(val) {\r\n    return isObservable(val)\r\n      ? val.pipe(\r\n          map((value: any) => ({ loading: false, value })),\r\n          startWith({ loading: true }),\r\n          catchError((error) => {\r\n            // Notify the dev\r\n            this.messageService.presentToast(error.message);\r\n            this.messageService.log(error.message, error);\r\n            return of({ loading: false, error });\r\n          })\r\n        )\r\n      : val;\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,YAAY,EAAEC,EAAE,QAAQ,MAAM;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAK3D,OAAM,MAAOC,eAAe;EAC1BC,YAAsBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAEvDC,SAASA,CAACC,GAAG;IACX,OAAOT,YAAY,CAACS,GAAG,CAAC,GACpBA,GAAG,CAACC,IAAI,CACNR,GAAG,CAAES,KAAU,KAAM;MAAEC,OAAO,EAAE,KAAK;MAAED;IAAK,CAAE,CAAC,CAAC,EAChDR,SAAS,CAAC;MAAES,OAAO,EAAE;IAAI,CAAE,CAAC,EAC5BR,UAAU,CAAES,KAAK,IAAI;MACnB;MACA,IAAI,CAACN,cAAc,CAACO,YAAY,CAACD,KAAK,CAACE,OAAO,CAAC;MAC/C,IAAI,CAACR,cAAc,CAACS,GAAG,CAACH,KAAK,CAACE,OAAO,EAAEF,KAAK,CAAC;MAC7C,OAAOZ,EAAE,CAAC;QAAEW,OAAO,EAAE,KAAK;QAAEC;MAAK,CAAE,CAAC;IACtC,CAAC,CAAC,CACH,GACDJ,GAAG;EACT;EAAC,QAAAQ,CAAA,G;qBAhBUZ,eAAe,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;;UAAfjB,eAAe;IAAAkB,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}