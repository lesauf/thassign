{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { IsBoolean, IsString, IsIn, IsOptional, IsInt } from 'class-validator';\n/**\r\n * Minimum data for a standard part\r\n */\nexport class Part {\n  constructor(properties) {\n    /**\r\n     * Zero-based position of the assignment in its week\r\n     */\n    this.position = 0;\n    // Assign the properties to this object\n    Object.assign(this, properties);\n  }\n}\n__decorate([IsString(), IsOptional()], Part.prototype, \"_id\", void 0);\n__decorate([IsString()], Part.prototype, \"name\", void 0);\n__decorate([IsString(), IsIn(['midweek', 'weekend'])], Part.prototype, \"meeting\", void 0);\n__decorate([IsInt()], Part.prototype, \"position\", void 0);\n__decorate([IsString(), IsIn(['student', 'talk-or-discussion'])\n//@IsIn(['prayer', 'chairman', 'treasures', 'ministry', \"christianLiving\", 'publicTalk', 'watchtower'])\n], Part.prototype, \"type\", void 0);\n__decorate([IsBoolean(), IsOptional()], Part.prototype, \"withTitle\", void 0);\n__decorate([IsBoolean(), IsOptional()], Part.prototype, \"withAssistant\", void 0);\n__decorate([IsBoolean(), IsOptional()], Part.prototype, \"withReader\", void 0);\n__decorate([IsBoolean(), IsOptional()], Part.prototype, \"byAnOverseer\", void 0);\n__decorate([IsBoolean(), IsOptional()], Part.prototype, \"byABrother\", void 0);","map":{"version":3,"names":["IsBoolean","IsString","IsIn","IsOptional","IsInt","Part","constructor","properties","position","Object","assign","__decorate"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\core\\models\\part\\part.model.ts"],"sourcesContent":["import {\r\n  IsBoolean,\r\n  IsString,\r\n  IsIn,\r\n  IsOptional,\r\n  IsUUID,\r\n  IsObject,\r\n  IsNumber,\r\n  IsInt,\r\n} from 'class-validator';\r\n\r\n/**\r\n * @see https://mongodb.github.io/node-mongodb-native/2.2/api/ObjectID.html\r\n */\r\nexport type ObjectId = {\r\n  id: string | number;\r\n  /**\r\n   * Creates an ObjectID from a hex string representation of an ObjectID\r\n   */\r\n  createFromHexString(hexString: string): ObjectId;\r\n  /**\r\n   * Creates an ObjectID from a second based number,\r\n   * with the rest of the ObjectID zeroed out.\r\n   * Used for comparisons or sorting the ObjectID.\r\n   */\r\n  createFromTime(time: number): ObjectId;\r\n  /**\r\n   * Checks if a value is a valid bson ObjectId\r\n   * @return true if the value is a valid bson ObjectId, return false otherwise.\r\n   */\r\n  isValid(): boolean;\r\n  /**\r\n   * Compares the equality of this ObjectID with otherID\r\n   */\r\n  equals(otherID: object): boolean;\r\n  /**\r\n   * Generate a 12 byte id buffer used in ObjectID's\r\n   */\r\n  generate(time?: number): Buffer;\r\n  /**\r\n   * Returns the generation date (accurate up to the second)\r\n   * that this ID was generated.\r\n   */\r\n  getTimestamp(): Date;\r\n  /**\r\n   * Return the ObjectID id as a 24 byte hex string representation\r\n   */\r\n  toHexString(): string;\r\n};\r\n\r\n/**\r\n * Minimum data for a standard part\r\n */\r\nexport class Part {\r\n  @IsString()\r\n  @IsOptional()\r\n  _id: string;\r\n\r\n  // @(jf.string().required())\r\n  @IsString()\r\n  name: string;\r\n\r\n  // @(jf.string().required().allow('midweek', 'midweek-students', 'weekend'))\r\n  @IsString()\r\n  @IsIn(['midweek', 'weekend'])\r\n  meeting: string;\r\n\r\n  /**\r\n   * Zero-based position of the assignment in its week\r\n   */\r\n  @IsInt()\r\n  position = 0;\r\n\r\n  @IsString()\r\n  @IsIn(['student', 'talk-or-discussion'])\r\n  //@IsIn(['prayer', 'chairman', 'treasures', 'ministry', \"christianLiving\", 'publicTalk', 'watchtower'])\r\n  type: 'student' | 'talk-or-discussion' | 'general';\r\n\r\n  /**\r\n   * Does it need a title\r\n   */\r\n  // @(jf.boolean().optional())\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  withTitle?: boolean;\r\n\r\n  /**\r\n   * Does it need an assistant\r\n   */\r\n  // @(jf.boolean().optional())\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  withAssistant?: boolean;\r\n\r\n  /**\r\n   * Does it need a reader\r\n   */\r\n  // @(jf.boolean().optional())\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  withReader?: boolean;\r\n\r\n  /**\r\n   * Is it an overseer assignment?\r\n   */\r\n  // @(jf.boolean().optional())\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  byAnOverseer?: boolean;\r\n\r\n  /**\r\n   * Is it a brother assignment ?\r\n   */\r\n  // @(jf.boolean().optional())\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  byABrother?: boolean;\r\n\r\n  constructor(properties?: object) {\r\n    // Assign the properties to this object\r\n    Object.assign(this, properties);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,QAAQ,EACRC,IAAI,EACJC,UAAU,EAIVC,KAAK,QACA,iBAAiB;AAyCxB;;;AAGA,OAAM,MAAOC,IAAI;EAiEfC,YAAYC,UAAmB;IAnD/B;;;IAIA,KAAAC,QAAQ,GAAG,CAAC;IAgDV;IACAC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,UAAU,CAAC;EACjC;;AAjEAI,UAAA,EAFCV,QAAQ,EAAE,EACVE,UAAU,EAAE,C,gCACD;AAIZQ,UAAA,EADCV,QAAQ,EAAE,C,iCACE;AAKbU,UAAA,EAFCV,QAAQ,EAAE,EACVC,IAAI,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,C,oCACb;AAMhBS,UAAA,EADCP,KAAK,EAAE,C,qCACK;AAKbO,UAAA,EAHCV,QAAQ,EAAE,EACVC,IAAI,CAAC,CAAC,SAAS,EAAE,oBAAoB,CAAC;AACvC;AAAA,C,iCACmD;AAQnDS,UAAA,EAFCX,SAAS,EAAE,EACXG,UAAU,EAAE,C,sCACO;AAQpBQ,UAAA,EAFCX,SAAS,EAAE,EACXG,UAAU,EAAE,C,0CACW;AAQxBQ,UAAA,EAFCX,SAAS,EAAE,EACXG,UAAU,EAAE,C,uCACQ;AAQrBQ,UAAA,EAFCX,SAAS,EAAE,EACXG,UAAU,EAAE,C,yCACU;AAQvBQ,UAAA,EAFCX,SAAS,EAAE,EACXG,UAAU,EAAE,C,uCACQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}