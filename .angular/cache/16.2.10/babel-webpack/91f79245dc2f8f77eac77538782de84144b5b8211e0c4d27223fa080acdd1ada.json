{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, Inject, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nexport { ɵMatchMedia, ɵMockMatchMedia, ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { GridModule, GridAlignColumnsStyleBuilder, GridAlignColumnsDirective, DefaultGridAlignColumnsDirective, GridAlignRowsStyleBuilder, GridAlignRowsDirective, DefaultGridAlignRowsDirective, GridAreaStyleBuilder, GridAreaDirective, DefaultGridAreaDirective, GridAreasStyleBuiler, GridAreasDirective, DefaultGridAreasDirective, GridAutoStyleBuilder, GridAutoDirective, DefaultGridAutoDirective, GridColumnStyleBuilder, GridColumnDirective, DefaultGridColumnDirective, GridColumnsStyleBuilder, GridColumnsDirective, DefaultGridColumnsDirective, GridGapStyleBuilder, GridGapDirective, DefaultGridGapDirective, GridAlignStyleBuilder, GridAlignDirective, DefaultGridAlignDirective, GridRowStyleBuilder, GridRowDirective, DefaultGridRowDirective, GridRowsStyleBuilder, GridRowsDirective, DefaultGridRowsDirective } from '@angular/flex-layout/grid';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Flex-Layout.\n * @type {?}\n */\nconst VERSION = new Version('12.0.0-beta.35');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nclass FlexLayoutModule {\n  /**\n   * @param {?} serverModuleLoaded\n   * @param {?} platformId\n   */\n  constructor(serverModuleLoaded, platformId) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   * @param {?} configOptions\n   * @param {?=} breakpoints\n   * @return {?}\n   */\n  static withConfig(configOptions,\n  // tslint:disable-next-line:max-line-length\n  breakpoints = []) {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ? [{\n        provide: LAYOUT_CONFIG,\n        useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n      }, {\n        provide: BREAKPOINT,\n        useValue: breakpoints,\n        multi: true\n      }, {\n        provide: SERVER_TOKEN,\n        useValue: true\n      }] : [{\n        provide: LAYOUT_CONFIG,\n        useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n      }, {\n        provide: BREAKPOINT,\n        useValue: breakpoints,\n        multi: true\n      }]\n    };\n  }\n}\nFlexLayoutModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [FlexModule, ExtendedModule, GridModule],\n    exports: [FlexModule, ExtendedModule, GridModule]\n  }]\n}];\n/** @nocollapse */\nFlexLayoutModule.ctorParameters = () => [{\n  type: Boolean,\n  decorators: [{\n    type: Inject,\n    args: [SERVER_TOKEN]\n  }]\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION, FlexLayoutModule };","map":{"version":3,"names":["Version","Inject","NgModule","PLATFORM_ID","isPlatformServer","SERVER_TOKEN","LAYOUT_CONFIG","DEFAULT_CONFIG","BREAKPOINT","ɵMatchMedia","ɵMockMatchMedia","ɵMockMatchMediaProvider","CoreModule","removeStyles","BROWSER_PROVIDER","CLASS_NAME","MediaChange","StylesheetMap","mergeAlias","BaseDirective2","DEFAULT_BREAKPOINTS","ScreenTypes","ORIENTATION_BREAKPOINTS","BreakPointRegistry","BREAKPOINTS","MediaObserver","MediaTrigger","sortDescendingPriority","sortAscendingPriority","coerceArray","StyleUtils","StyleBuilder","validateBasis","MediaMarshaller","BREAKPOINT_PRINT","PrintHook","ExtendedModule","ClassDirective","DefaultClassDirective","ImgSrcStyleBuilder","ImgSrcDirective","DefaultImgSrcDirective","ShowHideStyleBuilder","ShowHideDirective","DefaultShowHideDirective","StyleDirective","DefaultStyleDirective","FlexModule","FlexStyleBuilder","FlexDirective","DefaultFlexDirective","FlexAlignStyleBuilder","FlexAlignDirective","DefaultFlexAlignDirective","FlexFillStyleBuilder","FlexFillDirective","FlexOffsetStyleBuilder","FlexOffsetDirective","DefaultFlexOffsetDirective","FlexOrderStyleBuilder","FlexOrderDirective","DefaultFlexOrderDirective","LayoutStyleBuilder","LayoutDirective","DefaultLayoutDirective","LayoutAlignStyleBuilder","LayoutAlignDirective","DefaultLayoutAlignDirective","LayoutGapStyleBuilder","LayoutGapDirective","DefaultLayoutGapDirective","GridModule","GridAlignColumnsStyleBuilder","GridAlignColumnsDirective","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","GridAreaDirective","DefaultGridAreaDirective","GridAreasStyleBuiler","GridAreasDirective","DefaultGridAreasDirective","GridAutoStyleBuilder","GridAutoDirective","DefaultGridAutoDirective","GridColumnStyleBuilder","GridColumnDirective","DefaultGridColumnDirective","GridColumnsStyleBuilder","GridColumnsDirective","DefaultGridColumnsDirective","GridGapStyleBuilder","GridGapDirective","DefaultGridGapDirective","GridAlignStyleBuilder","GridAlignDirective","DefaultGridAlignDirective","GridRowStyleBuilder","GridRowDirective","DefaultGridRowDirective","GridRowsStyleBuilder","GridRowsDirective","DefaultGridRowsDirective","VERSION","FlexLayoutModule","constructor","serverModuleLoaded","platformId","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","useValue","Object","assign","multi","decorators","type","args","imports","exports","ctorParameters","Boolean"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/flex-layout/esm2015/flex-layout.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, Inject, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nexport { ɵMatchMedia, ɵMockMatchMedia, ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { GridModule, GridAlignColumnsStyleBuilder, GridAlignColumnsDirective, DefaultGridAlignColumnsDirective, GridAlignRowsStyleBuilder, GridAlignRowsDirective, DefaultGridAlignRowsDirective, GridAreaStyleBuilder, GridAreaDirective, DefaultGridAreaDirective, GridAreasStyleBuiler, GridAreasDirective, DefaultGridAreasDirective, GridAutoStyleBuilder, GridAutoDirective, DefaultGridAutoDirective, GridColumnStyleBuilder, GridColumnDirective, DefaultGridColumnDirective, GridColumnsStyleBuilder, GridColumnsDirective, DefaultGridColumnsDirective, GridGapStyleBuilder, GridGapDirective, DefaultGridGapDirective, GridAlignStyleBuilder, GridAlignDirective, DefaultGridAlignDirective, GridRowStyleBuilder, GridRowDirective, DefaultGridRowDirective, GridRowsStyleBuilder, GridRowsDirective, DefaultGridRowsDirective } from '@angular/flex-layout/grid';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Flex-Layout.\n * @type {?}\n */\nconst VERSION = new Version('12.0.0-beta.35');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nclass FlexLayoutModule {\n    /**\n     * @param {?} serverModuleLoaded\n     * @param {?} platformId\n     */\n    constructor(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n    static withConfig(configOptions, \n    // tslint:disable-next-line:max-line-length\n    breakpoints = []) {\n        return {\n            ngModule: FlexLayoutModule,\n            providers: configOptions.serverLoaded ?\n                [\n                    { provide: LAYOUT_CONFIG, useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions) },\n                    { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                    { provide: SERVER_TOKEN, useValue: true },\n                ] : [\n                { provide: LAYOUT_CONFIG, useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions) },\n                { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n            ]\n        };\n    }\n}\nFlexLayoutModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [FlexModule, ExtendedModule, GridModule],\n                exports: [FlexModule, ExtendedModule, GridModule]\n            },] }\n];\n/** @nocollapse */\nFlexLayoutModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Inject, args: [SERVER_TOKEN,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION, FlexLayoutModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}