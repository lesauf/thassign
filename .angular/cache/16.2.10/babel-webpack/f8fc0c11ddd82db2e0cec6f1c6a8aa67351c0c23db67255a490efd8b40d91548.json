{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/CSEG/Desktop/thassign/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/app/core/services/backend.service\";\nimport * as i2 from \"@src/app/core/services/epub.service\";\nimport * as i3 from \"@angular/material/legacy-button\";\nimport * as i4 from \"@angular/material/icon\";\nconst _c0 = [\"epubArea\"];\nexport class ImportEpubComponent {\n  constructor(backendService, epubService) {\n    this.backendService = backendService;\n    this.epubService = epubService;\n    this.epubFilename = 'mwb_E_202101';\n    this.displayedProgramIndex = 0;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // this.book = ePub(this.epubFilename);\n      // this.book = ePub(this.epubPath + this.epubFilename + '.epub');\n      // console.log(\n      //   'DATE Full data if enero ',\n      //   new Intl.DateTimeFormat('es', { month: 'long' }).format(new Date(9e8))\n      // );\n      // // Display the whole Book object\n      // await this.book.ready;\n      // // Get language from the filename\n      // this.getMonthAndLangFromEpub();\n      // await this.extractPrograms();\n      _this.programs = yield _this.epubService.getProgramsFromEpub(_this.epubFilename, _this.backendService.getSignedInUser()._id);\n      _this.book = _this.epubService.book;\n      // Display the program of first week\n      _this.rendition = _this.book.renderTo(_this.renderArea.nativeElement, {\n        flow: 'scrolled'\n      });\n      _this.rendition.display(_this.programs[0].sectionIndex);\n    })();\n  }\n  /**\r\n   * Called after ngAfterContentInit when the component's view has been initialized.\r\n   * Applies to components only.\r\n   * Add 'implements AfterViewInit' to the class.\r\n   */\n  // ngAfterViewInit() {\n  //   await this.book.ready;\n  //   // Display the program of first week\n  //   this.rendition = this.book.renderTo(this.renderArea.nativeElement, {\n  //     flow: 'scrolled',\n  //   });\n  //   // this.rendition.display(this.programs[0].sectionIndex);\n  //   // Turning pages with arrow keys\n  //   this.rendition.on('keyup', (event) => {\n  //     const kc = event.keyCode || event.which;\n  //     if (kc === 37) {\n  //       this.prevPage();\n  //     }\n  //     if (kc === 39) {\n  //       this.nextPage();\n  //     }\n  //     this.renderArea.nativeElement.focus();\n  //   });\n  // }\n  /**\r\n   * Go to previous week's program\r\n   */\n  prevPage() {\n    if (this.displayedProgramIndex > 0) {\n      this.displayedProgramIndex--;\n      this.rendition.display(this.programs[this.displayedProgramIndex].sectionIndex);\n    }\n    // this.rendition.prev();\n  }\n  /**\r\n   * Go to next week's program\r\n   */\n  nextPage() {\n    if (this.displayedProgramIndex < this.programs.length - 1) {\n      this.displayedProgramIndex++;\n      this.rendition.display(this.programs[this.displayedProgramIndex].sectionIndex);\n    }\n    // this.rendition.next();\n  }\n  static #_ = this.ɵfac = function ImportEpubComponent_Factory(t) {\n    return new (t || ImportEpubComponent)(i0.ɵɵdirectiveInject(i1.BackendService), i0.ɵɵdirectiveInject(i2.EpubService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImportEpubComponent,\n    selectors: [[\"app-import-epub\"]],\n    viewQuery: function ImportEpubComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.renderArea = _t.first);\n      }\n    },\n    inputs: {\n      epubFilename: \"epubFilename\"\n    },\n    decls: 11,\n    vars: 1,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\", \"fxLayoutGap\", \"15px\"], [\"fxFlex\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"start start\"], [\"fxFlex\", \"10\", \"mat-raised-button\", \"\", 3, \"click\"], [\"fxFlex\", \"10\", \"fxFlexOffset\", \"90\", \"mat-raised-button\", \"\", 3, \"click\"], [\"fxFlex\", \"80\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center start\"], [\"fxFlex\", \"80\", 1, \"bg-color-white\", 3, \"innerHtml\"], [\"epubArea\", \"\"]],\n    template: function ImportEpubComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ImportEpubComponent_Template_button_click_2_listener() {\n          return ctx.prevPage();\n        });\n        i0.ɵɵelementStart(3, \"mat-icon\");\n        i0.ɵɵtext(4, \"arrow_left\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ImportEpubComponent_Template_button_click_5_listener() {\n          return ctx.nextPage();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"arrow_right\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelement(9, \"div\", 5, 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"innerHtml\", ctx.displayedProgram, i0.ɵɵsanitizeHtml);\n      }\n    },\n    dependencies: [i3.MatLegacyButton, i4.MatIcon],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXBvcnQtZXB1Yi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaW1wb3J0LWVwdWIvaW1wb3J0LWVwdWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ImportEpubComponent","constructor","backendService","epubService","epubFilename","displayedProgramIndex","ngOnInit","_this","_asyncToGenerator","programs","getProgramsFromEpub","getSignedInUser","_id","book","rendition","renderTo","renderArea","nativeElement","flow","display","sectionIndex","prevPage","nextPage","length","_","i0","ɵɵdirectiveInject","i1","BackendService","i2","EpubService","_2","selectors","viewQuery","ImportEpubComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","ImportEpubComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","ImportEpubComponent_Template_button_click_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","displayedProgram","ɵɵsanitizeHtml"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\import-epub\\import-epub.component.ts","C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\import-epub\\import-epub.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n// import { Book, Rendition } from 'epubjs';\r\nimport * as epubjs from 'epubjs';\r\nimport { DateTime } from 'luxon';\r\n\r\nimport { BackendService } from '@src/app/core/services/backend.service';\r\nimport { EpubService } from '@src/app/core/services/epub.service';\r\n\r\n@Component({\r\n  selector: 'app-import-epub',\r\n  templateUrl: './import-epub.component.html',\r\n  styleUrls: ['./import-epub.component.scss'],\r\n})\r\nexport class ImportEpubComponent implements OnInit {\r\n  @ViewChild('epubArea', { static: true })\r\n  renderArea: ElementRef;\r\n\r\n  @Input()\r\n  epubFilename = 'mwb_E_202101';\r\n\r\n  // public epubPath = '/assets/epubs/';\r\n\r\n  public book: epubjs.Book;\r\n\r\n  public rendition: epubjs.Rendition;\r\n\r\n  public displayedProgramIndex = 0;\r\n  public displayedProgram;\r\n\r\n  public programs: Array<any>;\r\n  /**\r\n   * Language of the book,\r\n   * taken from the filename\r\n   */\r\n  public epubLangCode: string;\r\n\r\n  /**\r\n   * Month of the epub,\r\n   * taken from the filename\r\n   */\r\n  public epubMonth: DateTime;\r\n\r\n  constructor(\r\n    protected backendService: BackendService,\r\n    private epubService: EpubService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    // this.book = ePub(this.epubFilename);\r\n    // this.book = ePub(this.epubPath + this.epubFilename + '.epub');\r\n    // console.log(\r\n    //   'DATE Full data if enero ',\r\n    //   new Intl.DateTimeFormat('es', { month: 'long' }).format(new Date(9e8))\r\n    // );\r\n\r\n    // // Display the whole Book object\r\n    // await this.book.ready;\r\n\r\n    // // Get language from the filename\r\n    // this.getMonthAndLangFromEpub();\r\n\r\n    // await this.extractPrograms();\r\n\r\n    this.programs = await this.epubService.getProgramsFromEpub(\r\n      this.epubFilename,\r\n      this.backendService.getSignedInUser()._id\r\n    );\r\n\r\n    this.book = this.epubService.book;\r\n\r\n    // Display the program of first week\r\n    this.rendition = this.book.renderTo(this.renderArea.nativeElement, {\r\n      flow: 'scrolled',\r\n    });\r\n    this.rendition.display(this.programs[0].sectionIndex);\r\n  }\r\n\r\n  /**\r\n   * Called after ngAfterContentInit when the component's view has been initialized.\r\n   * Applies to components only.\r\n   * Add 'implements AfterViewInit' to the class.\r\n   */\r\n  // ngAfterViewInit() {\r\n  //   await this.book.ready;\r\n\r\n  //   // Display the program of first week\r\n  //   this.rendition = this.book.renderTo(this.renderArea.nativeElement, {\r\n  //     flow: 'scrolled',\r\n  //   });\r\n\r\n  //   // this.rendition.display(this.programs[0].sectionIndex);\r\n\r\n  //   // Turning pages with arrow keys\r\n  //   this.rendition.on('keyup', (event) => {\r\n  //     const kc = event.keyCode || event.which;\r\n  //     if (kc === 37) {\r\n  //       this.prevPage();\r\n  //     }\r\n  //     if (kc === 39) {\r\n  //       this.nextPage();\r\n  //     }\r\n  //     this.renderArea.nativeElement.focus();\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Go to previous week's program\r\n   */\r\n  prevPage() {\r\n    if (this.displayedProgramIndex > 0) {\r\n      this.displayedProgramIndex--;\r\n      this.rendition.display(\r\n        this.programs[this.displayedProgramIndex].sectionIndex\r\n      );\r\n    }\r\n    // this.rendition.prev();\r\n  }\r\n\r\n  /**\r\n   * Go to next week's program\r\n   */\r\n  nextPage() {\r\n    if (this.displayedProgramIndex < this.programs.length - 1) {\r\n      this.displayedProgramIndex++;\r\n      this.rendition.display(\r\n        this.programs[this.displayedProgramIndex].sectionIndex\r\n      );\r\n    }\r\n    // this.rendition.next();\r\n  }\r\n\r\n  /**\r\n   * Extract the language code from the epub filename\r\n   * mwb_F_201908\r\n   */\r\n  // getMonthAndLangFromEpub(pubCode: string = 'mwb') {\r\n  //   const startLanguage =\r\n  //     this.epubFilename.lastIndexOf(pubCode + '_') + pubCode.length + 1;\r\n  //   const endLanguage = this.epubFilename.length - 7;\r\n  //   this.epubLangCode = this.epubFilename.substring(startLanguage, endLanguage);\r\n\r\n  //   const startMonth =\r\n  //     this.epubFilename.lastIndexOf(pubCode + '_' + this.epubLangCode + '_') +\r\n  //     pubCode.length +\r\n  //     this.epubLangCode.length +\r\n  //     2;\r\n\r\n  //   const month = this.epubFilename.substring(startMonth);\r\n  //   this.epubMonth = DateTime.fromFormat(month, 'YYYYMM');\r\n  // }\r\n\r\n  /**\r\n   * Searching the entire book\r\n   * @see https://github.com/futurepress/epub.js/wiki/Tips-and-Tricks-(v0.3)#searching-the-entire-book\r\n   */\r\n  // doSearch(q: string) {\r\n  //   return Promise.all(\r\n  //     this.book.spine['spineItems'].map(item =>\r\n  //       item\r\n  //         .load(this.book.load.bind(this.book))\r\n  //         .then(item.find.bind(item, q))\r\n  //         .finally(item.unload.bind(item))\r\n  //     )\r\n  //   ).then(results => Promise.resolve([].concat.apply([], results)));\r\n  // }\r\n\r\n  // async getXmlOfSections(): Promise<any> {\r\n  //   return await Promise.all(\r\n  //     this.book.spine['spineItems'].map(item =>\r\n  //       item\r\n  //         .load(this.book.load.bind(this.book))\r\n  //         .then(xml => {\r\n  //           return { index: item.index, xml: xml };\r\n  //         })\r\n  //         .finally(item.unload.bind(item))\r\n  //     )\r\n  //   ).then(results => Promise.resolve(results));\r\n  // }\r\n\r\n  /**\r\n   * Get the list of parts for every week in the month\r\n   * from the epub\r\n   */\r\n  // async extractPrograms() {\r\n  //   await this.book.ready;\r\n\r\n  //   const weekPages = await this.getXmlOfSections();\r\n\r\n  //   weekPages.forEach((weekPage) => {\r\n  //     // We look for the sections containing the program\r\n  //     const ministrySection = weekPage.xml.getElementsByClassName('ministry');\r\n\r\n  //     if (ministrySection.length !== 0) {\r\n  //       // Getting the week\r\n  //       const week = weekPage.xml.querySelector(\"[id='p1']\").lastElementChild\r\n  //         .innerHTML;\r\n\r\n  //       const program = {\r\n  //         sectionIndex: weekPage.index,\r\n  //         week: week,\r\n  //         xhtml: weekPage.xml,\r\n  //         assignments: [],\r\n  //       };\r\n\r\n  //       const parts = weekPage.xml\r\n  //         .querySelectorAll('ul:not(.noMarker) > li > p');\r\n\r\n  //       for (let index = 0; index < parts.length; index++) {\r\n  //         const partTitle: string = parts\r\n  //           .item(index)\r\n  //           .textContent;\r\n\r\n  //         program.assignments.push({\r\n  //           week: week,\r\n  //           position: index,\r\n  //           title: partTitle.trim(),\r\n  //         });\r\n  //       }\r\n\r\n  //       this.programs.push(program);\r\n  //     }\r\n  //   });\r\n  // }\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"15px\">\r\n  <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n    <button fxFlex=\"10\" mat-raised-button (click)=\"prevPage()\">\r\n      <mat-icon>arrow_left</mat-icon>\r\n    </button>\r\n    <button\r\n      fxFlex=\"10\"\r\n      fxFlexOffset=\"90\"\r\n      mat-raised-button\r\n      (click)=\"nextPage()\"\r\n    >\r\n      <mat-icon>arrow_right</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div fxFlex=\"80\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\r\n    <div\r\n      #epubArea\r\n      fxFlex=\"80\"\r\n      class=\"bg-color-white\"\r\n      [innerHtml]=\"displayedProgram\"\r\n    ></div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}