{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, UntypedFormArray } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class AssignmentControlService {\n  constructor() {}\n  toFormGroup(assignmentsByWeek) {\n    const group = {};\n    assignmentsByWeek.forEach((wAssignments, wIndex) => {\n      const weekArray = [];\n      wAssignments.forEach(assignment => {\n        // console.log(assignment);\n        weekArray[assignment.position] = this.toAssignmentControl(assignment);\n      });\n      group[wIndex] = new UntypedFormArray(weekArray);\n      // weekArray = [];\n    });\n\n    return new UntypedFormGroup(group);\n  }\n  toAssignmentControl(assignment) {\n    return new UntypedFormGroup({\n      week: new UntypedFormControl(assignment.week || ''),\n      part: new UntypedFormControl(assignment.part || ''),\n      assignee: new UntypedFormControl(assignment.assignee || ''),\n      hall: new UntypedFormControl(assignment.hall || ''),\n      ownerId: new UntypedFormControl(assignment.ownerId || ''),\n      position: new UntypedFormControl(assignment.position),\n      // ...(assignment.part?.withAssistant && {\n      assistant: new UntypedFormControl(assignment.assistant || ''),\n      // }),\n      // ...(assignment.part?.withTitle && {\n      title: new UntypedFormControl(assignment.title || ''),\n      // }),\n      // ...(assignment.number && {\n      number: new UntypedFormControl(assignment.number || '')\n      // }),\n    });\n  }\n  static #_ = this.ɵfac = function AssignmentControlService_Factory(t) {\n    return new (t || AssignmentControlService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssignmentControlService,\n    factory: AssignmentControlService.ɵfac\n  });\n}","map":{"version":3,"names":["UntypedFormControl","UntypedFormGroup","UntypedFormArray","AssignmentControlService","constructor","toFormGroup","assignmentsByWeek","group","forEach","wAssignments","wIndex","weekArray","assignment","position","toAssignmentControl","week","part","assignee","hall","ownerId","assistant","title","number","_","_2","factory","ɵfac"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\modules\\assignments\\services\\assignment-control.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UntypedFormControl, Validators, UntypedFormGroup, UntypedFormArray } from '@angular/forms';\r\n\r\nimport { AssignmentDropdown } from '@src/app/modules/assignments/models/assignment-dropdown.model';\r\nimport { Assignment } from '@src/app/core/models/assignment/assignment.model';\r\n\r\n@Injectable()\r\nexport class AssignmentControlService {\r\n  constructor() {}\r\n\r\n  toFormGroup(assignmentsByWeek: Assignment[][]) {\r\n    const group: any = {};\r\n\r\n    assignmentsByWeek.forEach((wAssignments, wIndex) => {\r\n      const weekArray = [];\r\n\r\n      wAssignments.forEach((assignment) => {\r\n        // console.log(assignment);\r\n        weekArray[assignment.position] = this.toAssignmentControl(assignment);\r\n      });\r\n\r\n      group[wIndex] = new UntypedFormArray(weekArray);\r\n      // weekArray = [];\r\n    });\r\n\r\n    return new UntypedFormGroup(group);\r\n  }\r\n\r\n  toAssignmentControl(assignment: Assignment): UntypedFormGroup {\r\n    return new UntypedFormGroup({\r\n      week: new UntypedFormControl(assignment.week || ''),\r\n      part: new UntypedFormControl(assignment.part || ''),\r\n      assignee: new UntypedFormControl(assignment.assignee || ''),\r\n      hall: new UntypedFormControl(assignment.hall || ''),\r\n      ownerId: new UntypedFormControl(assignment.ownerId || ''),\r\n      position: new UntypedFormControl(assignment.position),\r\n      // ...(assignment.part?.withAssistant && {\r\n      assistant: new UntypedFormControl(assignment.assistant || ''),\r\n      // }),\r\n      // ...(assignment.part?.withTitle && {\r\n      title: new UntypedFormControl(assignment.title || ''),\r\n      // }),\r\n      // ...(assignment.number && {\r\n      number: new UntypedFormControl(assignment.number || ''),\r\n      // }),\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,kBAAkB,EAAcC,gBAAgB,EAAEC,gBAAgB,QAAQ,gBAAgB;;AAMnG,OAAM,MAAOC,wBAAwB;EACnCC,YAAA,GAAe;EAEfC,WAAWA,CAACC,iBAAiC;IAC3C,MAAMC,KAAK,GAAQ,EAAE;IAErBD,iBAAiB,CAACE,OAAO,CAAC,CAACC,YAAY,EAAEC,MAAM,KAAI;MACjD,MAAMC,SAAS,GAAG,EAAE;MAEpBF,YAAY,CAACD,OAAO,CAAEI,UAAU,IAAI;QAClC;QACAD,SAAS,CAACC,UAAU,CAACC,QAAQ,CAAC,GAAG,IAAI,CAACC,mBAAmB,CAACF,UAAU,CAAC;MACvE,CAAC,CAAC;MAEFL,KAAK,CAACG,MAAM,CAAC,GAAG,IAAIR,gBAAgB,CAACS,SAAS,CAAC;MAC/C;IACF,CAAC,CAAC;;IAEF,OAAO,IAAIV,gBAAgB,CAACM,KAAK,CAAC;EACpC;EAEAO,mBAAmBA,CAACF,UAAsB;IACxC,OAAO,IAAIX,gBAAgB,CAAC;MAC1Bc,IAAI,EAAE,IAAIf,kBAAkB,CAACY,UAAU,CAACG,IAAI,IAAI,EAAE,CAAC;MACnDC,IAAI,EAAE,IAAIhB,kBAAkB,CAACY,UAAU,CAACI,IAAI,IAAI,EAAE,CAAC;MACnDC,QAAQ,EAAE,IAAIjB,kBAAkB,CAACY,UAAU,CAACK,QAAQ,IAAI,EAAE,CAAC;MAC3DC,IAAI,EAAE,IAAIlB,kBAAkB,CAACY,UAAU,CAACM,IAAI,IAAI,EAAE,CAAC;MACnDC,OAAO,EAAE,IAAInB,kBAAkB,CAACY,UAAU,CAACO,OAAO,IAAI,EAAE,CAAC;MACzDN,QAAQ,EAAE,IAAIb,kBAAkB,CAACY,UAAU,CAACC,QAAQ,CAAC;MACrD;MACAO,SAAS,EAAE,IAAIpB,kBAAkB,CAACY,UAAU,CAACQ,SAAS,IAAI,EAAE,CAAC;MAC7D;MACA;MACAC,KAAK,EAAE,IAAIrB,kBAAkB,CAACY,UAAU,CAACS,KAAK,IAAI,EAAE,CAAC;MACrD;MACA;MACAC,MAAM,EAAE,IAAItB,kBAAkB,CAACY,UAAU,CAACU,MAAM,IAAI,EAAE;MACtD;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAvCUpB,wBAAwB;EAAA;EAAA,QAAAqB,EAAA,G;WAAxBrB,wBAAwB;IAAAsB,OAAA,EAAxBtB,wBAAwB,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}