{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Directive, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatRadioGroupBase, MAT_RADIO_GROUP, _MatRadioButtonBase, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nconst _c0 = function (a0) {\n  return {\n    enterDuration: a0\n  };\n};\nconst _c1 = [\"*\"];\nexport { MAT_RADIO_DEFAULT_OPTIONS as MAT_LEGACY_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP as MAT_LEGACY_RADIO_GROUP, MatRadioChange as MatLegacyRadioChange } from '@angular/material/radio';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n * @deprecated Use `MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatLegacyRadioGroup),\n  multi: true\n};\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n * @deprecated Use `MatRadioGroup` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioGroup extends _MatRadioGroupBase {}\nMatLegacyRadioGroup.ɵfac = /* @__PURE__ */function () {\n  let ɵMatLegacyRadioGroup_BaseFactory;\n  return function MatLegacyRadioGroup_Factory(t) {\n    return (ɵMatLegacyRadioGroup_BaseFactory || (ɵMatLegacyRadioGroup_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyRadioGroup)))(t || MatLegacyRadioGroup);\n  };\n}();\nMatLegacyRadioGroup.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLegacyRadioGroup,\n  selectors: [[\"mat-radio-group\"]],\n  contentQueries: function MatLegacyRadioGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatLegacyRadioButton, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._radios = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"],\n  exportAs: [\"matRadioGroup\"],\n  features: [i0.ɵɵProvidersFeature([MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n    provide: MAT_RADIO_GROUP,\n    useExisting: MatLegacyRadioGroup\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-radio-group',\n      exportAs: 'matRadioGroup',\n      providers: [MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n        provide: MAT_RADIO_GROUP,\n        useExisting: MatLegacyRadioGroup\n      }],\n      host: {\n        'role': 'radiogroup',\n        'class': 'mat-radio-group'\n      }\n    }]\n  }], null, {\n    _radios: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatLegacyRadioButton), {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n * @deprecated Use `MatRadioButton` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioButton extends _MatRadioButtonBase {\n  constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n    super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n  }\n}\nMatLegacyRadioButton.ɵfac = function MatLegacyRadioButton_Factory(t) {\n  return new (t || MatLegacyRadioButton)(i0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i2.UniqueSelectionDispatcher), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n};\nMatLegacyRadioButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatLegacyRadioButton,\n  selectors: [[\"mat-radio-button\"]],\n  hostAttrs: [1, \"mat-radio-button\"],\n  hostVars: 17,\n  hostBindings: function MatLegacyRadioButton_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatLegacyRadioButton_focus_HostBindingHandler() {\n        return ctx._inputElement.nativeElement.focus();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n      i0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matRadioButton\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 13,\n  vars: 19,\n  consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", 3, \"id\", \"checked\", \"disabled\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]],\n  template: function MatLegacyRadioButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"label\", 0, 1)(2, \"span\", 2);\n      i0.ɵɵelement(3, \"span\", 3)(4, \"span\", 4);\n      i0.ɵɵelementStart(5, \"input\", 5, 6);\n      i0.ɵɵlistener(\"change\", function MatLegacyRadioButton_Template_input_change_5_listener($event) {\n        return ctx._onInputInteraction($event);\n      })(\"click\", function MatLegacyRadioButton_Template_input_click_5_listener($event) {\n        return ctx._onInputClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\", 7);\n      i0.ɵɵelement(8, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"span\", 9)(10, \"span\", 10);\n      i0.ɵɵtext(11, \"\\xA0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵattribute(\"for\", ctx.inputId);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n      i0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", i0.ɵɵpureFunction1(17, _c0, ctx._noopAnimations ? 0 : 150));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    }\n  },\n  dependencies: [i3.MatRipple],\n  styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.mat-radio-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyRadioButton, [{\n    type: Component,\n    args: [{\n      selector: 'mat-radio-button',\n      inputs: ['disableRipple', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matRadioButton',\n      host: {\n        'class': 'mat-radio-button',\n        '[class.mat-radio-checked]': 'checked',\n        '[class.mat-radio-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_noopAnimations',\n        '[class.mat-primary]': 'color === \"primary\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        // Needs to be removed since it causes some a11y issues (see #21266).\n        '[attr.tabindex]': 'null',\n        '[attr.id]': 'id',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null',\n        // Note: under normal conditions focus shouldn't land on this element, however it may be\n        // programmatically set, for example inside of a focus trap, in this case we want to forward\n        // the focus to the native element.\n        '(focus)': '_inputElement.nativeElement.focus()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n      styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.mat-radio-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatLegacyRadioGroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RADIO_GROUP]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: i2.UniqueSelectionDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RADIO_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatRadioModule` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioModule {}\nMatLegacyRadioModule.ɵfac = function MatLegacyRadioModule_Factory(t) {\n  return new (t || MatLegacyRadioModule)();\n};\nMatLegacyRadioModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLegacyRadioModule\n});\nMatLegacyRadioModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatRippleModule, MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacyRadioModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule],\n      exports: [MatLegacyRadioGroup, MatLegacyRadioButton, MatCommonModule],\n      declarations: [MatLegacyRadioGroup, MatLegacyRadioButton]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatLegacyRadioButton, MatLegacyRadioGroup, MatLegacyRadioModule };","map":{"version":3,"names":["i0","forwardRef","Directive","ContentChildren","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","Attribute","NgModule","i3","MatRippleModule","MatCommonModule","i1","i2","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","_MatRadioGroupBase","MAT_RADIO_GROUP","_MatRadioButtonBase","MAT_RADIO_DEFAULT_OPTIONS","_c0","a0","enterDuration","_c1","MAT_LEGACY_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_RADIO_GROUP","MatRadioChange","MatLegacyRadioChange","MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatLegacyRadioGroup","multi","ɵfac","ɵMatLegacyRadioGroup_BaseFactory","MatLegacyRadioGroup_Factory","t","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","type","selectors","contentQueries","MatLegacyRadioGroup_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","MatLegacyRadioButton","_t","ɵɵqueryRefresh","ɵɵloadQuery","_radios","hostAttrs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","host","descendants","constructor","radioGroup","elementRef","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","tabIndex","MatLegacyRadioButton_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FocusMonitor","UniqueSelectionDispatcher","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","hostVars","hostBindings","MatLegacyRadioButton_HostBindings","ɵɵlistener","MatLegacyRadioButton_focus_HostBindingHandler","_inputElement","nativeElement","focus","ɵɵattribute","id","ɵɵclassProp","checked","disabled","_noopAnimations","color","inputs","disableRipple","ngContentSelectors","decls","vars","consts","template","MatLegacyRadioButton_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵelement","MatLegacyRadioButton_Template_input_change_5_listener","$event","_onInputInteraction","MatLegacyRadioButton_Template_input_click_5_listener","_onInputClick","ɵɵelementEnd","ɵɵtext","ɵɵprojection","_r0","ɵɵreference","inputId","ɵɵadvance","ɵɵproperty","required","name","value","ariaLabel","ariaLabelledby","ariaDescribedby","_isRippleDisabled","ɵɵpureFunction1","labelPosition","dependencies","MatRipple","styles","encapsulation","changeDetection","None","OnPush","decorators","undefined","MatLegacyRadioModule","MatLegacyRadioModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/CSEG/Desktop/thassign/node_modules/@angular/material/fesm2020/legacy-radio.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Directive, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatRadioGroupBase, MAT_RADIO_GROUP, _MatRadioButtonBase, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nexport { MAT_RADIO_DEFAULT_OPTIONS as MAT_LEGACY_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP as MAT_LEGACY_RADIO_GROUP, MatRadioChange as MatLegacyRadioChange } from '@angular/material/radio';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n * @deprecated Use `MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacyRadioGroup),\n    multi: true,\n};\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n * @deprecated Use `MatRadioGroup` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioGroup extends _MatRadioGroupBase {\n}\nMatLegacyRadioGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioGroup, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatLegacyRadioGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyRadioGroup, selector: \"mat-radio-group\", host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-radio-group\" }, providers: [\n        MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n        { provide: MAT_RADIO_GROUP, useExisting: MatLegacyRadioGroup },\n    ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(function () { return MatLegacyRadioButton; }), descendants: true }], exportAs: [\"matRadioGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatLegacyRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                }]\n        }], propDecorators: { _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatLegacyRadioButton), { descendants: true }]\n            }] } });\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n * @deprecated Use `MatRadioButton` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatLegacyRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatLegacyRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacyRadioButton, selector: \"mat-radio-button\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"class.mat-radio-checked\": \"checked\", \"class.mat-radio-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"attr.tabindex\": \"null\", \"attr.id\": \"id\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-radio-button\" }, exportAs: [\"matRadioButton\"], usesInheritance: true, ngImport: i0, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.mat-radio-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\"], dependencies: [{ kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', inputs: ['disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, exportAs: 'matRadioButton', host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.mat-radio-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\"] }]\n        }], ctorParameters: function () { return [{ type: MatLegacyRadioGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_GROUP]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatRadioModule` from `@angular/material/radio` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRadioModule {\n}\nMatLegacyRadioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLegacyRadioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioModule, declarations: [MatLegacyRadioGroup, MatLegacyRadioButton], imports: [MatRippleModule, MatCommonModule], exports: [MatLegacyRadioGroup, MatLegacyRadioButton, MatCommonModule] });\nMatLegacyRadioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioModule, imports: [MatRippleModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacyRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatLegacyRadioGroup, MatLegacyRadioButton, MatCommonModule],\n                    declarations: [MatLegacyRadioGroup, MatLegacyRadioButton],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatLegacyRadioButton, MatLegacyRadioGroup, MatLegacyRadioModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}