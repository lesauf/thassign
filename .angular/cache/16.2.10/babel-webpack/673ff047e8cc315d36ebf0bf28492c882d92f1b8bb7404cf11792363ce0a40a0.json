{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ControlMessagesComponent_div_0_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, message_r2), \" \");\n  }\n}\nfunction ControlMessagesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"ul\");\n    i0.ɵɵtemplate(2, ControlMessagesComponent_div_0_li_2_Template, 3, 3, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errorMessage);\n  }\n}\n/**\r\n * Handle the form validation and display of errors\r\n * @see https://coryrylan.com/blog/angular-form-builder-and-validation-management\r\n */\nexport class ControlMessagesComponent {\n  constructor() {}\n  ngOnInit() {\n    this.getControlNameFromParentForm();\n  }\n  get errorMessage() {\n    const errors = this.control.parent.errors;\n    // for (const propertyName in this.control.parent.errors) {\n    if (errors && errors.hasOwnProperty(this.controlName) && this.control.touched) {\n      return errors[this.controlName];\n    }\n    // }\n    return null;\n  }\n  getControlNameFromParentForm() {\n    const formGroup = this.control.parent.controls;\n    this.controlName = Object.keys(formGroup).find(name => this.control === formGroup[name]) || null;\n  }\n  static #_ = this.ɵfac = function ControlMessagesComponent_Factory(t) {\n    return new (t || ControlMessagesComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ControlMessagesComponent,\n    selectors: [[\"app-control-messages\"]],\n    inputs: {\n      control: \"control\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"app-control-messages\", 4, \"ngIf\"], [1, \"app-control-messages\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ControlMessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ControlMessagesComponent_div_0_Template, 3, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage !== null);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf],\n    styles: [\"div.app-control-messages[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2wtbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGIiwiZmlsZSI6ImNvbnRyb2wtbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYuYXBwLWNvbnRyb2wtbWVzc2FnZXMgdWwge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG4iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY29udHJvbC1tZXNzYWdlcy9jb250cm9sLW1lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQUE7QUFDRjtBQUNBLDRXQUE0VyIsInNvdXJjZXNDb250ZW50IjpbImRpdi5hcHAtY29udHJvbC1tZXNzYWdlcyB1bCB7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ControlMessagesComponent,\n    factory: ControlMessagesComponent.ɵfac\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","message_r2","ɵɵtemplate","ControlMessagesComponent_div_0_li_2_Template","ɵɵproperty","ctx_r0","errorMessage","ControlMessagesComponent","constructor","ngOnInit","getControlNameFromParentForm","errors","control","parent","hasOwnProperty","controlName","touched","formGroup","controls","Object","keys","find","name","_","_2","selectors","inputs","decls","vars","consts","template","ControlMessagesComponent_Template","rf","ctx","ControlMessagesComponent_div_0_Template","factory","ɵfac"],"sources":["C:\\Users\\CSEG\\Desktop\\thassign\\src\\app\\shared\\components\\control-messages\\control-messages.component.ts"],"sourcesContent":["import { Component, Injectable, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, UntypedFormControl } from '@angular/forms';\r\nimport { ValidationService } from '@src/app/core/services/validation.service';\r\n\r\n@Injectable()\r\n@Component({\r\n  selector: 'app-control-messages',\r\n  template: `\r\n    <div *ngIf=\"errorMessage !== null\" class=\"app-control-messages\">\r\n      <ul>\r\n        <li *ngFor=\"let message of errorMessage\">\r\n          {{ message | translate }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  `,\r\n\r\n  styleUrls: ['control-messages.component.scss'],\r\n})\r\n/**\r\n * Handle the form validation and display of errors\r\n * @see https://coryrylan.com/blog/angular-form-builder-and-validation-management\r\n */\r\nexport class ControlMessagesComponent implements OnInit {\r\n  @Input()\r\n  control: UntypedFormControl;\r\n\r\n  controlName: string;\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.getControlNameFromParentForm();\r\n  }\r\n\r\n  get errorMessage() {\r\n    const errors = this.control.parent.errors;\r\n    // for (const propertyName in this.control.parent.errors) {\r\n    if (\r\n      errors &&\r\n      errors.hasOwnProperty(this.controlName) &&\r\n      this.control.touched\r\n    ) {\r\n      return errors[this.controlName];\r\n    }\r\n    // }\r\n\r\n    return null;\r\n  }\r\n\r\n  getControlNameFromParentForm() {\r\n    const formGroup = this.control.parent.controls;\r\n    this.controlName =\r\n      Object.keys(formGroup).find((name) => this.control === formGroup[name]) ||\r\n      null;\r\n  }\r\n}\r\n"],"mappings":";;;;IAUQA,EAAA,CAAAC,cAAA,SAAyC;IACvCD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAL,EAAA,CAAAM,WAAA,OAAAC,UAAA,OACF;;;;;IAJJP,EAAA,CAAAC,cAAA,aAAgE;IAE5DD,EAAA,CAAAQ,UAAA,IAAAC,4CAAA,gBAEK;IACPT,EAAA,CAAAG,YAAA,EAAK;;;;IAHqBH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAU,UAAA,YAAAC,MAAA,CAAAC,YAAA,CAAe;;;AAS/C;;;;AAIA,OAAM,MAAOC,wBAAwB;EAKnCC,YAAA,GAAe;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACC,4BAA4B,EAAE;EACrC;EAEA,IAAIJ,YAAYA,CAAA;IACd,MAAMK,MAAM,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAACF,MAAM;IACzC;IACA,IACEA,MAAM,IACNA,MAAM,CAACG,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC,IACvC,IAAI,CAACH,OAAO,CAACI,OAAO,EACpB;MACA,OAAOL,MAAM,CAAC,IAAI,CAACI,WAAW,CAAC;;IAEjC;IAEA,OAAO,IAAI;EACb;EAEAL,4BAA4BA,CAAA;IAC1B,MAAMO,SAAS,GAAG,IAAI,CAACL,OAAO,CAACC,MAAM,CAACK,QAAQ;IAC9C,IAAI,CAACH,WAAW,GACdI,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,IAAI,CAAEC,IAAI,IAAK,IAAI,CAACV,OAAO,KAAKK,SAAS,CAACK,IAAI,CAAC,CAAC,IACvE,IAAI;EACR;EAAC,QAAAC,CAAA,G;qBA/BUhB,wBAAwB;EAAA;EAAA,QAAAiB,EAAA,G;UAAxBjB,wBAAwB;IAAAkB,SAAA;IAAAC,MAAA;MAAAd,OAAA;IAAA;IAAAe,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAfjCtC,EAAA,CAAAQ,UAAA,IAAAgC,uCAAA,iBAMM;;;QANAxC,EAAA,CAAAU,UAAA,SAAA6B,GAAA,CAAA3B,YAAA,UAA2B;;;;;;;WAexBC,wBAAwB;IAAA4B,OAAA,EAAxB5B,wBAAwB,CAAA6B;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}